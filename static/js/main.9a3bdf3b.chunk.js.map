{"version":3,"sources":["data/exampleFlows.ts","components/Common/ExpandingSearchbar.tsx","components/Hub/StarRating.tsx","views/LogIn.tsx","components/Hub/BuildHistory.tsx","components/Hub/ImageDetails.tsx","components/Hub/Readme.tsx","components/Hub/CopyCommand.tsx","components/Hub/ReviewCard.tsx","components/Hub/ImageReviews.tsx","views/PackageView.tsx","components/Hub/ImageCard.tsx","views/HubView.tsx","logger.ts","helpers/serialise.ts","helpers/flow-chart.ts","helpers/format.ts","helpers/utils.ts","settings.ts","flux/dispatcher.ts","components/Layout/MainNavbar/NavbarSpacer.tsx","components/Layout/MainNavbar/NavbarToggle.tsx","components/Layout/MainNavbar/ConnectionIndicator.tsx","components/Layout/MainNavbar/UserActions.tsx","components/Layout/MainNavbar/NavLogo.tsx","components/Layout/MainNavbar/MainNavbar.tsx","components/Layout/MainSidebar/SidebarMainNavbar.tsx","components/Layout/MainSidebar/SidebarNavItem.tsx","components/Layout/MainSidebar/SidebarNavItems.tsx","components/Layout/MainSidebar/MainSidebar.tsx","components/Layout/MainFooter.tsx","components/Common/CookiesBanner.tsx","components/Common/InfoToast.tsx","components/Common/ConnectionToast.tsx","modals/PasteYAML.tsx","modals/WriteReview.tsx","modals/LogDetails.tsx","layouts/IconSidebar.tsx","layouts/HubLayout.tsx","components/Common/PageTitle.tsx","flux/constants.ts","flux/tranformLog.ts","redux/flows/flows.constants.ts","components/Common/MultiFilterSelect.tsx","routes/Hub.tsx","redux/flows/flows.selectors.ts","data/tooltipConfig.ts","redux/flows/flows.actions.ts","components/FlowChart/FlowSelection.tsx","components/FlowChart/CommandBar.tsx","components/FlowChart/Tooltip.tsx","components/FlowChart/ChartNode.tsx","components/FlowChart/NodePort.tsx","components/FlowChart/SidebarItem.tsx","components/FlowChart/Sidebar.tsx","components/LogStream/levels.ts","components/LogStream/BarChartBase.tsx","components/LogStream/LogLevelSummaryChart.tsx","components/LogStream/PieChartBase.tsx","components/LogStream/LogLevelPieChart.tsx","components/LogStream/LogItem.tsx","components/LogStream/LogsTableHeader.tsx","components/LogStream/LogGroup.tsx","components/LogStream/LogsTable.tsx","views/LogsView.tsx","components/Task/ElapsedCard.tsx","components/Task/ProgressCard.tsx","components/Task/SpeedCard.tsx","components/Task/BarChartCard.tsx","components/Task/QueriesPerSecond.tsx","views/TaskView.tsx","components/Settings/options.ts","components/Settings/FormItem.tsx","redux/settings/settings.selectors.ts","components/Settings/Settings.tsx","redux/settings/settings.actions.ts","views/Settings.tsx","routes/Dashboard.tsx","views/FlowView.tsx","theme.ts","redux/flows/flows.reducer.ts","redux/settings/settings.reducer.ts","redux/index.ts","index.tsx","routes/index.ts","withTracker.tsx","views/FallbackPage.tsx","apps/Hub.tsx","flux/api.ts","flux/store.ts","data/sidebar-nav-items.ts","flux/index.ts","flux/config.ts","redux/settings/settings.constants.ts","components/Common/HelpCard.tsx","views/NotFound.tsx"],"names":["pokedex","name","type","yaml","flower","southpark","ExpandingSearchbar","value","onChange","placeholder","variant","className","Prepend","Text","Control","e","target","Append","onClick","getStars","amount","rate","i","handleRatingClick","index","stars","integer","Math","floor","remainder","push","key","j","length","StarRating","rating","userRated","totalRatings","Login","componentDidMount","hash","window","location","href","codeIndex","indexOf","code","substring","hubURL","render","fluid","noGutters","lg","md","src","style","maxWidth","alt","id","React","Component","BuildHistory","buildHistory","image","map","build","idx","formattedCreated","Date","created","toLocaleString","buildSize","size","toFixed","os","architecture","ImageDetails","version","author","description","documentation","rel","source","license","vendor","url","ReadMe","readme","dangerouslySetInnerHTML","__html","CopyCommand","copyCode","imageVar","repoTags","language","atomOneLight","ReviewCard","review","username","content","ImageReviews","reviews","newReview","PackageView","props","getImageData","componentWillUnmount","Store","removeListener","a","getHubImage","state","imageId","imageData","setState","loading","Dispatcher","dispatch","actionType","Constants","POST_RATING","payload","copyToClipboard","SHOW_BANNER","SHOW_MODAL","modal","modalParams","readmeHTML","totalStars","Container","Row","PageTitle","title","Col","windowHash","windowParams","URLSearchParams","get","on","ImageCard","official","to","Card","Body","xs","sm","Footer","width","categoryOptions","label","sortOptions","HubView","getHubImages","images","sortBy","sortType","search","setCategory","category","updateSearch","searchQuery","SEARCH_HUB","q","sort","MultiFilterSelect","options","onFilterChange","option","isSearchable","Object","keys","handleErrorMessage","msg","line","logger","log","pushLog","data","logs","arg","logsEnabled","args","arguments","console","isEnabled","enable","_navigator","navigator","addEventListener","disable","removeEventListener","setFormat","format","logsFormat","exportLogs","JSON","stringify","filename","blob","Blob","saveAs","toBlob","serializeLogsToCSVBlob","reduce","acc","formattedTimestamp","process","levelname","lineno","module","funcName","pathname","serializeLogsToCSV","serializeLogsToJSONBlob","fileContent","serializeLogsToJSON","serializeLogsToTextBlob","serializeLogsToText","settings","require","formatForFlowchart","pods","canvas","formatted","offset","x","y","nodes","links","selected","hovered","scale","with","prevNode","gateway","newPods","forEach","pod","node","ports","needs","send_to","position","properties","parents","Array","isArray","nodeFrom","linkId","link","color","from","nodeId","portId","parseInt","depthPopulation","offsetX","nodeOffset","offsetY","depth","getNodeDepth","currentId","currentDepth","longestDepth","parent","propertyList","propertyTypes","prop","parseYAML","yamlSTR","yamlStrWithoutTag","test","split","slice","join","YAML","error","alert","formatAsYAML","chart","chartWith","needsByPodLabel","values","curr","nodeLabelsByPortId","getNodeLabelsByPortId","outPort","neededBy","inPort","arr","podProperties","entries","propValue","propName","decodePropValue","output","board","formatSeconds","numSeconds","minute","hour","formatBytes","numBytes","str","temp","document","createElement","body","appendChild","select","execCommand","removeChild","DispatcherBase","NavbarSpacer","NavbarToggle","toggleSidebar","ConnectionIndicator","connected","reconnect","pill","theme","UserActions","user","logOut","userActionsVisible","toggleUserActions","tag","Dropdown","caret","toggle","NavLink","_json","avatar_url","DropdownMenu","right","small","open","Link","NavLogo","lineHeight","MainNavbar","usesAuth","usesConnection","hideSidebarToggle","showLogo","useState","setUserActionsVisible","navbar","isVisible","item","hasSubItems","items","path","useLocation","active","matches","match","RouteNavLink","iconName","top","subItem","navItems","nav","SidebarNavItem","MainSidebar","menuVisible","sidebarNavItems","classes","classNames","SidebarMainNavbar","SidebarNavItems","MainFooter","menuItems","copyright","loggerEnabled","enableLogger","disableLogger","defaultProps","contained","CookiesBanner","acceptCookies","Button","InfoToast","icon","Toast","Header","closeButton","data-name","message","ConnectionToast","overlay","backgroundColor","border","bottom","maxHeight","left","padding","transform","overflow","inputRef","closeModal","importYAML","ariaHideApp","isOpen","contentLabel","shouldCloseOnOverlayClick","onRequestClose","closeTimeoutMS","Form","Group","Label","ref","as","rows","submitReview","hiddenKeys","filter","includes","IconSidebarLayout","getData","getUser","getModal","getModalParams","isLoading","banner","getBanner","getConnectionStatus","getMenuState","getSidebarItems","localStorage","setItem","String","acceptedCookies","CLOSE_MODAL","yamlString","IMPORT_CUSTOM_YAML","POST_REVIEW","RECONNECT","LOG_OUT","TOGGLE_SIDEBAR","storeCopy","getStoreCopy","children","LogDetails","PasteYAML","WriteReview","getItem","HubLayout","subtitle","SET_CURRENT_TAB","SELECT_NODE","SHOW_LOG_AT_INDEX","SAVE_SETTINGS","LOAD_FLOW","SHOW_POD_IN_FLOW","CREATE_NEW_FLOW","UPDATE_FLOW","DUPLICATE_FLOW","DELETE_FLOW","transformLog","createdDate","fromUnixTime","nanoid","unixTime","timestamp","initialFlow","customStyles","dropdownIndicator","styles","indicatorSeparator","opacity","container","provided","selectProps","cursor","control","background","isMulti","clearAfter","rest","undefined","val","readOnly","hubRoutes","exact","layout","component","NotFound","LogIn","selectFlowChart","flowState","flows","selectedFlow","selectFlows","selectSelectedFlowId","tooltipConfig","tooltipsGlobal","showTooltip","toogleOffWhenClicked","text","updateFlow","flow","SelectionIndicator","show","TitleConnectionIndicator","DeleteFlowButton","deleteFlow","EditFlowsButton","isEditing","toggleEditing","FlowSelection","loadFlow","selectedFlowId","createNewFlow","setIsEditing","userFlows","exampleFlows","currentFlow","Toggle","Menu","Item","currentIsEditing","flowId","ChartNode","importChart","copyChart","exportImage","ButtonGroup","disabled","Tooltip","tooltip","list","isSpecial","isGateway","labelText","Badge","replicas","NodePort","data-html2canvas-ignore","SidebarItem","draggable","onDragStart","event","dataTransfer","setData","REACT_FLOW_CHART","ReadOnly","duplicateFlow","EditLink","updateLink","deleteSelection","nodeFromId","nodeToId","choices","FormControl","choice","EditNode","updateLabel","updateNewValue","updateExistingValue","availableProperties","setSearchQuery","filteredProperties","setFilteredProperties","useEffect","results","property","toLowerCase","spellCheck","searchString","newProperties","PodMenu","defaultPods","FlowChartSidebar","readonly","updateNode","selectedId","selectedType","setNode","selectedNode","parseNode","newNode","_","cloneDeep","getLevels","colorPalette","palette","INFO","borderColor","info","SUCCESS","success","WARNING","warning","ERROR","CRITICAL","critical","DEBUG","debug","getParsedDatasets","levels","level","levelData","tick","barPercentage","categoryPercentage","fill","getLabels","labels","ChartBase","height","numTicks","timeLabels","canvasRef","useRef","chartInstance","setChartInstance","useTheme","onClickChart","activePoints","getElementsAtEvent","getXAxisLabel","useCallback","getYAxisLabel","Number","isInteger","ChartLegend","current","chartOptions","animation","duration","events","maintainAspectRatio","responsive","legend","display","tooltips","enabled","elements","point","radius","hitRadius","scales","xAxes","stacked","ticks","maxRotation","autoSkip","callback","gridLines","zeroLineColor","yAxes","scaleLabel","borderDash","drawBorder","suggestedMin","maxTicksLimit","chartConfig","datasets","newChartInstance","ChartElement","chartData","update","LogLevelSummaryChart","showLog","setTimeSelection","timeOptions","selectedTime","PieChartBase","getColor","names","borderWidth","boxWidth","mode","LogLevelPieChart","LogItem","memo","columns","showLogDetails","logData","logName","levelInitial","firstCol","secondCol","thirdCol","css","textOverflow","whiteSpace","paddingRight","marginRight","areEqual","LogsTableHeader","_icons","pending","failed","CountSummary","numItems","StatusIcon","status","find","k","getStatusFromLevels","ExpandController","expanded","LogGroup","group","setExpanded","prev","Collapse","in","timeout","VIEW_PREFERENCE_NAME","saveOptions","viewOptions","table","getInitialView","preference","getUserViewPreference","_lastNumLogs","_searchIndex","FlexSearch","create","doc","field","saveLogData","generateFileName","itemKey","arrayLikeToArray","arrayLike","toOption","LogsList","listRef","scrolledToBottom","setScrolledToBottom","scrollToItem","onScroll","scrollOffset","itemCount","itemSize","itemData","GroupedLogs","groupedData","grouping","LogsTable","currentView","setCurrentView","selectedSources","setSelectedSources","selectedLevels","setSelectedLevels","searchResults","setSearchResults","setSearchString","newData","add","setView","view","unfiltered","sources","Set","resultData","result","filters","podNames","podName","startsWith","countBy","levelItem","chartUpdateInterval","logsUpdateInterval","TIME_PREFERENCE_NAME","chartLabels","getInitialTimeSelection","getUserTimePreference","ElapsedCard","elapsed","task_name","seconds","ProgressCard","progress","hoverBorderColor","cutoutPercentage","percent","num_bars","bar_len","currentRequest","SpeedCard","speed","history","maxValue","max","minValue","min","getChartOptions","difference","tension","suggestedMax","getChartConfig","primary","newChartData","unit","BarChartCard","currentTab","setCurrentTab","callbacks","tooltipItem","xLabel","datasetIndex","afterLabel","d","sent","pointBackgroundColor","default","pointHoverBackgroundColor","received","getChartData","newOptions","QueriesPerSecondCard","qps","TaskView","taskData","getTaskData","xl","QueriesPerSecond","messages","bytes","lastUpdate","lastUpdateChart","baseOptions","advancedOptions","FormItem","colSpan","selectSettings","settingsState","SettingsCard","updates","setUpdates","useSelector","useDispatch","changeSetting","setting","newUpdates","form","aria-controls","aria-expanded","UPDATE_SETTINGS","updateSettings","SettingsView","Settings","dashboardRoutes","IconSidebar","hasNewLogs","getLogs","setLogs","setSelectedTime","getLogLevelOccurences","logLevelOccurrences","setLogLevelOccurrences","getLogLevelCharts","logLevelCharts","setLogLevelCharts","updateChart","newCharts","checkForNewLogs","newLogs","newOccurrences","updateLogs","onNewLogs","setInterval","clearInterval","timeSelection","_index","showLogInTable","lastLog","time","flowChart","flowType","chartWithTooltips","getAvailableProperties","setConnected","showOverlay","setShowOverlay","actionCallbacks","actions","obj","action","newChartTransformer","newChart","chartContainer","querySelector","preventDefault","showCaptureOverlay","stopPropagation","extension","captureOverlay","classList","setTimeout","canvasParams","foreignObjectRendering","logging","scrollX","scrollY","html2canvas","then","toDataURL","getElementById","setAttribute","click","Components","TooltipComponent","NodeInner","CustomNode","Port","CustomPort","config","validateLink","fromNodeId","toNodeId","fromPortId","toPortId","Sidebar","customYAML","onDeleteKey","fromId","toId","PERSIAN_GREEN","GOLDEN_TANOI","secondary","initialState","storedFlows","parse","isEmpty","_userFlow","getUserFlows","parsed","getExampleFlows","_deleteFlow","stateWithoutFlow","omit","nonExampleFlows","idFirstNonExampleFlow","_createNewFlow","prefixString","userFlowNumbers","userFlow","b","largestNumber","_updateFlow","newFlow","_loadFlow","_saveSettingsInStore","App","rootReducer","combineReducers","intialSettings","newSettings","newSettingsState","store","createStore","composeWithDevTools","Hub","ReactDOM","GoogleAnalytics","initialize","REACT_APP_GAID","withTracker","WrappedComponent","trackPage","page","set","pageview","BASENAME","REACT_APP_BASENAME","HOC","this","prevProps","currentPage","nextPage","FallbackPage","resetErrorBoundary","basename","routes","route","FallbackComponent","onReset","init","logStream","taskStream","hub","axios","baseURL","withCredentials","headers","Accept","connect","connectionUpdate","logUpdate","taskUpdate","logString","host","port","close","EventSource","onopen","onmessage","m","onerror","taskString","profile","getProfile","getYAML","connectionString","getImages","getImage","postRating","post","postReview","searchHub","getInitialStore","shutdown","ready","logSources","logLevels","logLevelOccurences","logIndex","summaryCharts","processes","_updateTaskInterval","_bannerTimeout","_store","hostname","registerActions","showModal","showBanner","importCustomYAML","showLogAtIndex","saveSettings","showPodByLabel","clearIntervals","initFlowChart","initLogStream","initHub","initUser","emit","api","connectedFlow","handleLogConnectionStatus","handleNewLog","handleNewTaskEvent","speed_unit","bytes_recv","bytes_sent","msg_recv","msg_sent","num_reqs","msgData","bytesData","parseFloat","shift","flowchart","saveFlowsToStorage","flowNumbers","f","toSave","showError","reload","clearTimeout","hideBanner","getCurrentTab","getSettings","getLogSources","getLogLevels","getSummaryCharts","emptyItem","step","currentInterval","ceil","now","occurence","logEntry","lastTimestamp","getActivePanel","getFlowchart","getFlows","getSelectedFlowId","getIndexedLog","register","peakLogs","peakStore","EventEmitter","HelpCard"],"mappings":"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","file":"static/js/main.9a3bdf3b.chunk.js","sourcesContent":["export default {\n  pokedex: {\n    name: \"Pokedex Query\",\n    type: \"example\",\n    yaml: `!Flow\n    with:\n      read_only: true\n      rest_api: true\n      port_expose: $JINA_PORT\n      board:\n        canvas:\n          gateway:\n            x: 250\n            y: 150\n          chunk_seg:\n            x: 250\n            y: 268\n          tf_encode:\n            x: 250\n            y: 420\n          chunk_idx:\n            x: 250\n            y: 600\n          ranker:\n            x: 250\n            y: 836\n          doc_idx:\n            x: 249\n            y: 985\n    pods:\n      gateway: {}\n      chunk_seg:\n        uses: pods/craft.yml\n        parallel: $PARALLEL\n        needs: gateway\n      tf_encode:\n        uses: pods/encode.yml\n        parallel: $PARALLEL\n        timeout_ready: 600000\n        needs: chunk_seg\n      chunk_idx:\n        uses: pods/chunk.yml\n        shards: $SHARDS\n        separated_workspace: true\n        polling: all\n        uses_reducing: _merge_all\n        timeout_ready: 100000\n        needs: tf_encode\n      ranker:\n        uses: BiMatchRanker\n        needs: chunk_idx\n      doc_idx:\n        uses: pods/doc.yml\n        needs: ranker\n    \n    `,\n  },\n  flower: {\n    name: \"Flower Search Query\",\n    type: \"example\",\n    yaml: `!Flow\n    with:\n      read_only: true\n      port_expose: $JINA_PORT\n      board:\n        canvas:\n          gateway:\n            x: 250\n            y: 150\n          loader:\n            x: 250\n            y: 257\n          flipper:\n            x: 252\n            y: 407\n          normalizer:\n            x: 239\n            y: 563\n          encoder:\n            x: 252\n            y: 712\n          chunk_indexer:\n            x: 250\n            y: 872\n          ranker:\n            x: 252\n            y: 1066\n          doc_indexer:\n            x: 253\n            y: 1199\n    pods:\n      gateway: {}\n      loader:\n        uses: yaml/craft-load.yml\n        read_only: true\n        needs: gateway\n      flipper:\n        uses: yaml/craft-flip.yml\n        read_only: true\n        needs: loader\n      normalizer:\n        uses: yaml/craft-normalize.yml\n        read_only: true\n        needs: flipper\n      encoder:\n        uses: $ENCODER\n        timeout_ready: 600000\n        read_only: true\n        needs: normalizer\n      chunk_indexer:\n        uses: yaml/index-chunk.yml\n        separated_workspace: true\n        polling: all\n        uses_reducing: _merge_all\n        needs: encoder\n      ranker:\n        uses: MinRanker\n        needs: chunk_indexer\n      doc_indexer:\n        uses: yaml/index-doc.yml\n        needs: ranker  \n    `,\n  },\n  southpark: {\n    name: \"Southpark Query\",\n    type: \"example\",\n    yaml: `!Flow\n    with:\n      read_only: true\n      port_expose: $JINA_PORT\n      board:\n        canvas:\n          gateway:\n            x: 254\n            y: 147\n          splittor:\n            x: 254\n            y: 270\n          encoder:\n            x: 254\n            y: 448\n          chunk_indexer:\n            x: 251\n            y: 645\n          ranker:\n            x: 255\n            y: 862\n          doc_indexer:\n            x: 256\n            y: 1002\n    pods:\n      gateway: {}\n      splittor:\n        uses: pods/craft-split.yml\n        parallel: $PARALLEL\n        read_only: true\n        needs: gateway\n      encoder:\n        uses: pods/encode.yml\n        parallel: $PARALLEL\n        timeout_ready: 60000\n        read_only: true\n        needs: splittor\n      chunk_indexer:\n        uses: pods/index-chunk.yml\n        shards: $SHARDS\n        separated_workspace: true\n        polling: all\n        reducing_uses: _merge_all\n        needs: encoder\n      ranker:\n        uses: MinRanker\n        needs: chunk_indexer\n      doc_indexer:\n        uses: pods/index-doc.yml\n        needs: ranker\n    `,\n  },\n};\n","import React from \"react\";\nimport { Form, InputGroup } from \"react-bootstrap\";\n\ntype Props = {\n  value: string | number;\n  placeholder?:string;\n  variant?:string;\n  onChange: (newValue: string) => void;\n};\n\nfunction ExpandingSearchbar({ value, onChange,placeholder,variant }: Props) {\n  return (\n    <div className={`expanding-searchbar expanding-searchbar-${variant||\"default\"}`}>\n      <InputGroup>\n        <InputGroup.Prepend className=\"ml-auto\">\n          <InputGroup.Text>\n            <i className=\"material-icons\">search</i>\n          </InputGroup.Text>\n        </InputGroup.Prepend>\n        <Form.Control\n          type=\"text\"\n          placeholder={placeholder}\n          value={value}\n          onChange={(e: any) => onChange(e.target.value)}\n        />\n        <InputGroup.Append>\n          <InputGroup.Text>\n            <i className={`cursor-pointer text-muted material-icons mr-3 ${!value?'d-invisible':\"\"}`} onClick={()=>onChange(\"\")}>cancel</i>\n          </InputGroup.Text>\n        </InputGroup.Append>\n      </InputGroup>\n    </div>\n  );\n}\n\nexport { ExpandingSearchbar };\n","import React from \"react\";\n\ntype RatingFunction = (stars: number) => void;\ntype StarRatingProps = {\n  rating: any;\n  totalRatings:number;\n  userRated?: boolean;\n  rate?: RatingFunction;\n};\n\nconst StarRating = ({ rating, userRated, rate,totalRatings }: StarRatingProps) => {\n  const stars = getStars(rating, rate);\n  return (\n    <div\n      className={`d-inline-block app-rating mb-3 ${rating ? \"existing\" : \"\"} ${\n        userRated ? \"userRated\" : \"\"\n      } text-muted`}\n    >\n      <span className=\"text-faded\">{userRated ? \"You Rated: \" : \"\"}</span>\n      {stars}\n      {\n        totalRatings&&<span className=\"rating-num ml-1\">({totalRatings})</span>\n      }\n    </div>\n  );\n};\n\nexport const getStars = (\n  amount: number,\n  rate: RatingFunction | undefined\n): JSX.Element[] => {\n  const handleRatingClick = (index: number) => rate && rate(index);\n  let stars = [];\n  let integer = Math.floor(amount);\n  let remainder = amount - integer;\n  let i;\n  for (i = 0; i < integer; ++i) {\n    let index = i;\n    stars.push(\n      <i\n        key={i}\n        className=\"material-icons\"\n        onClick={() => handleRatingClick(index)}\n      >\n        star\n      </i>\n    );\n  }\n  if (remainder >= 0.8) {\n    let index = i;\n    stars.push(\n      <i\n        key={i++}\n        className=\"material-icons\"\n        onClick={() => handleRatingClick(index)}\n      >\n        star\n      </i>\n    );\n  } else if (remainder >= 0.25) {\n    let index = i;\n    stars.push(\n      <i\n        key={i++}\n        className=\"material-icons\"\n        onClick={() => handleRatingClick(index)}\n      >\n        star_half\n      </i>\n    );\n  }\n  for (let j = stars.length; j < 5; ++j) {\n    let index = i;\n    stars.push(\n      <i\n        key={i++}\n        className=\"material-icons\"\n        onClick={() => handleRatingClick(index)}\n      >\n        star_outline\n      </i>\n    );\n  }\n  return stars;\n};\n\nexport default StarRating;\n","/* eslint jsx-a11y/anchor-is-valid: 0 */\n\nimport { hubURL } from \"../flux/config\";\n\nimport React from \"react\";\nimport { Container, Row, Col, Card, CardBody } from \"shards-react\";\n\nclass Login extends React.Component {\n  componentDidMount = () => {\n    let hash = window.location.href;\n    const codeIndex = hash.indexOf(\"code\")\n    if (codeIndex > 0) {\n      let code = hash.substring(codeIndex + 5, hash.length);\n      window.location = `${hubURL}/auth/github/callback?code=${code}` as any;\n    }\n  };\n  render = () => {\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        <Row noGutters className=\"h-100\">\n          <Col lg=\"3\" md=\"5\" className=\"auth-form mx-auto\">\n            <Card>\n              <CardBody>\n                <img\n                  className=\"auth-form__logo d-table mx-auto mb-3\"\n                  src=\"/jina-light.svg\"\n                  style={{ maxWidth: \"100px\" }}\n                  alt=\"Jina\"\n                />\n                <h5 className=\"auth-form__title text-center mb-4\">Log in</h5>\n                <a\n                  href={`${hubURL}/auth/github`}\n                  id=\"github-button\"\n                  className=\"btn btn-block btn-social btn-github\"\n                >\n                  <i className=\"fab fa-github\"></i> Sign in with GitHub\n                </a>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    );\n  };\n}\n\nexport default Login;\n","import React from \"react\";\nimport { Card, CardHeader, CardBody } from \"shards-react\";\n\ntype Build = {\n  created: string;\n  size: number;\n  os: string;\n  architecture: string;\n};\n\ntype Props = {\n  image: {\n    buildHistory?: Build[];\n    [key: string]: any;\n  };\n};\n\nexport default function BuildHistory({ image }: Props) {\n  const { buildHistory } = image;\n  return (\n    <Card className=\"readme-container mb-4\">\n      <CardHeader className=\"border-bottom d-flex flex-row\">\n        <h6 className=\"m-0 d-inline-block\">Build History</h6>\n      </CardHeader>\n      <CardBody className=\"p-0 build-history\">\n        {buildHistory &&\n          buildHistory.map((build, idx) => {\n            const formattedCreated = new Date(build.created).toLocaleString();\n            const buildSize = (build.size / 1e6).toFixed(2);\n            return (\n              <div key={idx} className=\"user-activity__item pr-3 py-3\">\n                <div className=\"user-activity__item__icon mt-2\">\n                  <i className=\"material-icons\">build</i>\n                </div>\n                <div className=\"user-activity__item__content\">\n                  <span className=\"text-light\">{formattedCreated}</span>\n                  <p>\n                    [{build.os}/{build.architecture}] {buildSize} MB\n                  </p>\n                </div>\n              </div>\n            );\n          })}\n      </CardBody>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Card, CardHeader, CardBody, Row, Col } from \"shards-react\";\nimport { HubImage } from \"./types\";\n\ntype Props = {\n  image: HubImage;\n};\n\nexport default function ImageDetails({ image }: Props) {\n  return (\n    <Card className=\"readme-container mb-4\">\n      <CardHeader className=\"border-bottom d-flex flex-row\">\n        <h6 className=\"m-0 d-inline-block\">Image Details</h6>\n      </CardHeader>\n      <CardBody className=\"pt-0 pb-2\">\n        <Row className=\"border-bottom py-2\">\n          <Col>Name</Col>\n          <Col>{image.name}</Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Version</Col>\n          <Col>{image.version}</Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Author</Col>\n          <Col>{image.author}</Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Description</Col>\n          <Col>{image.description}</Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Documentation</Col>\n          <Col>\n            <a\n              href={image.documentation}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {image.documentation}\n            </a>\n          </Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Source</Col>\n          <Col>\n            <a href={image.source} target=\"_blank\" rel=\"noopener noreferrer\">\n              {image.source}\n            </a>\n          </Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>License</Col>\n          <Col>{image.license}</Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Vendor</Col>\n          <Col>{image.vendor}</Col>\n        </Row>\n        <Row className=\"py-2\">\n          <Col>URL</Col>\n          <Col>\n            <a href={image.url} target=\"_blank\" rel=\"noopener noreferrer\">\n              {image.url}\n            </a>\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Card, CardHeader, CardBody } from \"shards-react\";\n\ntype Props = {\n  readme: string;\n  documentation: string;\n};\n\nexport default function ReadMe({ readme, documentation }: Props) {\n  return (\n    <Card className=\"readme-container mb-4\">\n      <CardHeader className=\"border-bottom d-flex flex-row\">\n        <h6 className=\"m-0 d-inline-block\">README.MD</h6>\n        <div className=\"flex-fill d-inline-block\" />\n        <a\n          href={documentation}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"cursor-pointer text-primary\"\n        >\n          <i className=\"fab fa-github\"></i> View on GitHub\n        </a>\n      </CardHeader>\n      <CardBody>\n        {readme ? (\n          <div\n            className=\"markup\"\n            dangerouslySetInnerHTML={{ __html: readme }}\n          />\n        ) : (\n          <h2 className=\"text-muted text-center py-4\">No Readme Found</h2>\n        )}\n      </CardBody>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Card, CardHeader, CardBody } from \"shards-react\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { atomOneLight } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport { HubImage } from \"./types\";\n\ntype Props = {\n  image: HubImage;\n  copyCode: (code: string) => void;\n};\n\nexport default function CopyCommand({ image, copyCode }: Props) {\n  const imageVar = image.repoTags[image.repoTags.length - 1];\n  let code = [\n    `from jina.flow import Flow\\nf = Flow().add(name='my-pod', image='${imageVar}')`,\n    `from jina.flow import Flow\\n# assuming you have a running gateway on 192.168.0.123:45678\\nf = Flow().add(name='my-pod', image='${imageVar}', yaml_path='my.yml')`,\n    `from jina.flow import Flow\\n# assuming you have a running gateway on 192.168.0.123:45678\\nf = Flow().add(name='my-pod', image='${imageVar}', host='192.168.0.123', port_grpc=45678)`,\n    `!Flow\\npods:\\n  my_pod1:\\n    image: \"${imageVar}\"`,\n    `jina pod --image ${imageVar}`,\n    `docker run -p 55555:55555 -p 55556:55556 ${imageVar} --port-in 55555 --port-out 55556`,\n    `docker run -v $(pwd)/my.yml:/my.yml ${imageVar} --yaml-path /my.yml`,\n  ];\n  return (\n    <Card className=\"mb-4\">\n      <CardHeader className=\"p-3 border-bottom d-flex flex-row\">\n        <h6 className=\"m-0 d-inline-block\">Usage</h6>\n      </CardHeader>\n      <CardBody className=\"py-2 px-3 pt-4 code-usage\">\n        <p className=\"mb-1\">Use this image in Flow API</p>\n        <SyntaxHighlighter\n          language=\"python\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[0])}\n        >\n          {code[0]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">\n          Use this image in Flow API and override YAML\n        </p>\n        <SyntaxHighlighter\n          language=\"python\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[1])}\n        >\n          {code[1]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">Use this image remotely in Flow API</p>\n        <SyntaxHighlighter\n          language=\"python\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[2])}\n        >\n          {code[2]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">Use this image in Flow YAML</p>\n        <SyntaxHighlighter\n          language=\"yaml\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[3])}\n        >\n          {code[3]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">Use this image in Jina CLI</p>\n        <SyntaxHighlighter\n          language=\"bash\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[4])}\n        >\n          {code[4]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">Use this image in Docker CLI</p>\n        <SyntaxHighlighter\n          language=\"bash\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[5])}\n        >\n          {code[5]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">\n          Use this image in Docker CLI and override YAML\n        </p>\n        <SyntaxHighlighter\n          language=\"bash\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[6])}\n        >\n          {code[6]}\n        </SyntaxHighlighter>\n      </CardBody>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Card, CardHeader, CardBody } from \"shards-react\";\nimport { Review } from \"./types\";\n\ntype Props = {\n  review: Review;\n};\n\nexport default function ReviewCard({ review }: Props) {\n  return (\n    <Card className=\"readme-container mb-4\">\n      <CardHeader className=\"border-bottom d-flex flex-row\">\n        <h6 className=\"m-0 d-inline-block\">{review.username}</h6>\n        <div className=\"flex-fill d-inline-block\" />\n      </CardHeader>\n      <CardBody className=\"py-3\">{review.content}</CardBody>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Button } from \"shards-react\";\nimport ReviewCard from \"./ReviewCard\";\nimport { Review } from \"./types\";\n\ntype Props = {\n  reviews: Review[];\n  newReview: () => void;\n};\n\nexport default function ImageReviews({ reviews, newReview }: Props) {\n  return (\n    <div>\n      <div className=\"border-bottom d-flex flex-row mb-4\">\n        <h3 className=\"flex-fill\">Reviews</h3>\n        <div>\n          <Button onClick={newReview}>\n            <i className=\"material-icons mr-2\">add_comment</i>New Review\n          </Button>\n        </div>\n      </div>\n      {reviews.length > 0 ? (\n        reviews.map((review, idx) => <ReviewCard key={idx} review={review} />)\n      ) : (\n        <h2 className=\"text-muted text-center py-4\">No Reviews</h2>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { Dispatcher, Constants, Store } from \"../flux\";\nimport BuildHistory from \"../components/Hub/BuildHistory\";\nimport { PageTitle } from \"../components/Common/PageTitle\";\nimport Details from \"../components/Hub/ImageDetails\";\nimport Readme from \"../components/Hub/Readme\";\nimport CopyCommand from \"../components/Hub/CopyCommand\";\nimport StarRating from \"../components/Hub/StarRating\";\nimport ImageReviews from \"../components/Hub/ImageReviews\";\nimport { copyToClipboard } from \"../helpers\";\n\nclass PackageView extends React.Component<any, any> {\n  constructor(props: any) {\n    super(props);\n    let windowHash = window.location.hash;\n    const windowParams = windowHash.substring(\n      windowHash.indexOf(\"?\"),\n      windowHash.length\n    );\n    const params = new URLSearchParams(windowParams);\n    const imageId = params.get(\"id\");\n    this.state = {\n      imageId,\n      loading: false,\n      imageData: {\n        reviews: [],\n        repoTags: [],\n      },\n    };\n    Store.on(\"update-hub\", this.getImageData);\n  }\n\n  componentDidMount = () => {\n    this.getImageData();\n  };\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-hub\", this.getImageData);\n  };\n\n  getImageData = async () => {\n    const imageData = (await Store.getHubImage(this.state.imageId)) || {};\n    this.setState({ imageData, loading: false });\n  };\n\n  rate = (stars: any) => {\n    const { imageId } = this.state;\n    Dispatcher.dispatch({\n      actionType: Constants.POST_RATING,\n      payload: { imageId, stars },\n    });\n  };\n\n  copyCode = (content: any) => {\n    copyToClipboard(content);\n    Dispatcher.dispatch({\n      actionType: Constants.SHOW_BANNER,\n      payload: [\"Content copied to clipboard\", \"success\"],\n    });\n  };\n\n  newReview = () => {\n    const imageId = this.state.imageData.id;\n    const modal = \"review\";\n    Dispatcher.dispatch({\n      actionType: Constants.SHOW_MODAL,\n      payload: { modal, modalParams: { imageId } },\n    });\n  };\n\n  render = () => {\n    const { imageData, loading } = this.state;\n    const {\n      name,\n      readmeHTML,\n      documentation,\n      totalStars,\n      totalRatings,\n      userRated,\n      reviews,\n    } = imageData;\n    let rating;\n    if (totalStars && totalRatings) {\n      rating = totalStars / totalRatings;\n    }\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        {loading ? (\n          <div className=\"error\">\n            <div className=\"loader\" />\n          </div>\n        ) : (\n          <div className=\"px-4\">\n            <Row noGutters className=\"page-header mb-4\">\n              <PageTitle\n                title={name}\n                className=\"text-sm-left mb-3\"\n              />\n              <Col md=\"6\" />\n              <Col md=\"3\" className=\"py-sm-2 text-right\">\n                <h3>\n                  <StarRating\n                    rating={userRated || rating}\n                    totalRatings={totalRatings}\n                    rate={this.rate}\n                    userRated={userRated}\n                  />\n                </h3>\n              </Col>\n            </Row>\n            <Row>\n              <Col md=\"6\">\n                <CopyCommand image={imageData} copyCode={this.copyCode} />\n                <Details image={imageData} />\n                <BuildHistory image={imageData} />\n              </Col>\n              <Col md=\"6\">\n                <Readme readme={readmeHTML} documentation={documentation} />\n                <ImageReviews reviews={reviews} newReview={this.newReview} />\n              </Col>\n            </Row>\n          </div>\n        )}\n      </Container>\n    );\n  };\n}\n\nexport default PackageView;\n","import React from \"react\";\nimport { Row, Col, Card } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport StarRating from \"./StarRating\";\nimport { HubImage } from \"./types\";\n\ntype Props = {\n  image: HubImage;\n};\n\nexport default function ImageCard({ image }: Props) {\n  let {\n    name,\n    id,\n    official,\n    author,\n    description,\n    totalStars,\n    totalRatings,\n  } = image;\n\n  let rating;\n  if (image.totalStars && image.totalRatings) {\n    rating = totalStars / totalRatings;\n  }\n\n  return (\n    <Link className=\"unstyled-link\" to={`/package?id=${id}`}>\n      <Card className=\"clickable mb-4 h-100 image-card\">\n        <Card.Body className=\"pb-0 mb-0 pt-3\">\n          <Row>\n            <Col xs=\"12\" className=\"px-0\">\n              <div className=\"app-category mb-2\">search</div>\n              <div className=\"app-title mb-2\">{name}</div>\n              <div className=\"app-subtitle mb-2\">{author}</div>\n            </Col>\n            <Col sm=\"12\" className=\"px-0 pb-0\">\n              <div className=\"description-container\">\n                <div className=\"description-overlay\" />\n                <div className=\"app-description\">{description}</div>\n              </div>\n            </Col>\n          </Row>\n        </Card.Body>\n        <Card.Footer className=\"pt-0 px-3 pb-3\">\n          {totalRatings ? (\n            <StarRating rating={rating} totalRatings={totalRatings} />\n          ) : (\n            <span className=\"text-muted\">no ratings</span>\n          )}\n          {official && (\n            <span className=\"float-right\">\n              <img src=\"/jina-j.png\" alt=\"Official Package\" width={30} />\n            </span>\n          )}\n        </Card.Footer>\n      </Card>\n    </Link>\n  );\n}\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { Dispatcher, Constants, Store } from \"../flux\";\nimport { PageTitle } from \"../components/Common/PageTitle\";\nimport { MultiFilterSelect } from \"../components/Common/MultiFilterSelect\";\nimport { ExpandingSearchbar } from \"../components/Common/ExpandingSearchbar\";\nimport ImageCard from \"../components/Hub/ImageCard\";\n\nconst categoryOptions = [\n  { value: \"all\", label: \"All Categories\" },\n  { value: \"search\", label: \"Search\" },\n  { value: \"configurations\", label: \"Configurations\" },\n];\n\nconst sortOptions = [\n  { value: \"suggested\", label: \"Suggested\" },\n  { value: \"highestRating\", label: \"Highest Rated\" },\n  { value: \"newest\", label: \"Newest\" },\n];\n\nclass HubView extends React.Component<any, any> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      images: Store.getHubImages(),\n      sortType: \"suggested\",\n      category: \"all\",\n      searchQuery: \"\",\n    };\n\n    Store.on(\"update-hub\", this.getHubImages);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-hub\", this.getHubImages);\n  };\n\n  getHubImages = () => {\n    const images = Store.getHubImages();\n    this.setState({ images });\n  };\n\n  sortBy = (sortType: string) => {\n    this.setState({ sortType }, this.search);\n  };\n\n  setCategory = (category: string) => {\n    this.setState({ category }, this.search);\n  };\n\n  updateSearch = (searchQuery: string) => {\n    this.setState({ searchQuery }, this.search);\n  };\n\n  search = () => {\n    const { category, searchQuery, sortType } = this.state;\n    Dispatcher.dispatch({\n      actionType: Constants.SEARCH_HUB,\n      payload: { category, q: searchQuery, sort: sortType },\n    });\n  };\n\n  render = () => {\n    const { images, searchQuery } = this.state;\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        <div className=\"px-4\">\n          <Row className=\"page-header\">\n            <PageTitle title=\"Jina Hub\" className=\"text-sm-left mb-3\" />\n          </Row>\n          <Row className=\"mb-4\">\n            <Col md=\"8\">\n              <MultiFilterSelect\n                options={categoryOptions}\n                onFilterChange={(option: any[]) =>\n                  this.setCategory(option[0].value)\n                }\n                className=\"hub-select mb-2 mr-0 mb-md-0 mr-md-2\"\n                placeholder=\"All Categories\"\n                isSearchable={false}\n              />\n              <MultiFilterSelect\n                options={sortOptions}\n                onFilterChange={(option: any[]) => this.sortBy(option[0].value)}\n                className=\"hub-select mb-2 mr-0 mb-md-0 mr-md-2\"\n                placeholder=\"Suggested\"\n                isSearchable={false}\n              />\n            </Col>\n            <Col md=\"4\">\n              <ExpandingSearchbar\n                variant=\"gray\"\n                placeholder=\"search hub...\"\n                value={searchQuery}\n                onChange={this.updateSearch}\n              />\n            </Col>\n          </Row>\n          <Row>\n            {Object.keys(images).map((imageId) => (\n              <Col key={imageId} md=\"3\" className=\"mb-4\">\n                <ImageCard image={(images as any)[imageId]} />\n              </Col>\n            ))}\n          </Row>\n        </div>\n      </Container>\n    );\n  };\n}\n\nexport default HubView;\n","import { saveAs } from \"file-saver\";\n\nfunction handleErrorMessage(msg: any, url: any, line: any) {\n  // @ts-ignore\n  logger.log(\"window.onerror - ERROR\", msg, url, `line: ${line}`);\n}\n\nfunction pushLog(data: any) {\n  (window as any).logs.push(data);\n}\n\nfunction clearLogs() {\n  (window as any).logs = [];\n}\n\nconst logger = {\n  log: function (...arg: any) {\n    if (!(window as any).logsEnabled) return;\n    let args = [...(arguments as any)];\n    console.log(...args);\n    pushLog(args);\n  },\n  isEnabled: function () {\n    return (window as any).logsEnabled;\n  },\n  enable: function () {\n    const _navigator: any = {};\n    for (let i in window.navigator)\n      _navigator[i] = (window as any).navigator[i];\n    clearLogs();\n    pushLog(_navigator);\n    window.addEventListener(\"error\", handleErrorMessage as any);\n    (window as any).logsEnabled = true;\n  },\n  disable: function () {\n    window.removeEventListener(\"error\", handleErrorMessage as any);\n    (window as any).logsEnabled = false;\n  },\n  setFormat: function (format = \"json\") {\n    (window as any).logsFormat = format;\n  },\n  exportLogs: function () {\n    const format = (window as any).logsFormat || \"json\";\n    const logs = (window as any).logs;\n    let content = \"[\\n\";\n    for (let i = 0; i < logs.length; ++i) {\n      let args = logs[i];\n      content += JSON.stringify(args) + `${i < logs.length - 1 ? \",\" : \"\"}\\n`;\n    }\n    content += \"]\";\n\n    let filename = `jina-dashboard-debug-output-${new Date()}.${format}`;\n    let blob = new Blob([content], { type: \"text,plain;charset=utf-8\" });\n    saveAs(blob, filename);\n  },\n};\n\nexport default logger;\n","import { ProcessedLog } from \"./../flux/tranformLog\";\n\nconst toBlob = (content: string) => {\n  return new Blob([content], { type: \"text,plain;charset=utf-8\" });\n};\n\nconst serializeLogsToCSV = (logs: ProcessedLog[]): string => {\n  const columns =\n    \"created,formatted timestamp,name,process,level name,message,filename,line number,module,funcname,pathname\\n\";\n  const fileContent = logs.reduce((acc, log) => {\n    acc += `${log.created},\"${log.formattedTimestamp}\",${log.name},${log.process},${log.levelname},\"${log.msg}\",${log.filename},${log.lineno},${log.module},${log.funcName},${log.pathname}\\n`;\n    return acc;\n  }, columns);\n  return fileContent;\n};\n\nconst serializeLogsToJSON = (logs: ProcessedLog[]): string => {\n  const fileContent = logs.reduce((acc, log, i) => {\n    acc += JSON.stringify(log) + `${i < logs.length - 1 ? \",\" : \"\"}\\n`;\n    return acc;\n  }, \"\\n\");\n  return `[${fileContent}]`;\n};\n\nconst serializeLogsToText = (logs: ProcessedLog[]): string => {\n  const fileContent = logs.reduce((acc, log) => {\n    acc += `${log.formattedTimestamp} ${log.name}@${log.process} [${log.levelname}]: ${log.msg}\\n`;\n    return acc;\n  }, \"\");\n  return fileContent;\n};\n\nexport const serializeLogsToCSVBlob = (logs: ProcessedLog[]) =>\n  toBlob(serializeLogsToCSV(logs));\n\nexport const serializeLogsToJSONBlob = (logs: ProcessedLog[]) =>\n  toBlob(serializeLogsToJSON(logs));\nexport const serializeLogsToTextBlob = (logs: ProcessedLog[]) =>\n  toBlob(serializeLogsToText(logs));\n","// @ts-nocheck\nconst settings = require(\"./../settings\");\n\nexport const formatForFlowchart = (pods, canvas) => {\n  const formatted = {\n    offset: {\n      x: 0,\n      y: 0,\n    },\n    nodes: {},\n    links: {},\n    selected: {},\n    hovered: {},\n    scale: 1,\n    with: {},\n  };\n\n  let nodes = {};\n  let links = {};\n\n  let prevNode = false;\n\n  if (!pods.gateway) {\n    let newPods = {};\n    newPods = {\n      gateway: null,\n      ...pods,\n    };\n    pods = newPods;\n  }\n\n  Object.keys(pods).forEach((id) => {\n    const pod = pods[id] || {};\n    let node = {\n      id,\n      label: id,\n      ports: {},\n      needs: {},\n      send_to: {},\n      position: {},\n      properties: { ...pod },\n    };\n\n    if (node.properties.needs) delete node.properties.needs;\n\n    node.ports[\"inPort\"] = { id: \"inPort\", type: \"input\" };\n    node.ports[\"outPort\"] = { id: \"outPort\", type: \"output\" };\n\n    if (prevNode && !pod.needs && id !== \"gateway\") pod.needs = prevNode;\n\n    if (pod.needs) {\n      let parents = Array.isArray(pod.needs) ? pod.needs : [pod.needs];\n\n      for (let i = 0; i < parents.length; ++i) {\n        let nodeFrom = parents[i];\n        node.needs[nodeFrom] = true;\n\n        let linkId = `${nodeFrom}-to-${id}`;\n        let link = {\n          color: \"red\",\n          id: linkId,\n          from: { nodeId: nodeFrom, portId: \"outPort\" },\n          to: { nodeId: id, portId: \"inPort\" },\n        };\n        links[linkId] = link;\n      }\n    }\n\n    if (canvas && canvas[id]) {\n      const { x, y } = canvas[id];\n      node.position = { x: parseInt(x), y: parseInt(y) };\n    }\n\n    nodes[id] = node;\n    prevNode = id;\n  });\n\n  const depthPopulation = {}; //how many nodes at each depth\n  const offsetX = settings.nodeOffset.x;\n  const offsetY = settings.nodeOffset.y;\n\n  //fallback: if no position encoded on canvas portion of YAML, infer the position using depth and order\n  Object.keys(nodes).forEach((id) => {\n    let depth = getNodeDepth(nodes, id, 0);\n    nodes[id].depth = depth;\n\n    if (depthPopulation[depth] >= 0) depthPopulation[depth]++;\n    else depthPopulation[depth] = 0;\n\n    if (!nodes[id].position.x)\n      nodes[id].position = {\n        y: depth * offsetY + offsetY,\n        x: depthPopulation[depth] * offsetX + offsetX,\n      };\n  });\n\n  formatted.nodes = nodes;\n  formatted.links = links;\n\n  return formatted;\n};\n\nfunction getNodeDepth(nodes, currentId, currentDepth): number {\n  let parents = Object.keys(nodes[currentId].needs);\n  let longestDepth = 0;\n\n  for (let i = 0; i < parents.length; ++i) {\n    let parent = parents[i];\n    let depth;\n    if (nodes[parent].depth) depth = nodes[parent].depth + 1;\n    else depth = getNodeDepth(nodes, parent, 1);\n    if (depth > longestDepth) longestDepth = depth;\n  }\n\n  return currentDepth + longestDepth;\n}\n","// @ts-nocheck\nimport * as YAML from \"yaml\";\n\nconst propertyList: PodProperty[] = require(\"./../data/podProperties.json\");\ntype PodPropertyType = \"str\" | \"int\" | \"bool\" | \"SocketType\" | \"ReplicaType\";\ntype PodProperty = {\n  name: string;\n  type: PodPropertyType;\n};\ntype PropertyMap = { [key: string]: PodPropertyType };\nconst propertyTypes: PropertyMap = {};\npropertyList.forEach((prop) => (propertyTypes[prop.name] = prop.type));\n\nconst getNodeLabelsByPortId = ({ from, to }, nodes) => ({\n  [from.portId]: nodes[from.nodeId].label || nodes[from.nodeId].properties.name,\n  [to.portId]: nodes[to.nodeId].label || nodes[to.nodeId].properties.name,\n});\n\nexport const parseYAML = (yamlSTR: string) => {\n  //todo removing the !tag is kind a bootleg solution. We should look into the parsing\n\n  let yamlStrWithoutTag = /^!/.test(yamlSTR)\n    ? yamlSTR.split(\"\\n\").slice(1).join(\"\\n\")\n    : yamlSTR;\n\n  try {\n    const data = YAML.parse(yamlStrWithoutTag);\n    return { data };\n  } catch (error) {\n    alert(\"Error Parsing YAML:\\n\" + error);\n    return { error };\n  }\n};\n\nexport const decodePropValue = (propName, propValue) =>\n  propertyTypes[propName] === \"bool\" ? propValue === \"true\" : propValue;\nconst unpackIfLengthOne = (arr) =>\n  Array.isArray(arr) && arr.length === 1 ? arr[0] : arr;\n\nexport const formatAsYAML = (chart) => {\n  const { with: chartWith, nodes, links } = chart;\n\n  const needsByPodLabel = Object.values(links).reduce((acc, curr) => {\n    const nodeLabelsByPortId = getNodeLabelsByPortId(curr, nodes);\n    const needs = nodeLabelsByPortId.outPort;\n    const neededBy = nodeLabelsByPortId.inPort;\n\n    if (!acc[neededBy]) {\n      acc[neededBy] = [];\n    }\n    acc[neededBy].push(needs);\n    return acc;\n  }, {});\n\n  const pods = Object.values(nodes).reduce((acc, node) => {\n    const { label } = node;\n    if (!label) return acc;\n\n    const podProperties = Object.entries(node.properties).reduce(\n      (acc, [key, propValue]) => {\n        acc[key] = decodePropValue(key, propValue);\n        return acc;\n      },\n      {}\n    );\n    if (needsByPodLabel[label]) {\n      podProperties.needs = unpackIfLengthOne(needsByPodLabel[label]);\n    }\n\n    acc[label] = { ...podProperties };\n    return acc;\n  }, {});\n\n  const canvas = Object.values(nodes).reduce((acc, node) => {\n    const {\n      position: { x, y },\n    } = node;\n    acc[node.label] = { x, y };\n    return acc;\n  }, {});\n\n  const output = { with: { ...chartWith, board: { canvas } }, pods };\n  return `!Flow\\n${YAML.stringify(output)}`;\n};\n\nexport const formatSeconds = (numSeconds: number): string => {\n  let minute = 60;\n  let hour = 60 * minute;\n\n  return numSeconds < minute\n    ? `${Math.floor(numSeconds)}s`\n    : numSeconds < hour\n    ? `${Math.floor(numSeconds / minute)}m ${Math.floor(numSeconds % minute)}s`\n    : `${Math.floor(numSeconds / hour)}h ${Math.floor(\n        (numSeconds % hour) / minute\n      )}m ${Math.floor(numSeconds % minute)}s`;\n};\n\nexport const formatBytes = (numBytes: number): string => {\n  return numBytes < 1024\n    ? `${numBytes} Bytes`\n    : numBytes < 1024 ** 2\n    ? `${(numBytes / 1024).toFixed(1)} KB`\n    : numBytes < 1024 ** 3\n    ? `${(numBytes / 1024 ** 2).toFixed(1)} MB`\n    : `${(numBytes / 1024 ** 3).toFixed(1)} GB`;\n};\n","export const copyToClipboard = (str: string) => {\n  const temp = document.createElement(\"textarea\");\n  temp.value = str;\n  document.body.appendChild(temp);\n  temp.select();\n  document.execCommand(\"copy\");\n  document.body.removeChild(temp);\n  return;\n};\n","export const nodeOffset = {\n  x: 250,\n  y: 150,\n};\n","const { Dispatcher: DispatcherBase } = require(\"flux\");\n\nexport const Dispatcher = new DispatcherBase();\n","import React from \"react\";\n\nfunction NavbarSpacer() {\n  return (\n    <div className=\"main-navbar__search w-100 d-none d-md-flex d-lg-flex\"></div>\n  );\n}\n\nexport { NavbarSpacer };\n","import React from \"react\";\n\ntype Props = {\n  toggleSidebar?: () => void;\n};\n\nfunction NavbarToggle({ toggleSidebar }: Props) {\n  return (\n    <nav className=\"nav cursor-pointer\">\n      <span\n        onClick={toggleSidebar}\n        className=\"nav-link nav-link-icon toggle-sidebar d-sm-inline d-md-inline d-lg-none text-center\"\n      >\n        <i className=\"material-icons\">&#xE5D2;</i>\n      </span>\n    </nav>\n  );\n}\n\nexport { NavbarToggle };\n","import React from \"react\";\n// @ts-ignore\nimport { NavItem, NavLink, Badge } from \"shards-react\";\n\ntype Props = {\n  connected?: boolean;\n  reconnect?: () => void;\n};\n\nfunction ConnectionIndicator({ connected, reconnect }: Props) {\n  return (\n    <NavItem\n      className=\"dropdown notifications\"\n      onClick={reconnect}\n    >\n      <NavLink className=\"nav-link-icon text-center\">\n        <div className=\"nav-link-icon__wrapper\">\n          <i className=\"material-icons\">language</i>\n          {connected ? (\n            <Badge pill theme=\"success\" className=\"connection-indicator p-1\">\n              <i className=\"material-icons\">done</i>\n            </Badge>\n          ) : (\n            <Badge pill theme=\"danger\" className=\"connection-indicator p-1\">\n              <i className=\"material-icons\">close</i>\n            </Badge>\n          )}\n        </div>\n      </NavLink>\n    </NavItem>\n  );\n}\n\nexport { ConnectionIndicator };\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Collapse,\n  NavItem,\n  NavLink,\n  Button,\n  // @ts-ignore\n} from \"shards-react\";\n\ntype User = {\n  displayName: string;\n  emails: [{ value: string }];\n  id: string;\n  nodeId: string;\n  photos: [{ value: string }];\n  profileUrl: string;\n  provider: string;\n  username: string;\n  _json: any;\n  _raw: any;\n};\n\ntype Props = {\n  userActionsVisible: boolean;\n  user: User | null;\n  logOut: () => void;\n  toggleUserActions: () => void;\n};\n\nfunction UserActions({\n  user,\n  logOut,\n  userActionsVisible,\n  toggleUserActions,\n}: Props) {\n  return (\n    <NavItem tag={Dropdown} caret toggle={toggleUserActions}>\n      {user ? (\n        <DropdownToggle caret tag={NavLink} className=\"text-nowrap px-3\">\n          <img\n            className=\"user-avatar rounded-circle mr-2\"\n            src={user._json.avatar_url}\n            alt=\"User Avatar\"\n          />{\" \"}\n          <span className=\"d-none d-md-inline-block\">{user.username}</span>\n        </DropdownToggle>\n      ) : (\n        <Link to=\"/login\" className=\"nav-link px-3\">\n          <Button className=\"text-nowrap mb-0 mt-1\">Log in</Button>\n        </Link>\n      )}\n\n      <Collapse tag={DropdownMenu} right small open={userActionsVisible}>\n        <DropdownItem\n          tag={Link}\n          to=\"/\"\n          className=\"text-danger\"\n          onClick={logOut}\n        >\n          <i className=\"material-icons text-danger\">&#xE879;</i> Logout\n        </DropdownItem>\n      </Collapse>\n    </NavItem>\n  );\n}\n\nexport { UserActions };\n","import React from \"react\";\n// @ts-ignore\nimport { NavbarBrand } from \"shards-react\";\n\nfunction NavLogo() {\n  return (\n    <NavbarBrand href=\"#\" style={{ lineHeight: \"25px\" }}>\n      <div className=\"d-table m-auto\">\n        <img\n          id=\"main-logo\"\n          className=\"d-inline-block align-top mr-1 ml-3\"\n          style={{ maxWidth: \"25px\" }}\n          src=\"/icon.png\"\n          alt=\"Jina\"\n        />\n      </div>\n    </NavbarBrand>\n  );\n}\n\nexport { NavLogo };\n","import React, { useState } from \"react\";\n// @ts-ignore\nimport { Container, Navbar, Nav } from \"shards-react\";\n\nimport { NavbarSpacer } from \"./NavbarSpacer\";\nimport { NavbarToggle } from \"./NavbarToggle\";\nimport { ConnectionIndicator } from \"./ConnectionIndicator\";\nimport { UserActions } from \"./UserActions\";\nimport {NavLogo} from './NavLogo';\n\ntype User = {\n  displayName: string;\n  emails: [{ value: string }];\n  id: string;\n  nodeId: string;\n  photos: [{ value: string }];\n  profileUrl: string;\n  provider: string;\n  username: string;\n  _json: any;\n  _raw: any;\n};\n\ntype Props = {\n  usesAuth: boolean;\n  usesConnection: boolean;\n  connected?: boolean;\n  logOut: () => void;\n  toggleSidebar?: () => void;\n  reconnect?: () => void;\n  user: User | null;\n  hideSidebarToggle?:boolean;\n  showLogo?:boolean;\n};\n\nfunction MainNavbar({\n  usesAuth,\n  usesConnection,\n  logOut,\n  toggleSidebar,\n  reconnect,\n  connected,\n  user,\n  hideSidebarToggle,\n  showLogo\n}: Props) {\n  const [userActionsVisible, setUserActionsVisible] = useState(false);\n  function toggleUserActions() {\n    setUserActionsVisible((isVisible) => !isVisible);\n  }\n  return (\n    <div className=\"main-navbar\">\n      <Container fluid className=\"p-0\">\n        <Navbar type=\"light\" className=\"align-items-stretch flex-md-nowrap p-0 px-2\">\n          {\n            showLogo && <NavLogo/>\n          }\n          <NavbarSpacer />\n          <Nav navbar className=\"flex-row\">\n            {usesConnection && (\n              <ConnectionIndicator\n                reconnect={reconnect}\n                connected={connected}\n              />\n            )}\n            {usesAuth && (\n              <UserActions\n                user={user}\n                userActionsVisible={userActionsVisible}\n                toggleUserActions={toggleUserActions}\n                logOut={logOut}\n              />\n            )}\n          </Nav>\n          {\n            !hideSidebarToggle&&\n            <NavbarToggle toggleSidebar={toggleSidebar} />\n          }\n        </Navbar>\n      </Container>\n    </div>\n  );\n}\n\nexport { MainNavbar };\n","import React from \"react\";\nimport { Navbar, NavbarBrand } from \"shards-react\";\n\ntype Props = {\n  toggleSidebar: () => void;\n};\n\nexport default ({ toggleSidebar }: Props) => {\n  return (\n    <div className=\"main-navbar\">\n      <Navbar\n        className=\"align-items-stretch bg-white flex-md-nowrap p-0\"\n        type=\"light\"\n      >\n        <NavbarBrand\n          className=\"w-100 mr-0\"\n          href=\"#\"\n          style={{ lineHeight: \"25px\" }}\n        >\n          <div className=\"d-table m-auto\">\n            <img\n              id=\"main-logo\"\n              className=\"d-inline-block align-top\"\n              style={{ maxWidth: \"50px\" }}\n              src=\"/jina-light.svg\"\n              alt=\"Jina Dashboard\"\n            />\n          </div>\n        </NavbarBrand>\n        <span\n          className=\"toggle-sidebar d-sm-inline d-md-none d-lg-none\"\n          onClick={toggleSidebar}\n        >\n          <i className=\"material-icons\">&#xE5C4;</i>\n        </span>\n      </Navbar>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { NavLink as RouteNavLink, useLocation } from \"react-router-dom\";\nimport {\n  NavItem,\n  NavLink,\n  DropdownMenu,\n  DropdownItem,\n  Collapse,\n} from \"shards-react\";\n\ntype SubItem = {\n  title: string;\n  to: string;\n};\n\ntype NavItem = {\n  title: string;\n  to: string;\n  open: boolean;\n  iconName: string;\n  matches: string[];\n  items?: SubItem[];\n};\n\ntype Props = {\n  item: NavItem;\n  toggleSidebar: () => void;\n};\n\nexport default ({ item, toggleSidebar }: Props) => {\n  const hasSubItems = item.items && item.items.length;\n  const path = useLocation()?.pathname?.substring(1);\n  let active = false;\n  item.matches.forEach((match) => {\n    if (path === match) active = true;\n  });\n\n  return (\n    <NavItem style={{ position: \"relative\" }}>\n      <NavLink\n        className={hasSubItems && \"dropdown-toggle\"}\n        tag={hasSubItems ? \"a\" : RouteNavLink}\n        to={hasSubItems ? \"#\" : item.to}\n        active={active}\n        onClick={toggleSidebar}\n      >\n        {item.iconName && (\n          <div className=\"d-inline-block item-icon-wrapper\">\n            <i className=\"material-icons\">{item.iconName}</i>\n          </div>\n        )}\n        {item.title && <span>{item.title}</span>}\n      </NavLink>\n      {item.items && (\n        <Collapse tag={DropdownMenu} small open={item.open} style={{ top: 0 }}>\n          {item.items.map((subItem, idx) => (\n            <DropdownItem key={idx} tag={RouteNavLink} to={subItem.to}>\n              {subItem.title}\n            </DropdownItem>\n          ))}\n        </Collapse>\n      )}\n    </NavItem>\n  );\n};\n","import React from \"react\";\nimport { Nav } from \"shards-react\";\n\nimport SidebarNavItem from \"./SidebarNavItem\";\n\ntype Props = {\n  navItems: {\n    title: string;\n    items: [];\n  }[];\n  toggleSidebar: () => void;\n};\n\nexport default ({ navItems: items, toggleSidebar }: Props) => {\n  return (\n    <div className=\"nav-wrapper\">\n      {items.map((nav, idx) => (\n        <div key={idx}>\n          <h6 className=\"main-sidebar__nav-title\">{nav.title}</h6>\n          {typeof nav.items !== \"undefined\" && nav.items.length && (\n            <Nav className=\"nav--no-borders flex-column\">\n              {nav.items.map((item, idx) => (\n                <SidebarNavItem\n                  key={idx}\n                  item={item}\n                  toggleSidebar={toggleSidebar}\n                />\n              ))}\n            </Nav>\n          )}\n        </div>\n      ))}\n    </div>\n  );\n};\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { Col } from \"shards-react\";\n\nimport SidebarMainNavbar from \"./SidebarMainNavbar\";\nimport SidebarNavItems from \"./SidebarNavItems\";\n\ntype Props = {\n  menuVisible: boolean;\n  sidebarNavItems: any;\n  toggleSidebar: () => void;\n};\n\nfunction MainSidebar({ menuVisible, sidebarNavItems, toggleSidebar }: Props) {\n  const classes = classNames(\n    \"main-sidebar\",\n    \"px-0\",\n    \"col-12\",\n    menuVisible && \"open\"\n  );\n\n  return (\n    <Col tag=\"aside\" className={classes} lg={{ size: 2 }} md={{ size: 3 }}>\n      <SidebarMainNavbar toggleSidebar={toggleSidebar} />\n      <SidebarNavItems\n        navItems={sidebarNavItems}\n        toggleSidebar={toggleSidebar}\n      />\n    </Col>\n  );\n}\n\nexport default MainSidebar;\n","import React from \"react\";\nimport { Container, Row, Nav } from \"shards-react\";\n\ntype MenuItems = {\n  title: string;\n  to: string;\n};\n\ntype Props = {\n  menuItems: MenuItems[];\n  copyright: string;\n  loggerEnabled: boolean;\n  enableLogger: () => void;\n  disableLogger: () => void;\n  exportLogs: () => void;\n};\n\nconst MainFooter = ({\n  menuItems,\n  copyright,\n  loggerEnabled,\n  enableLogger,\n  disableLogger,\n  exportLogs,\n}: Props) => (\n  <footer className=\"main-footer d-flex p-2 px-3\">\n    <Container fluid>\n      <Row>\n        <Nav>\n          {menuItems.map((item, idx) => (\n            <a key={idx} href={item.to} className=\"nav-link\">\n              {item.title}\n            </a>\n          ))}\n          {loggerEnabled ? (\n            <>\n              <span\n                className=\"nav-link text-warning cursor-pointer\"\n                onClick={disableLogger}\n              >\n                Exit Debug Mode\n              </span>\n              <span\n                className=\"nav-link text-warning cursor-pointer\"\n                onClick={exportLogs}\n              >\n                Export Debug Data\n              </span>\n            </>\n          ) : (\n            <span\n              className=\"nav-link text-warning cursor-pointer\"\n              onClick={enableLogger}\n            >\n              Debug Mode\n            </span>\n          )}\n        </Nav>\n        <span className=\"copyright ml-auto my-auto mr-2\">{copyright}</span>\n      </Row>\n    </Container>\n  </footer>\n);\n\nMainFooter.defaultProps = {\n  contained: false,\n  copyright: \"Copyright © Jina AI Limited\",\n  menuItems: [\n    {\n      title: \"Home\",\n      to: \"https://jina.ai\",\n    },\n    {\n      title: \"Open Source\",\n      to: \"https://opensource.jina.ai\",\n    },\n    {\n      title: \"Learn\",\n      to: \"https://docs.jina.ai\",\n    },\n    {\n      title: \"Community\",\n      to: \"https://twitter.com/JinaAI_\",\n    },\n    {\n      title: \"Jobs\",\n      to: \"https://www.linkedin.com/company/jinaai/jobs/\",\n    },\n    {\n      title: \"Privacy & Terms\",\n      to: \"https://github.com/jina-ai/legal\",\n    },\n  ],\n};\n\nexport default MainFooter;\n","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\n\ntype Props = {\n  acceptCookies: () => void;\n};\n\nfunction CookiesBanner({ acceptCookies }: Props) {\n  return (\n    <div className=\"cookies-banner\">\n      <p className=\"mb-2\">\n        We and third parties use cookies or similar technologies (\"Cookies\") as\n        described below to collect and process personal data, such as your IP\n        address or browser information. You can learn more about how this site\n        uses Cookies by reading our privacy policy linked below. By clicking \"I\n        consent to cookies\", you accept the placement and use of these Cookies\n        for these purposes. You can change your mind and revisit your\n        preferences at any time by accessing the “Cookie Preferences” link in\n        the footer of this site.\n      </p>\n      <Button className=\"ml-auto d-block\" onClick={acceptCookies}>\n        I consent to cookies\n      </Button>\n    </div>\n  );\n}\n\nexport { CookiesBanner };\n","import React from \"react\";\nimport { Toast } from \"react-bootstrap\";\n\ntype Props = {\n  data: {\n    theme: string;\n    message: string;\n  };\n};\n\nfunction getIcon(theme: string) {\n  if (theme === \"success\")\n    return <i className=\"material-icons mr-1\">check_circle_outline</i>;\n  else if (theme === \"error\")\n    return <i className=\"material-icons mr-1\">cerror_outline</i>;\n  return <i className=\"material-icons mr-1\">warning</i>;\n}\n\nfunction InfoToast({ data }: Props) {\n  if (!data) return null;\n  const icon = getIcon(data.theme);\n  return (\n    <div className=\"notifications-container\">\n      <Toast className={`toast-${data.theme} text-white`}>\n        <Toast.Header className=\"text-white\" closeButton={false}>\n          <strong className=\"mr-auto\">\n            {icon}\n            <span className=\"text-uppercase\">{data.theme}</span>\n          </strong>\n        </Toast.Header>\n        <Toast.Body\n          className=\"text-white\"\n          data-name=\"connection-notification-body\"\n        >\n          {data.message}\n        </Toast.Body>\n      </Toast>\n    </div>\n  );\n}\n\nexport { InfoToast };\n","import React from \"react\";\nimport { Toast, Button, Row, Col } from \"react-bootstrap\";\n\ntype Props = {\n  reconnect: () => void;\n};\n\nfunction ConnectionToast({ reconnect }: Props) {\n  return (\n    <div className=\"notifications-container\" >\n      <Toast className=\"bg-warning\">\n        <Toast.Header className=\"bg-warning text-white\" closeButton={false}>\n          <strong className=\"mr-auto\">\n          <i className=\"material-icons mr-1\">warning</i>Could not connect to Jina instance\n          </strong>\n        </Toast.Header>\n        <Toast.Body className=\"text-white\">\n          <Row>\n            <Col xs=\"6\" className=\"pr-2\">\n              <a\n                href=\"https://github.com/jina-ai/dashboard#getting-started\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"mr-2\"\n              >\n                <Button variant=\"light\" className=\"w-100\"><i className=\"material-icons mr-1\">text_snippet</i>View Docs</Button>\n              </a>\n            </Col>\n            <Col xs=\"6\" className=\"pl-2\">\n              <Button variant=\"primary\" className=\"w-100\" onClick={reconnect}>\n                <i className=\"material-icons mr-1\">refresh</i>Refresh\n              </Button>\n            </Col>\n          </Row>\n        </Toast.Body>\n      </Toast>\n    </div>\n  );\n}\n\nexport { ConnectionToast };\n","import React from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport ReactModal, { Styles } from \"react-modal\";\nconst style: Styles = {\n  overlay: {\n    backgroundColor: \"rgba(38, 50, 56, 0.5)\",\n  },\n  content: {\n    border: \"none\",\n    bottom: \"auto\",\n    maxHeight: \"80%\", // set height\n    left: \"50%\",\n    padding: \"2rem\",\n    position: \"fixed\",\n    right: \"auto\",\n    top: \"50%\", // start from center\n    transform: \"translate(-50%,-50%)\", // adjust top \"up\" based on height\n    width: \"90%\",\n    maxWidth: \"800px\",\n    overflow: \"hidden\",\n  },\n};\n\ntype Props = {\n  open: boolean;\n  closeModal: () => void;\n  importYAML: (yamlString: string) => void;\n};\n\nexport default ({ open, closeModal, importYAML }: Props) => {\n  let inputRef: any;\n  return (\n    <ReactModal\n      ariaHideApp={false}\n      isOpen={open}\n      contentLabel=\"Action Modal\"\n      className=\"modal-content tiny-modal px-4 pt-3 pb-4\"\n      shouldCloseOnOverlayClick={true}\n      style={style}\n      onRequestClose={closeModal}\n      closeTimeoutMS={100}\n    >\n      <div className=\"modal-header p-0\">\n        <h4>\n          <b>Import YAML</b>\n        </h4>\n        <h4>\n          <span className=\"float-right close-icon\">\n            <i className=\"material-icons\" onClick={closeModal}>\n              close\n            </i>\n          </span>\n        </h4>\n      </div>\n      <div className=\"modal-body px-0 pb-0\">\n        <Form.Group>\n          <Form.Label>Custom YAML:</Form.Label>\n          <Form.Control\n            placeholder=\"Paste Here\"\n            ref={(ref: any) => (inputRef = ref)}\n            as=\"textarea\"\n            rows={10}\n          />\n        </Form.Group>\n      </div>\n      <Button\n        className=\"btn-primary\"\n        onClick={() => importYAML(inputRef.value)}\n      >\n        Continue\n      </Button>\n    </ReactModal>\n  );\n};\n","import React from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport ReactModal, { Styles } from \"react-modal\";\n\nconst style: Styles = {\n  overlay: {\n    backgroundColor: \"rgba(38, 50, 56, 0.5)\",\n  },\n  content: {\n    border: \"none\",\n    bottom: \"auto\",\n    maxHeight: \"80%\", // set height\n    left: \"50%\",\n    padding: \"2rem\",\n    position: \"fixed\",\n    right: \"auto\",\n    top: \"50%\", // start from center\n    transform: \"translate(-50%,-50%)\", // adjust top \"up\" based on height\n    width: \"90%\",\n    maxWidth: \"800px\",\n    overflow: \"hidden\",\n  },\n};\n\ntype Props = {\n  open: boolean;\n  closeModal: () => void;\n  submitReview: (content: any) => void;\n};\n\nexport default ({ open, closeModal, submitReview }: Props) => {\n  let inputRef: any;\n  return (\n    <ReactModal\n      ariaHideApp={false}\n      isOpen={open}\n      contentLabel=\"Action Modal\"\n      className=\"modal-content tiny-modal px-4 pt-3 pb-4\"\n      shouldCloseOnOverlayClick={true}\n      style={style}\n      onRequestClose={closeModal}\n      closeTimeoutMS={100}\n    >\n      <div className=\"modal-header p-0\">\n        <h4>\n          <b>Write a Review</b>\n        </h4>\n        <h4>\n          <span className=\"float-right close-icon\">\n            <i className=\"material-icons\" onClick={closeModal}>\n              close\n            </i>\n          </span>\n        </h4>\n      </div>\n      <div className=\"modal-body px-0 pb-0\">\n        <Form.Group>\n          <Form.Control\n            placeholder=\"Tell the world about your experience\"\n            ref={(ref: any) => (inputRef = ref)}\n            as=\"textarea\"\n            rows={10}\n          />\n        </Form.Group>\n      </div>\n      <Button\n        className=\"btn-primary\"\n        onClick={() => submitReview(inputRef.value)}\n      >\n        Submit\n      </Button>\n    </ReactModal>\n  );\n};\n","import React from \"react\";\nimport ReactModal, { Styles } from \"react-modal\";\nimport { Row, Col } from \"react-bootstrap\";\n\nconst style: Styles = {\n  overlay: {\n    backgroundColor: \"rgba(38, 50, 56, 0.5)\",\n  },\n  content: {\n    border: \"none\",\n    bottom: \"auto\",\n    maxHeight: \"80%\", // set height\n    left: \"50%\",\n    padding: \"2rem\",\n    position: \"fixed\",\n    right: \"auto\",\n    top: \"50%\", // start from center\n    transform: \"translate(-50%,-50%)\", // adjust top \"up\" based on height\n    width: \"90%\",\n    maxWidth: \"800px\",\n    overflow: \"hidden\",\n  },\n};\n\nconst hiddenKeys = [\"msg\", \"unixTime\"];\n\ntype Props = {\n  open: boolean;\n  closeModal: () => void;\n  modalParams: any;\n};\n\nexport default ({ open, closeModal, modalParams }: Props) => {\n  const log = modalParams.log || {};\n  return (\n    <ReactModal\n      ariaHideApp={false}\n      isOpen={open}\n      contentLabel=\"Action Modal\"\n      className=\"modal-content tiny-modal px-4 pt-3 pb-4\"\n      shouldCloseOnOverlayClick={true}\n      style={style}\n      onRequestClose={closeModal}\n      closeTimeoutMS={100}\n    >\n      <div className=\"modal-header p-0\">\n        <h4>\n          <b>Log Details</b>\n        </h4>\n        <h4>\n          <span className=\"float-right close-icon\">\n            <i className=\"material-icons\" onClick={closeModal}>\n              close\n            </i>\n          </span>\n        </h4>\n      </div>\n      <div className=\"modal-body px-0 pb-0 pt-1\">\n        <Row className=\"px-3\">\n          <Col xs=\"3\" className=\"border-bottom pb-1 px-0\">\n            <span className=\"text-bold\">msg</span>\n          </Col>\n          <Col xs=\"9\" className=\"border-bottom pb-1 px-0\">\n            {log.msg}\n          </Col>\n        </Row>\n        {Object.entries(log)\n          .filter(([key, value]) => !hiddenKeys.includes(key))\n          .map(([key, value]) =>\n            key === \"msg\" ? (\n              \"\"\n            ) : (\n              <Row className=\"px-3\" key={key}>\n                <Col xs=\"3\" className=\"border-bottom pb-1 px-0\">\n                  <span className=\"text-bold\">{key}</span>\n                </Col>\n                <Col xs=\"9\" className=\"border-bottom pb-1 px-0\">\n                  {JSON.stringify(value)}\n                </Col>\n              </Row>\n            )\n          )}\n      </div>\n    </ReactModal>\n  );\n};\n","import React from \"react\";\nimport { Container, Row, Col } from \"shards-react\";\n\nimport { MainNavbar } from \"../components/Layout/MainNavbar/MainNavbar\";\nimport MainSidebar from \"../components/Layout/MainSidebar/MainSidebar\";\nimport MainFooter from \"../components/Layout/MainFooter\";\nimport { CookiesBanner } from \"../components/Common/CookiesBanner\";\nimport { InfoToast } from \"../components/Common/InfoToast\";\nimport { ConnectionToast } from \"../components/Common/ConnectionToast\";\n\nimport PasteYAML from \"../modals/PasteYAML\";\nimport WriteReview from \"../modals/WriteReview\";\nimport LogDetails from \"../modals/LogDetails\";\n\nimport logger from \"../logger\";\n\nimport { Store, Dispatcher, Constants } from \"../flux\";\n\nclass IconSidebarLayout extends React.Component<any, any> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      loggerEnabled: logger.isEnabled(),\n      modal: Store.getModal(),\n      modalParams: Store.getModalParams(),\n      loading: Store.isLoading(),\n      user: Store.getUser(),\n      banner: Store.getBanner(),\n      connected: Store.getConnectionStatus(),\n      menuVisible: Store.getMenuState(),\n      sidebarNavItems: Store.getSidebarItems(),\n      acceptedCookies: localStorage.getItem(\"accepted-cookies\"),\n    };\n    Store.on(\"update-ui\", this.getData);\n    Store.on(\"update-user\", this.getUser);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-ui\", this.getData);\n    Store.removeListener(\"update-user\", this.getUser);\n  };\n\n  getData = () => {\n    const modal = Store.getModal();\n    const modalParams = Store.getModalParams();\n    const loading = Store.isLoading();\n    const banner = Store.getBanner();\n    const connected = Store.getConnectionStatus();\n    const loggerEnabled = logger.isEnabled();\n    const menuVisible = Store.getMenuState();\n    const sidebarNavItems = Store.getSidebarItems();\n    this.setState({\n      modal,\n      loading,\n      banner,\n      connected,\n      modalParams,\n      loggerEnabled,\n      menuVisible,\n      sidebarNavItems,\n    });\n  };\n\n  getUser = () => {\n    const user = Store.getUser();\n    this.setState({ user });\n  };\n\n  acceptCookies = () => {\n    localStorage.setItem(\"accepted-cookies\", String(true));\n    this.setState({ acceptedCookies: true });\n  };\n\n  closeModal = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.CLOSE_MODAL,\n    });\n  };\n\n  importYAML = (yamlString: string) => {\n    Dispatcher.dispatch({\n      actionType: Constants.IMPORT_CUSTOM_YAML,\n      payload: yamlString,\n    });\n  };\n\n  submitReview = (content: any) => {\n    const { imageId } = this.state.modalParams;\n    Dispatcher.dispatch({\n      actionType: Constants.POST_REVIEW,\n      payload: { content, imageId },\n    });\n  };\n\n  reconnect = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.RECONNECT,\n    });\n  };\n\n  logOut = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.LOG_OUT,\n    });\n  };\n\n  toggleSidebar = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.TOGGLE_SIDEBAR,\n    });\n  };\n\n  enableLogger = () => {\n    logger.enable();\n    const storeCopy = Store.getStoreCopy();\n    logger.log(\"Store Snapshot\", storeCopy);\n    Dispatcher.dispatch({\n      actionType: Constants.SHOW_BANNER,\n      payload: [\n        'Debug Mode Enabled. Click \"Export Debug Data\" to download Debug JSON.',\n        \"warning\",\n      ],\n    });\n  };\n\n  disableLogger = () => {\n    logger.disable();\n    Dispatcher.dispatch({\n      actionType: Constants.SHOW_BANNER,\n      payload: [\"Debug Mode Disabled.\", \"warning\"],\n    });\n  };\n\n  exportLogs = () => {\n    const storeCopy = Store.getStoreCopy();\n    logger.log(\"Store Snapshot\", storeCopy);\n    logger.exportLogs();\n  };\n\n  render = () => {\n    const {\n      modal,\n      acceptedCookies,\n      banner,\n      connected,\n      user,\n      loading,\n      modalParams,\n      loggerEnabled,\n      menuVisible,\n      sidebarNavItems,\n    } = this.state;\n    const { children, usesAuth, usesConnection } = this.props;\n    return (\n      <Container fluid className=\"icon-sidebar-nav\">\n        <Row>\n          <MainSidebar\n            sidebarNavItems={sidebarNavItems}\n            menuVisible={menuVisible}\n            toggleSidebar={this.toggleSidebar}\n          />\n          <Col className=\"main-content col\" tag=\"main\">\n            <MainNavbar\n              usesAuth={usesAuth}\n              usesConnection={usesConnection}\n              logOut={this.logOut}\n              toggleSidebar={this.toggleSidebar}\n              reconnect={this.reconnect}\n              connected={connected}\n              user={user}\n            />\n            <InfoToast data={banner} />\n            {usesConnection && !loading && !connected && (\n              <ConnectionToast reconnect={this.reconnect}/>\n            )}\n            {children}\n            {!acceptedCookies && (\n              <CookiesBanner acceptCookies={this.acceptCookies} />\n            )}\n            <MainFooter\n              loggerEnabled={loggerEnabled}\n              enableLogger={this.enableLogger}\n              disableLogger={this.disableLogger}\n              exportLogs={this.exportLogs}\n            />\n          </Col>\n        </Row>\n        <LogDetails\n          open={modal === \"logDetails\"}\n          closeModal={this.closeModal}\n          modalParams={modalParams}\n        />\n        <PasteYAML\n          open={modal === \"import\"}\n          closeModal={this.closeModal}\n          importYAML={this.importYAML}\n        />\n        <WriteReview\n          open={modal === \"review\"}\n          closeModal={this.closeModal}\n          submitReview={this.submitReview}\n        />\n      </Container>\n    );\n  };\n}\n\nexport default IconSidebarLayout;\n","import React from \"react\";\nimport { Container, Row, Col } from \"shards-react\";\n\nimport { MainNavbar } from \"../components/Layout/MainNavbar/MainNavbar\";\nimport MainFooter from \"../components/Layout/MainFooter\";\nimport { CookiesBanner } from \"../components/Common/CookiesBanner\";\nimport { InfoToast } from \"../components/Common/InfoToast\";\n\nimport WriteReview from \"../modals/WriteReview\";\n\nimport logger from \"../logger\";\n\nimport { Store, Dispatcher, Constants } from \"../flux\";\n\nclass HubLayout extends React.Component<any, any> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      loggerEnabled: logger.isEnabled(),\n      modal: Store.getModal(),\n      modalParams: Store.getModalParams(),\n      loading: Store.isLoading(),\n      user: Store.getUser(),\n      banner: Store.getBanner(),\n      acceptedCookies: localStorage.getItem(\"accepted-cookies\"),\n    };\n    Store.on(\"update-ui\", this.getData);\n    Store.on(\"update-user\", this.getUser);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-ui\", this.getData);\n    Store.removeListener(\"update-user\", this.getUser);\n  };\n\n  getData = () => {\n    const modal = Store.getModal();\n    const modalParams = Store.getModalParams();\n    const loading = Store.isLoading();\n    const banner = Store.getBanner();\n    const loggerEnabled = logger.isEnabled();\n    this.setState({\n      modal,\n      loading,\n      banner,\n      modalParams,\n      loggerEnabled,\n    });\n  };\n\n  getUser = () => {\n    const user = Store.getUser();\n    this.setState({ user });\n  };\n\n  acceptCookies = () => {\n    localStorage.setItem(\"accepted-cookies\", String(true));\n    this.setState({ acceptedCookies: true });\n  };\n\n  closeModal = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.CLOSE_MODAL,\n    });\n  };\n\n  submitReview = (content: any) => {\n    const { imageId } = this.state.modalParams;\n    Dispatcher.dispatch({\n      actionType: Constants.POST_REVIEW,\n      payload: { content, imageId },\n    });\n\t};\n\t\n  logOut = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.LOG_OUT,\n    });\n  };\n\n  enableLogger = () => {\n    logger.enable();\n    const storeCopy = Store.getStoreCopy();\n    logger.log(\"Store Snapshot\", storeCopy);\n    Dispatcher.dispatch({\n      actionType: Constants.SHOW_BANNER,\n      payload: [\n        'Debug Mode Enabled. Click \"Export Debug Data\" to download Debug JSON.',\n        \"warning\",\n      ],\n    });\n  };\n\n  disableLogger = () => {\n    logger.disable();\n    Dispatcher.dispatch({\n      actionType: Constants.SHOW_BANNER,\n      payload: [\"Debug Mode Disabled.\", \"warning\"],\n    });\n  };\n\n  exportLogs = () => {\n    const storeCopy = Store.getStoreCopy();\n    logger.log(\"Store Snapshot\", storeCopy);\n    logger.exportLogs();\n  };\n\n  render = () => {\n    const {\n      modal,\n      acceptedCookies,\n      banner,\n      user,\n      loggerEnabled,\n    } = this.state;\n    const { children, usesAuth, usesConnection } = this.props;\n    return (\n      <Container>\n        <Row>\n          <Col className=\"main-content col\" tag=\"main\">\n            <MainNavbar\n              usesAuth={usesAuth}\n              usesConnection={usesConnection}\n\t\t\t\t\t\t\tlogOut={this.logOut}\n              hideSidebarToggle={true}\n              showLogo\n              user={user}\n            />\n            <InfoToast data={banner} />\n            {children}\n            {!acceptedCookies && (\n              <CookiesBanner acceptCookies={this.acceptCookies} />\n            )}\n            <MainFooter\n              loggerEnabled={loggerEnabled}\n              enableLogger={this.enableLogger}\n              disableLogger={this.disableLogger}\n              exportLogs={this.exportLogs}\n            />\n          </Col>\n        </Row>\n        <WriteReview\n          open={modal === \"review\"}\n          closeModal={this.closeModal}\n          submitReview={this.submitReview}\n        />\n      </Container>\n    );\n  };\n}\n\nexport default HubLayout;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { Col } from \"react-bootstrap\";\n\ntype Props = {\n  title: string;\n  subtitle?: string;\n  className: string;\n};\n\nfunction PageTitle({ title, subtitle, className }: Props) {\n  const classes = classNames(\n    className,\n    \"text-center\",\n    \"text-md-left\",\n    \"mb-sm-0\"\n  );\n\n  return (\n    <Col xs=\"12\" sm=\"3\" className={classes}>\n      <h3 className=\"page-title\" data-name=\"title\">\n        {title}\n      </h3>\n      <p className=\"page-subtitle mt-2 mb-0\">{subtitle}</p>\n    </Col>\n  );\n}\n\nexport { PageTitle };\n","export const Constants = {\n  TOGGLE_SIDEBAR: \"TOGGLE_SIDEBAR\",\n  SET_CURRENT_TAB: \"SET_CURRENT_TAB\",\n  SELECT_NODE: \"SELECT_NODE\",\n  IMPORT_CUSTOM_YAML: \"IMPORT_CUSTOM_YAML\",\n  SHOW_MODAL: \"SHOW_MODAL\",\n  CLOSE_MODAL: \"CLOSE_MODAL\",\n  SHOW_LOG_AT_INDEX: \"SHOW_LOG_AT_INDEX\",\n  SAVE_SETTINGS: \"SAVE_SETTINGS\",\n  RECONNECT: \"RECONNECT\",\n  POST_REVIEW: \"POST_REVIEW\",\n  POST_RATING: \"POST_RATING\",\n  LOG_OUT: \"LOG_OUT\",\n  SEARCH_HUB: \"SEARCH_HUB\",\n  SHOW_BANNER: \"SHOW_BANNER\",\n  LOAD_FLOW: \"LOAD_FLOW\",\n  SHOW_POD_IN_FLOW: \"SHOW_POD_IN_FLOW\",\n  CREATE_NEW_FLOW: \"CREATE_NEW_FLOW\",\n  UPDATE_FLOW: \"UPDATE_FLOW\",\n  DUPLICATE_FLOW: \"DUPLICATE_FLOW\",\n  DELETE_FLOW: \"DELETE_FLOW\",\n};\n","import { fromUnixTime } from \"date-fns\";\nimport { nanoid } from \"nanoid\";\nconst levels = [\n  \"INFO\",\n  \"SUCCESS\",\n  \"WARNING\",\n  \"ERROR\",\n  \"CRITICAL\",\n  \"DEBUG\",\n] as const;\nexport type Level = typeof levels[number];\n\n//todo look into possible refactoring of the types\n\nexport type RawLogEntry = {\n  lastLog: number;\n  levels: {\n    [level in Level]: number;\n  };\n};\nexport type RawLog = {\n  created: number;\n  filename: string;\n  funcName: string;\n  levelname: Level;\n  lineno: number;\n  module: string;\n  msg: string;\n  name: string;\n  pathname: string;\n  process: number;\n  processName: string;\n  thread: number;\n  threadName: string;\n};\n\nexport type ProcessedLog = RawLog & {\n  createdDate: Date;\n  id: string;\n  idx: number;\n  unixTime: number;\n  timestamp: Date;\n  formattedTimestamp: string;\n};\n\nfunction transformLog(log: RawLog, idx: number): ProcessedLog {\n  const { created } = log;\n  const createdDate = fromUnixTime(created);\n  const id = nanoid();\n  const unixTime = Math.floor(created);\n  const timestamp = new Date(unixTime * 1000);\n  const formattedTimestamp = timestamp.toLocaleString();\n  return {\n    ...log,\n    createdDate,\n    id,\n    idx,\n    unixTime,\n    timestamp,\n    formattedTimestamp,\n  };\n}\n\nexport { transformLog };\n","import { Flow } from \"./flows.types\";\n\nexport const LOAD_FLOW = \"LOAD_FLOW\";\nexport const CREATE_NEW_FLOW = \"CREATE_NEW_FLOW\";\nexport const UPDATE_FLOW = \"UPDATE_FLOW\";\nexport const DUPLICATE_FLOW = \"DUPLICATE_FLOW\";\nexport const DELETE_FLOW = \"DELETE_FLOW\";\n\nexport const initialFlow: Flow = {\n  selected: {},\n  hovered: {},\n  scale: 1,\n  nodes: {\n    gateway: {\n      id: \"gateway\",\n      label: \"gateway\",\n      ports: {\n        outPort: {\n          id: \"outPort\",\n          type: \"output\",\n        },\n      },\n      properties: {},\n      position: { x: 629, y: 72 },\n    },\n  },\n  links: {},\n  offset: { x: 0, y: 0 },\n};\n","import React from \"react\";\nimport Select, { Props as SelectProps } from \"react-select\";\n\nconst CHART_LEVELS = [\n  \"INFO\",\n  \"SUCCESS\",\n  \"WARNING\",\n  \"ERROR\",\n  \"CRITICAL\",\n  \"DEBUG\",\n] as const;\n\ntype LevelType = typeof CHART_LEVELS[number];\ntype Option = { value: string; label: any };\n\nconst customStyles = {\n  dropdownIndicator: (styles: any) => ({\n    ...styles,\n    color: \"black\",\n  }),\n  indicatorSeparator: (styles: any) => ({\n    ...styles,\n    opacity: \"0\",\n  }),\n  container: (provided: any, { selectProps: { width } }: any) => ({\n    ...provided,\n    width: width,\n  }),\n  option: (styles: any) => ({\n    ...styles,\n    cursor: \"pointer\",\n  }),\n  control: (styles: any) => ({\n    ...styles,\n    cursor: \"pointer\",\n    border: \"none\",\n    background: \"#F6F8FA\",\n  }),\n};\n\nexport type Props = {\n  onFilterChange: (val: any[]) => void;\n  options: { value: string; label: string }[];\n  isMulti?: boolean;\n  isSearchable?: boolean;\n  clearAfter?: boolean;\n} & SelectProps;\n\nfunction MultiFilterSelect({\n  isMulti,\n  isSearchable,\n  clearAfter,\n  onFilterChange,\n  options,\n  ...rest\n}: Props) {\n  let value = clearAfter ? null : undefined;\n  return (\n    <Select\n      onChange={(val) => {\n        onFilterChange(Array.isArray(val) ? val : !val ? [] : [val]);\n      }}\n      value={value}\n      isMulti={isMulti}\n      options={options}\n      styles={customStyles}\n      readOnly={true}\n      isSearchable={isSearchable}\n      {...rest}\n    />\n  );\n}\n\nexport { MultiFilterSelect };\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\n// Layout Types\nimport { HubLayout } from \"../layouts\";\n\n// Route Views\nimport HubView from \"../views/HubView\";\nimport PackageView from \"../views/PackageView\";\nimport LogIn from \"../views/LogIn\";\nimport NotFound from \"../views/NotFound\";\n\nexport const hubRoutes = [\n  {\n    path: \"/\",\n    exact: true,\n    layout: HubLayout,\n    component: () => <Redirect to=\"/home\" />,\n  },\n  {\n    path: \"/help\",\n    layout: HubLayout,\n    component: NotFound,\n    props: {\n      usesConnection: false,\n      usesAuth: false,\n    },\n  },\n  {\n    path: \"/home\",\n    layout: HubLayout,\n    component: HubView,\n    props: {\n      usesConnection: false,\n      usesAuth: true,\n    },\n  },\n  {\n    path: \"/package\",\n    layout: HubLayout,\n    component: PackageView,\n    props: {\n      usesConnection: false,\n      usesAuth: true,\n    },\n  },\n  {\n    path: \"/login\",\n    layout: HubLayout,\n    component: LogIn,\n    props: {\n      usesConnection: false,\n      usesAuth: true,\n    },\n  },\n];\n","import { State } from \"../index\";\n\nexport const selectFlowChart = (state: State) => {\n  return state.flowState.flows[state.flowState.selectedFlow];\n};\n\nexport const selectFlows = (state: State) => state.flowState.flows;\n\nexport const selectSelectedFlowId = (state: State) =>\n  state.flowState.selectedFlow;\n","export const tooltipConfig = {\n  tooltipsGlobal: {\n    showTooltip: true,\n    toogleOffWhenClicked: \"global\",\n    text: \"Hold Shift and click to select multiple nodes\",\n  },\n};\n","import {\n  CREATE_NEW_FLOW,\n  DELETE_FLOW,\n  DUPLICATE_FLOW,\n  LOAD_FLOW,\n  UPDATE_FLOW,\n} from \"./flows.constants\";\nimport {\n  CreateNewFlowAction,\n  DeleteFlowAction,\n  DuplicateFlowAction,\n  Flow,\n  LoadFlowAction,\n  UpdateFlowAction,\n} from \"./flows.types\";\n\nexport function loadFlow(flowId: string): LoadFlowAction {\n  return {\n    type: LOAD_FLOW,\n    payload: flowId,\n  };\n}\n\nexport function createNewFlow(): CreateNewFlowAction {\n  return {\n    type: CREATE_NEW_FLOW,\n  };\n}\nexport function updateFlow(flow: Flow): UpdateFlowAction {\n  return {\n    type: UPDATE_FLOW,\n    payload: flow,\n  };\n}\nexport function duplicateFlow(customYAML: string): DuplicateFlowAction {\n  return {\n    type: DUPLICATE_FLOW,\n    payload: customYAML,\n  };\n}\nexport function deleteFlow(flowId: string): DeleteFlowAction {\n  return {\n    type: DELETE_FLOW,\n    payload: flowId,\n  };\n}\n","import React, { useState } from \"react\";\nimport { Dropdown } from \"react-bootstrap\";\n\ntype SelectionIndicatorProps = {\n  selected: boolean;\n};\n\nfunction SelectionIndicator({ selected }: SelectionIndicatorProps) {\n  return selected ? (\n    <i className=\"material-icons text-primary\">radio_button_checked</i>\n  ) : (\n    <i className=\"material-icons\">radio_button_unchecked</i>\n  );\n}\n\ntype ConnectionIndicatorProps = {\n  connected: boolean;\n  show: boolean;\n};\n\nfunction ConnectionIndicator({ connected, show }: ConnectionIndicatorProps) {\n  if (!show) return null;\n  return connected ? (\n    <i className=\"material-icons ml-2 text-success\">wifi</i>\n  ) : (\n    <i className=\"material-icons ml-2 text-warning\">wifi_off</i>\n  );\n}\n\nfunction TitleConnectionIndicator({\n  connected,\n  show,\n}: ConnectionIndicatorProps) {\n  if (!show) return null;\n  return connected ? (\n    <i className=\"material-icons text-white ml-1 mr-2\">wifi</i>\n  ) : (\n    <i className=\"material-icons text-warning ml-1 mr-2\">wifi_off</i>\n  );\n}\n\ntype DeleteFlowProps = {\n  deleteFlow: (e: any) => void;\n  show: boolean;\n};\n\nfunction DeleteFlowButton({ show, deleteFlow }: DeleteFlowProps) {\n  if (!show) return null;\n  return (\n    <i className=\"material-icons text-danger float-right\" onClick={deleteFlow}>\n      delete\n    </i>\n  );\n}\n\ntype EditFlowsProps = {\n  toggleEditing: () => void;\n  isEditing: boolean;\n};\n\nfunction EditFlowsButton({ isEditing, toggleEditing }: EditFlowsProps) {\n  return isEditing ? (\n    <i\n      onClick={toggleEditing}\n      className=\"material-icons float-right cursor-pointer text-success\"\n    >\n      done\n    </i>\n  ) : (\n    <i\n      onClick={toggleEditing}\n      className=\"material-icons float-right cursor-pointer\"\n    >\n      edit\n    </i>\n  );\n}\n\ntype FlowSelectionProps = {\n  flows: {\n    [key: string]: any;\n  };\n  loadFlow: (flowId: string) => void;\n  createNewFlow: (e: any) => void;\n  deleteFlow: (e: any, flowId: string) => void;\n  selectedFlowId: string;\n  connected: boolean;\n};\n\nexport default function FlowSelection({\n  flows,\n  loadFlow,\n  selectedFlowId,\n  createNewFlow,\n  deleteFlow,\n  connected,\n}: FlowSelectionProps) {\n  const [isEditing, setIsEditing] = useState(false);\n\n  const toggleEditing = () => {\n    setIsEditing((currentIsEditing) => !currentIsEditing);\n  };\n\n  const userFlows = Object.entries(flows).filter(\n    ([id, flow]) => flow.type !== \"example\"\n  );\n\n  const exampleFlows = Object.entries(flows).filter(\n    ([id, flow]) => flow.type === \"example\"\n  );\n\n  const currentFlow = flows[selectedFlowId];\n\n  return (\n    <Dropdown className=\"flow-selection\">\n      <Dropdown.Toggle>\n        {currentFlow.name}\n        <TitleConnectionIndicator\n          show={currentFlow.type === \"remote\"}\n          connected={connected}\n        />\n      </Dropdown.Toggle>\n      <Dropdown.Menu>\n        <Dropdown.Item onClick={createNewFlow}>\n          <i className=\"material-icons\">add</i>New Flow\n        </Dropdown.Item>\n        <Dropdown.Header className=\"text-uppercase\">\n          Your Flows{\" \"}\n          <EditFlowsButton\n            isEditing={isEditing}\n            toggleEditing={toggleEditing}\n          />\n        </Dropdown.Header>\n        {userFlows.map(([flowId, flow], idx) => (\n          <Dropdown.Item onClick={() => loadFlow(flowId)} key={idx}>\n            <SelectionIndicator selected={flowId === selectedFlowId} />\n            {flow.name}\n            <ConnectionIndicator\n              show={flow.type === \"remote\"}\n              connected={connected}\n            />\n            <DeleteFlowButton\n              show={flow.type === \"user-generated\" && isEditing}\n              deleteFlow={(e: any) => deleteFlow(e, flowId)}\n            />\n          </Dropdown.Item>\n        ))}\n        <Dropdown.Header className=\"text-uppercase\">Examples</Dropdown.Header>\n        {exampleFlows.map(([flowId, flow], idx) => (\n          <Dropdown.Item onClick={() => loadFlow(flowId)} key={idx}>\n            <SelectionIndicator selected={flowId === selectedFlowId} />\n            {flow.name}\n          </Dropdown.Item>\n        ))}\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n}\n","import React from \"react\";\nimport { ButtonGroup, Button } from \"react-bootstrap\";\n\ntype Props = {\n  importChart: () => void;\n  copyChart: () => void;\n  exportImage: (format: string) => void;\n};\n\nexport default function ChartNode({\n  importChart,\n  copyChart,\n  exportImage,\n}: Props) {\n  return (\n    <div className=\"command-bar-container\">\n      <div className=\"command-bar\">\n        <ButtonGroup>\n          <Button variant=\"secondary\" disabled>\n            <i className=\"material-icons\">play_arrow</i>\n          </Button>\n          <Button variant=\"secondary\" disabled>\n            <i className=\"material-icons\">stop</i>\n          </Button>\n          <Button variant=\"secondary\" disabled>\n            <i className=\"material-icons\">schedule</i>\n          </Button>\n          <Button variant=\"secondary\" onClick={importChart}>\n            <i className=\"material-icons\">save_alt</i>\n          </Button>\n          <Button variant=\"secondary\" onClick={copyChart}>\n            <i className=\"material-icons\">assignment</i>\n          </Button>\n          <Button variant=\"secondary\" onClick={() => exportImage(\"png\")}>\n            <i className=\"material-icons\">camera_alt</i>\n          </Button>\n        </ButtonGroup>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { ITooltipComponentDefaultProps } from \"@bastinjafari/react-flow-chart-with-tooltips-and-multi-select\";\n\nexport default function Tooltip(props: ITooltipComponentDefaultProps) {\n  return (\n    <div className=\"tooltip-container\">\n      <img className=\"tooltip-icon\" src=\"../../icon.png\" alt=\"Tooltip Icon\" />\n      <span className=\"tooltip-text\">{props.tooltip}</span>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Badge } from \"react-bootstrap\";\n\ntype Props = {\n  node: {\n    properties: any;\n    label: string | undefined;\n  };\n};\n\nexport default function ChartNode({ node }: Props) {\n  const { properties, label } = node;\n  const list: any = [];\n  Object.keys(properties).forEach((prop, idx) => {\n    if (properties[prop] && prop !== \"name\")\n      list.push(\n        <div key={idx}>\n          <span className=\"text-bold mr-1\">{prop}:</span>\n          {properties[prop]}\n        </div>\n      );\n  });\n  const isSpecial = Object.keys(properties).length > 0;\n  const isGateway = label === \"gateway\";\n  let labelText = typeof label === \"undefined\" ? properties.name : label || \"\";\n  return (\n    <div\n      className={`chart-node ${isGateway ? \"gateway\" : \"\"}`}\n      id={`chart-node-${label}`}\n    >\n      <div className=\"node-header\">\n        <div className={`p-1 ${isSpecial ? \"special\" : \"\"}`}>\n          <p className=\"m-1\">\n            <span className=\"text-bold\">\n              {labelText || <span className=\"text-warning\">Empty Pod</span>}\n            </span>\n            <Badge variant=\"primary\" className=\"ml-2 mt-1 py-1 px-2\">\n              {properties.replicas}\n            </Badge>\n          </p>\n        </div>\n      </div>\n      {list.length > 0 && (\n        <div className=\"node-info border-top px-2\">{list}</div>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function NodePort() {\n  return (\n    <div className=\"node-port\">\n      <i className=\"fa fa-chevron-down\" data-html2canvas-ignore=\"true\"></i>\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport { REACT_FLOW_CHART } from \"@bastinjafari/react-flow-chart-with-tooltips-and-multi-select\";\nimport ChartNode from \"./ChartNode\";\n\ntype Props = {\n  label?: string;\n  ports: {\n    [key: string]: any;\n  };\n  properties: {\n    [key: string]: any;\n  };\n};\n\nexport default function SidebarItem({ label, ports, properties }: Props) {\n  const ref: React.RefObject<HTMLInputElement> = React.createRef();\n  return (\n    <div\n      ref={ref}\n      className=\"mb-3 draggable-container\"\n      draggable={true}\n      onDragStart={(event) => {\n        event.dataTransfer.setData(\n          REACT_FLOW_CHART,\n          JSON.stringify({ label, ports, properties })\n        );\n      }}\n    >\n      <ChartNode node={{ properties, label }} />\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport SidebarItem from \"./SidebarItem\";\nimport defaultPods from \"../../data/defaultPods.json\";\nimport _ from \"lodash\";\nimport { ILink } from \"@bastinjafari/react-flow-chart-with-tooltips-and-multi-select\";\nimport { Button, Card, FormControl } from \"react-bootstrap\";\nimport { Flow, Node } from \"../../redux/flows/flows.types\";\n\ntype ParsedNode = {\n  label: string;\n  id: string;\n  properties: { [key: string]: string | number };\n  newProperties: { [key: string]: string | number };\n};\n\ntype NodesObject = {\n  [key: string]: Node;\n};\n\nconst parseNode = (node: Node): ParsedNode => {\n  const properties = { ...node.properties };\n  const newProperties = {};\n  const label = node.label || \"\";\n\n  return { label, id: node.id, properties, newProperties };\n};\n\nfunction ReadOnly({ duplicateFlow }: { duplicateFlow: () => void }) {\n  return (\n    <div className=\"readonly-overlay py-4 px-4 text-center\">\n      <h4 className=\"my-4\">\n        <b>\n          This flow is <span className=\"text-muted\">readonly</span>\n        </b>\n      </h4>\n      <p className=\"my-4\">To edit this flow, please duplicate it.</p>\n      <Button onClick={duplicateFlow}>Duplicate Flow</Button>\n    </div>\n  );\n}\n\ntype EditLinkProps = {\n  link: ILink;\n  nodes: NodesObject;\n  updateLink: (\n    linkId: string,\n    nodeFrom: string,\n    nodeTo: string | undefined\n  ) => void;\n  deleteSelection: () => void;\n};\n\nfunction EditLink({ link, nodes, updateLink, deleteSelection }: EditLinkProps) {\n  let nodeFromId = link.from.nodeId;\n  let nodeToId = link.to.nodeId;\n\n  let choices = Object.keys(nodes).map((id) => {\n    return { label: nodes[id].label || nodes[id].properties.name, id };\n  });\n\n  return (\n    <div className=\"h-100 d-flex flex-column\">\n      <h5 className=\"px-3 py-2 mb-0 border-bottom\">\n        <b>Edit Connection</b>\n      </h5>\n      <div className=\"flex-fill px-2\">\n        <div className=\"p-2 mb-1\">\n          <p className=\"mb-1\">\n            <b>From</b>\n          </p>\n          <FormControl\n            className=\"mb-2\"\n            as=\"select\"\n            onChange={(e) => updateLink(link.id, e.target.value, nodeToId)}\n            value={nodeFromId}\n          >\n            {choices.map((choice) => (\n              <option key={choice.id} value={choice.id}>\n                {choice.label}\n              </option>\n            ))}\n          </FormControl>\n          <p className=\"mb-1\">\n            <b>To</b>\n          </p>\n          <FormControl\n            className=\"mb-2\"\n            as=\"select\"\n            onChange={(e) => updateLink(link.id, nodeFromId, e.target.value)}\n            value={nodeToId}\n          >\n            {choices.map((choice) => (\n              <option key={choice.id} value={choice.id}>\n                {choice.label}\n              </option>\n            ))}\n          </FormControl>\n        </div>\n      </div>\n      <div className=\"p-2\">\n        <Button variant=\"danger\" className=\"w-100\" onClick={deleteSelection}>\n          Delete Connection\n        </Button>\n      </div>\n    </div>\n  );\n}\n\ntype PropertyItem = {\n  name: string;\n  type: string;\n};\n\ntype EditNodeProps = {\n  node: ParsedNode;\n  availableProperties: PropertyItem[];\n  updateLabel: (label: string) => void;\n  updateNewValue: (key: string, value: string | number) => void;\n  updateExistingValue: (key: string, value: string | number) => void;\n  deleteSelection: () => void;\n};\n\nfunction EditNode({\n  node,\n  updateLabel,\n  updateNewValue,\n  updateExistingValue,\n  deleteSelection,\n  availableProperties,\n}: EditNodeProps) {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [filteredProperties, setFilteredProperties] = useState(\n    availableProperties\n  );\n\n  const updateSearchQuery = (searchString: string) => {\n    setSearchQuery(searchString);\n  };\n\n  useEffect(() => {\n    const results = availableProperties.filter((property: any) =>\n      property.name.toLowerCase().includes(searchQuery.toLowerCase())\n    );\n    setFilteredProperties(results);\n  }, [searchQuery, availableProperties]);\n\n  useEffect(() => {\n    setSearchQuery(\"\");\n    setFilteredProperties(availableProperties);\n  }, [node.id, availableProperties]);\n\n  let label = node.label || node.properties.name;\n\n  return (\n    <div className=\"h-100 d-flex flex-column\">\n      <div className=\"p-2 mb-1\">\n        <p className=\"mb-1\">\n          <b>Pod Name</b>\n        </p>\n        <FormControl\n          spellCheck={false}\n          value={label}\n          onChange={(e) => updateLabel(e.target.value)}\n          className=\"pod-name-input\"\n        />\n      </div>\n      <p className=\"mb-0 px-2\">\n        <b>Properties</b>\n      </p>\n      <div className=\"m-2\">\n        <FormControl\n          spellCheck={false}\n          placeholder=\"search properties...\"\n          value={searchQuery}\n          onChange={(e) => updateSearchQuery(e.target.value)}\n        />\n      </div>\n      <div className=\"property-table flex-fill mx-2\">\n        {filteredProperties.map((property) => {\n          const { name, type } = property;\n          const value = node.properties[name];\n\n          if (typeof value == \"undefined\")\n            return (\n              <div key={name} className=\"property-item mb-2\">\n                <p className=\"property-label mb-1\">{name}</p>\n                <FormControl\n                  spellCheck={false}\n                  placeholder={type}\n                  type={type === \"int\" ? \"number\" : \"text\"}\n                  value={node.newProperties[name] || \"\"}\n                  onChange={(e) => updateNewValue(name, e.target.value)}\n                  className=\"property-value-input\"\n                ></FormControl>\n              </div>\n            );\n          return (\n            <div key={name} className=\"property-item mb-2\">\n              <p className=\"property-label mb-1\">{name}</p>\n              <FormControl\n                spellCheck={false}\n                placeholder={type}\n                type={type === \"int\" ? \"number\" : \"text\"}\n                value={value || \"\"}\n                onChange={(e) => updateExistingValue(name, e.target.value)}\n                className=\"property-value-input\"\n              />\n            </div>\n          );\n        })}\n      </div>\n      <div className=\"p-2\">\n        <Button variant=\"danger\" className=\"w-100\" onClick={deleteSelection}>\n          Delete Pod\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nfunction PodMenu() {\n  return (\n    <div className=\"d-flex flex-column h-100\">\n      <h5 className=\"px-3 py-2 mb-0 border-bottom\">\n        <b>Add Pods</b>\n      </h5>\n      <div className=\"p-3 scrollable flex-fill\">\n        <SidebarItem\n          ports={{\n            inPort: {\n              id: \"inPort\",\n              type: \"input\",\n            },\n            outPort: {\n              id: \"outPort\",\n              type: \"output\",\n            },\n          }}\n          properties={{}}\n        />\n        {defaultPods.map((pod, idx) => (\n          <SidebarItem\n            key={idx}\n            ports={{\n              inPort: {\n                id: \"inPort\",\n                type: \"input\",\n              },\n              outPort: {\n                id: \"outPort\",\n                type: \"output\",\n              },\n            }}\n            properties={pod}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\ntype FlowChartSidebarProps = {\n  readonly: boolean;\n  flow: Flow;\n  duplicateFlow: () => void;\n  updateNode: (updates: any) => void;\n  deleteSelection: () => void;\n  updateLink: (\n    linkId: string,\n    nodeFromId: string,\n    nodeToId: string | undefined\n  ) => void;\n  availableProperties: PropertyItem[];\n};\n\nfunction FlowChartSidebar({\n  readonly,\n  flow,\n  duplicateFlow,\n  deleteSelection,\n  updateNode,\n  updateLink,\n  availableProperties,\n}: FlowChartSidebarProps) {\n  const {\n    selected: { id: selectedId, type: selectedType },\n    nodes,\n    links,\n  } = flow;\n\n  const [node, setNode] = useState<ParsedNode | undefined>();\n\n  useEffect(() => {\n    let node;\n    if (!selectedId) return;\n    const selectedNode = nodes[selectedId];\n    if (selectedNode) node = parseNode(selectedNode);\n    setNode(node);\n  }, [nodes, selectedId]);\n\n  function updateLabel(label: string) {\n    updateNode({\n      ...node,\n      label,\n    });\n  }\n\n  function updateNewValue(key: string, value: any) {\n    if (!node) return;\n    let newNode = _.cloneDeep(node);\n    newNode.newProperties[key] = value;\n    updateNode({\n      ...newNode,\n    });\n  }\n\n  function updateExistingValue(key: string, value: any) {\n    if (!node) return;\n    let newNode = _.cloneDeep(node);\n    newNode.properties[key] = value;\n    updateNode({\n      ...newNode,\n    });\n  }\n\n  return (\n    <Card className=\"flowchart-sidebar mb-4\">\n      {selectedId ? (\n        selectedType === \"link\" ? (\n          <EditLink\n            nodes={nodes}\n            link={links[selectedId]}\n            updateLink={updateLink}\n            deleteSelection={deleteSelection}\n          />\n        ) : (\n          node && (\n            <EditNode\n              availableProperties={availableProperties}\n              node={node}\n              updateLabel={updateLabel}\n              updateNewValue={updateNewValue}\n              updateExistingValue={updateExistingValue}\n              deleteSelection={deleteSelection}\n            />\n          )\n        )\n      ) : (\n        <PodMenu />\n      )}\n      {readonly && <ReadOnly duplicateFlow={duplicateFlow} />}\n    </Card>\n  );\n}\n\nexport default FlowChartSidebar;\n","import { Theme } from \"@emotion/react\";\n\nexport const getLevels = (theme: Theme): { [key: string]: any } => {\n  const colorPalette = theme.palette;\n  return {\n    INFO: {\n      borderColor: colorPalette.info,\n      backgroundColor: \"rgba(0, 153, 153, 0.9)\",\n    },\n    SUCCESS: {\n      borderColor: colorPalette.success,\n      backgroundColor: \"rgba(50, 200, 205, 0.9)\",\n    },\n    WARNING: {\n      borderColor: colorPalette.warning,\n      backgroundColor: \"rgba(255, 204, 102, 0.9)\",\n    },\n    ERROR: {\n      borderColor: colorPalette.error,\n      backgroundColor: \"rgba(255, 102, 102, 0.9)\",\n    },\n    CRITICAL: {\n      borderColor: colorPalette.critical,\n      backgroundColor: \"rgba(255, 70, 64, 0.9)\",\n    },\n    DEBUG: {\n      borderColor: colorPalette.debug,\n      backgroundColor: \"rgba(110, 114, 120, 0.9)\",\n    },\n  };\n};\n","import React, { useRef, useEffect, useState, useCallback } from \"react\";\nimport ChartElement, {\n  ChartConfiguration,\n  ChartOptions,\n  ChartData,\n  ChartDataSets,\n} from \"chart.js\";\nimport { LogLevelSummaryChartData } from \"./types\";\nimport { getLevels } from \"./levels\";\nimport { Theme, useTheme } from \"@emotion/react\";\n\nconst DEFAULT_HEIGHT = 10;\nconst DEFAULT_WIDTH = 100;\n\nfunction getParsedDatasets(data: LogLevelSummaryChartData, theme: Theme) {\n  const levels = getLevels(theme);\n  const datasets = Object.keys(levels).map(\n    (level): ChartDataSets => {\n      const levelData = data.map((tick: any) => tick.levels[level]);\n      return {\n        barPercentage: 0.75,\n        categoryPercentage: 1,\n        label: level,\n        fill: \"start\",\n        backgroundColor: levels[level].backgroundColor,\n        data: levelData,\n      };\n    }\n  );\n  return datasets;\n}\n\nfunction getLabels(amount?: number): number[] {\n  const labels = [];\n  for (let i = 0; i < (amount || 0); ++i) {\n    labels.push(i);\n  }\n  return labels;\n}\n\ntype Props = {\n  width?: number;\n  height?: number;\n  numTicks?: number;\n  data: LogLevelSummaryChartData;\n  onClick: (activePoints: any) => void;\n  timeLabels: string[];\n};\n\nfunction ChartBase({\n  width,\n  height,\n  data,\n  numTicks,\n  onClick,\n  timeLabels,\n}: Props) {\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n  const [chartInstance, setChartInstance] = useState<ChartElement | null>(null);\n  // Get theme from ThemeProvider (for usecases like dark mode)\n  const theme = useTheme();\n\n  function onClickChart(e: any) {\n    if (!chartInstance) return;\n    const activePoints = chartInstance.getElementsAtEvent(e);\n    onClick(activePoints);\n  }\n\n  const getXAxisLabel = useCallback(\n    (value: any, index: number, values: any) => {\n      if (index === 0) return timeLabels[0];\n      else if (index === Math.floor(values.length / 2)) return timeLabels[1];\n      return;\n    },\n    [timeLabels]\n  );\n\n  function getYAxisLabel(value: any) {\n    if (Number.isInteger(value)) {\n      return value;\n    }\n  }\n\n  function ChartLegend() {\n    return (\n      <div\n        className=\"chart-legend mt-1 mb-3\"\n        data-name=\"logOccurencesChartLegend\"\n      >\n        {Object.entries(getLevels(theme)).map(\n          ([level, style]: [string, any]) => (\n            <div className=\"chart-legend-item\" key={level}>\n              <div\n                className={`chart-legend-indicator mr-1 ${level.toLowerCase()}`}\n                style={{ backgroundColor: style.borderColor }}\n              />\n              <span className=\"chart-legend-caption mr-2\">{level}</span>\n            </div>\n          )\n        )}\n      </div>\n    );\n  }\n\n  useEffect(() => {\n    if (!canvasRef.current) return;\n    const chartOptions: ChartOptions = {\n      animation: { duration: 0 },\n      events: [\"click\"],\n      onClick: onClickChart,\n      maintainAspectRatio: true,\n      responsive: true,\n      legend: {\n        display: false,\n      },\n      tooltips: {\n        enabled: false,\n      },\n      elements: {\n        point: {\n          radius: 0,\n          hitRadius: 20,\n        },\n      },\n      scales: {\n        xAxes: [\n          {\n            stacked: true,\n            ticks: {\n              padding: 5,\n              maxRotation: 0,\n              autoSkip: false,\n              callback: getXAxisLabel,\n            },\n            gridLines: {\n              zeroLineColor: \"#cfd8dc\",\n              color: \"#cfd8dc\",\n            },\n          },\n        ],\n        yAxes: [\n          {\n            stacked: true,\n            scaleLabel: {\n              display: false,\n            },\n            gridLines: {\n              borderDash: [5, 5],\n              zeroLineColor: \"#cfd8dc\",\n              drawBorder: false,\n              color: \"#cfd8dc\",\n            },\n            ticks: {\n              padding: 5,\n              suggestedMin: 0,\n              autoSkip: true,\n              maxTicksLimit: 4,\n              callback: getYAxisLabel,\n            },\n          },\n        ],\n      },\n    };\n\n    const chartConfig: ChartConfiguration = {\n      type: \"bar\",\n      data: {\n        datasets: getParsedDatasets(data, theme),\n      },\n      options: chartOptions,\n    };\n\n    const newChartInstance = new ChartElement(canvasRef.current, chartConfig);\n    setChartInstance(newChartInstance);\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    if (!chartInstance) return;\n    const chartData: ChartData = {\n      labels: getLabels(numTicks),\n      datasets: getParsedDatasets(data, theme),\n    };\n    chartInstance.data = chartData;\n    chartInstance.update();\n  }, [data, chartInstance, numTicks, theme]);\n\n  useEffect(() => {\n    if (\n      chartInstance &&\n      chartInstance.options.scales &&\n      chartInstance.options.scales.xAxes &&\n      chartInstance.options.scales.xAxes[0].ticks\n    ) {\n      chartInstance.options.scales.xAxes[0].ticks.callback = getXAxisLabel;\n      chartInstance.update();\n    }\n  }, [getXAxisLabel, chartInstance]);\n\n  return (\n    <>\n      <ChartLegend />\n      <canvas\n        height={height || DEFAULT_HEIGHT}\n        width={width || DEFAULT_WIDTH}\n        ref={canvasRef}\n      />\n    </>\n  );\n}\n\nexport default ChartBase;\n","import React from \"react\";\nimport { Card, Row, Col } from \"react-bootstrap\";\nimport BarChart from \"./BarChartBase\";\nimport { MultiFilterSelect } from \"../Common/MultiFilterSelect\";\nimport { LogLevelSummaryChartData } from \"./types\";\n\nconst DEFAULT_HEIGHT = 10;\nconst DEFAULT_WIDTH = 70;\n\nconst DEFAULT_HEIGHT_SMALL = 20;\nconst DEFAULT_WIDTH_SMALL = 50;\n\ntype Props = {\n  data: {\n    data: LogLevelSummaryChartData;\n    lastTimestamp: number;\n    numSeconds: number;\n    numTicks: number;\n  };\n  showLog: (activePoints: any) => void;\n  setTimeSelection: (timeSelection: any) => void;\n  timeOptions: { [key: string]: { value: string; label: string } };\n  selectedTime: any;\n  timeLabels: any;\n};\n\nfunction LogLevelSummaryChart({\n  data: { data, numSeconds, numTicks },\n  showLog,\n  setTimeSelection,\n  timeOptions,\n  selectedTime,\n  timeLabels,\n}: Props) {\n  return (\n    <Card className=\"h-100\">\n      <Card.Header className=\"p-2 px-3\">\n        <Row>\n          <Col data-name=\"logOccurenceTitle\">Log Occurences by Level</Col>\n          <Col className=\"text-right\" data-name=\"logOccurenceDurationSelect\">\n            <MultiFilterSelect\n              clearAfter\n              options={Object.values(timeOptions)}\n              onFilterChange={(option: any[]) =>\n                setTimeSelection(option[0].value)\n              }\n              className=\"logstream-select text-left\"\n              placeholder={\n                <span data-name=\"logOccurenceDurationSelectedOption\">\n                  <i className=\"material-icons mr-2\">access_time</i>\n                  {timeOptions[selectedTime].label}\n                </span>\n              }\n              isSearchable={false}\n            />\n          </Col>\n        </Row>\n      </Card.Header>\n      <Card.Body className=\"d-none d-md-block p-0 pb-2 px-3\">\n        <BarChart\n          timeLabels={timeLabels}\n          data={data}\n          numTicks={numTicks}\n          height={DEFAULT_HEIGHT}\n          width={DEFAULT_WIDTH}\n          onClick={showLog}\n        />\n      </Card.Body>\n      <Card.Body className=\"d-md-none pb-2\">\n        <BarChart\n          timeLabels={timeLabels}\n          data={data}\n          numTicks={numTicks}\n          height={DEFAULT_HEIGHT_SMALL}\n          width={DEFAULT_WIDTH_SMALL}\n          onClick={showLog}\n        />\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport { LogLevelSummaryChart };\n","import React, { useRef, useEffect, useState, useCallback } from \"react\";\nimport ChartElement, {\n  ChartConfiguration,\n  ChartOptions,\n  ChartData,\n} from \"chart.js\";\nimport { LogLevelPieChartData } from \"./types\";\nimport { useTheme } from \"@emotion/react\";\nimport { getLevels } from \"./levels\";\n\nconst DEFAULT_HEIGHT = 50;\nconst DEFAULT_WIDTH = 50;\n\ntype Props = {\n  width?: number;\n  height?: number;\n  data: LogLevelPieChartData;\n};\n\nfunction PieChartBase({ width, height, data }: Props) {\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n  const [chartInstance, setChartInstance] = useState<ChartElement | null>(null);\n  const theme = useTheme();\n\n  const getColor = useCallback(\n    (key: string) => {\n      return getLevels(theme)[key];\n    },\n    [theme]\n  );\n\n  useEffect(() => {\n    if (!canvasRef.current) return;\n    const names = Object.keys(data);\n    const chartOptions: ChartOptions = {\n      animation: { duration: 0 },\n      legend: {\n        display: false,\n        position: \"bottom\",\n        labels: {\n          padding: 25,\n          boxWidth: 20,\n        },\n      },\n      tooltips: {\n        mode: \"index\",\n        position: \"nearest\",\n      },\n    };\n\n    const chartConfig: ChartConfiguration = {\n      type: \"pie\",\n      data: {\n        datasets: [\n          {\n            borderWidth: 1,\n            data: Object.values(data),\n            borderColor: names.map((name) => getColor(name).borderColor),\n            backgroundColor: names.map(\n              (name) => getColor(name).backgroundColor\n            ),\n          },\n        ],\n      },\n      options: chartOptions,\n    };\n\n    const newChartInstance = new ChartElement(canvasRef.current, chartConfig);\n    setChartInstance(newChartInstance);\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    if (!chartInstance) return;\n    const names = Object.keys(data);\n    const chartData: ChartData = {\n      labels: names,\n      datasets: [\n        {\n          borderWidth: 1,\n          data: Object.values(data),\n          borderColor: names.map((name) => getColor(name).borderColor),\n          backgroundColor: names.map((name) => getColor(name).backgroundColor),\n        },\n      ],\n    };\n    chartInstance.data = chartData;\n    chartInstance.update();\n  }, [data, chartInstance, getColor]);\n\n  return (\n    <canvas\n      height={height || DEFAULT_HEIGHT}\n      width={width || DEFAULT_WIDTH}\n      ref={canvasRef}\n    />\n  );\n}\n\nexport default PieChartBase;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport PieChart from \"./PieChartBase\";\nimport { LogLevelPieChartData } from \"./types\";\n\ntype Props = {\n  data: LogLevelPieChartData;\n};\n\nfunction LogLevelPieChart({ data }: Props) {\n  return (\n    <Card className=\"h-100\">\n      <Card.Header className=\"text-center p-2\">Log Levels</Card.Header>\n      <Card.Body className=\"px-3 pt-0 pb-3\">\n        <PieChart data={data} />\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport { LogLevelPieChart };\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { memo } from \"react\";\nimport { areEqual } from \"react-window\";\nimport { ProcessedLog } from \"../../flux/tranformLog\";\n\ntype Props = {\n  index: number;\n  style: any;\n  data: {\n    columns: { firstCol: number; secondCol: number; thirdCol: number };\n    items: ProcessedLog[];\n    showLogDetails: (log: any) => void;\n  };\n};\n\nconst LogItem = memo(\n  ({ index, style, data: { columns, items, showLogDetails } }: Props) => {\n    const logData = items[index];\n    const { name, msg, levelname, process, formattedTimestamp, idx } = logData;\n    let logName = String(name);\n    logName = logName.length > 20 ? logName.substring(0, 20) : logName;\n    let levelInitial = String(levelname)[0];\n    const { firstCol, secondCol, thirdCol } = columns;\n    return (\n      <div\n        className={`log log-${String(\n          levelname\n        ).toLowerCase()} px-4 border-bottom py-1`}\n        css={{ maxHeight: 84 }}\n        style={style}\n        onClick={() => showLogDetails(logData)}\n      >\n        <Row>\n          <Col\n            className=\"log-prefix text-muted px-0 d-flex flex-row\"\n            css={{ maxWidth: firstCol }}\n          >\n            <div className=\"text-bold mr-2\">{idx}</div>\n            <div className=\"ml-auto\">{formattedTimestamp}</div>\n          </Col>\n          <Col\n            className=\"log-prefix px-0 text-left text-md-right text-bold cursor-pointer\"\n            css={{ maxWidth: secondCol }}\n          >\n            {logName}@{process}[{levelInitial}]:\n          </Col>\n          <Col\n            className=\"px-0\"\n            css={{\n              maxHeight: 84,\n              display: \"block\",\n              overflow: \"hidden\",\n              textOverflow: \"ellipsis\",\n              width: thirdCol,\n              whiteSpace: \"nowrap\",\n              paddingRight: 0,\n              marginRight: 0,\n            }}\n          >\n            {msg}\n          </Col>\n        </Row>\n      </div>\n    );\n  },\n  areEqual\n);\n\nexport { LogItem };\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport { Row, Col } from \"react-bootstrap\";\n\ntype Props = {\n  columns: { firstCol: number; secondCol: number };\n  border?:boolean;\n};\n\nconst LogsTableHeader = ({ columns: { firstCol, secondCol },border}: Props) => {\n  return (\n    <div\n      className={`px-4 py-1 bg-light text-monospace ${border?'border-top':''}`}\n      css={{ maxHeight: 84 }}\n    >\n      <Row>\n        <Col\n          className=\"log-prefix text-muted px-0 d-flex flex-row\"\n          css={{ maxWidth: firstCol }}\n        >\n          <div className=\"text-bold mr-2\">#</div>\n          <div className=\"ml-auto\">timestamp</div>\n        </Col>\n        <Col\n          className=\"log-prefix px-0 text-left text-md-right text-bold\"\n          css={{ maxWidth: secondCol }}\n        >\n          source@process[level]:\n        </Col>\n        <Col\n          className=\"px-0\"\n          css={{\n            maxHeight: 84,\n            display: \"block\",\n            overflow: \"hidden\",\n            textOverflow: \"ellipsis\",\n            // width: \"1\",\n            whiteSpace: \"nowrap\",\n            paddingRight: 0,\n            marginRight: 0,\n          }}\n        >\n          message\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport { LogsTableHeader };\n","import React, { useState } from \"react\";\nimport { Collapse } from \"react-bootstrap\";\n\nconst _icons: { [key: string]: any } = {\n  success: {\n    name: \"check_circle\",\n    color: \"success\",\n  },\n  pending: {\n    name: \"pending\",\n    color: \"muted\",\n  },\n  warning: {\n    name: \"error\",\n    color: \"warning\",\n  },\n  failed: {\n    name: \"cancel\",\n    color: \"critical\",\n  },\n};\n\ntype StatusString = \"success\" | \"pending\" | \"warning\" | \"failed\";\n\ntype CountSummaryProps = {\n  levels?: any[];\n  numItems: number;\n  title: string;\n};\n\nfunction CountSummary({ levels, numItems }: CountSummaryProps) {\n  console.log(\"levels:\", levels);\n  return <span className=\"ml-2 text-muted\">({numItems})</span>;\n}\n\nfunction getStatusFromLevels(levels: any): StatusString {\n  const keys = Object.keys(levels);\n  if (\n    keys.find((k) => k.toLowerCase() === \"critical\") ||\n    keys.find((k) => k.toLowerCase() === \"error\")\n  )\n    return \"failed\";\n  if (keys.find((k) => k.toLowerCase() === \"warning\")) return \"warning\";\n  return \"success\";\n}\n\nfunction StatusIcon({ levels }: { levels: any }) {\n  const status = getStatusFromLevels(levels);\n  const icon = _icons[status];\n  return (\n    <i className={`no-select material-icons log-${icon.color} mr-2`}>\n      {icon.name}\n    </i>\n  );\n}\n\ntype ExpandIndicator = {\n  expanded: boolean;\n};\n\nfunction ExpandController({ expanded }: ExpandIndicator) {\n  return (\n    <i\n      className={`no-select material-icons text-muted cursor-pointer ${\n        expanded ? \"rotate-90\" : \"\"\n      } mr-2`}\n    >\n      arrow_forward_ios\n    </i>\n  );\n}\n\ntype Props = {\n  title: string;\n  body: any;\n  numItems: number;\n  group: string;\n  levels?: string[];\n};\n\nfunction LogGroup({ title, body, levels, numItems, group }: Props) {\n  const [expanded, setExpanded] = useState(false);\n  return (\n    <div className={`log-group-item m-2 ${expanded ? \"bg-light\" : \"\"}`}>\n      <div\n        className=\"log-group-header cursor-pointer p-2\"\n        onClick={() => setExpanded((prev) => !prev)}\n      >\n        <ExpandController expanded={expanded} />\n        {levels && <StatusIcon levels={levels} />}\n        <span\n          className={\n            group === \"group-level\" ? `log-${title.toLowerCase()}` : \"\"\n          }\n        >\n          {title}\n        </span>\n        {!levels && (\n          <CountSummary levels={levels} numItems={numItems} title={title} />\n        )}\n      </div>\n      <Collapse in={expanded} timeout={100}>\n        <div className=\"log-group-body p-3\">\n          <div className=\"bg-white border\">{body}</div>\n        </div>\n      </Collapse>\n    </div>\n  );\n}\n\nexport { LogGroup };\n","import React, { useState, useCallback, useEffect, useRef } from \"react\";\nimport _ from \"lodash\";\nimport { FixedSizeList as List } from \"react-window\";\nimport { Card, Row, Col } from \"react-bootstrap\";\nimport AutoSizer from \"react-virtualized-auto-sizer\";\nimport FlexSearch from \"flexsearch\";\nimport { saveAs } from \"file-saver\";\n\nimport { MultiFilterSelect } from \"../Common/MultiFilterSelect\";\nimport { LogItem } from \"./LogItem\";\nimport { LogsTableHeader } from \"./LogsTableHeader\";\nimport { ProcessedLog } from \"../../flux/tranformLog\";\nimport { ExpandingSearchbar } from \"../Common/ExpandingSearchbar\";\nimport { LogGroup } from \"./LogGroup\";\n\nimport {\n  serializeLogsToCSVBlob,\n  serializeLogsToJSONBlob,\n  serializeLogsToTextBlob,\n} from \"../../helpers\";\n\nconst ROW_SIZE = 30;\nconst DEFAULT_VIEW = \"table\";\nconst VIEW_PREFERENCE_NAME = \"logs-view-preference\";\nconst POD_NAME_SPLIT_CHAR = \"-\";\n\nconst SEARCH_FIELDS = [\"filename\",\"funcName\",\"module\",\"msg\",\"pathname\",\"name\"];\n\nconst levels = [\n  \"INFO\",\n  \"SUCCESS\",\n  \"WARNING\",\n  \"ERROR\",\n  \"CRITICAL\",\n  \"DEBUG\",\n] as const;\n\nconst saveOptions = [\n  { value: \"csv\", label: \"CSV\" },\n  { value: \"json\", label: \"JSON\" },\n  { value: \"txt\", label: \"TXT\" },\n];\n\nconst viewOptions: { [key: string]: { value: string; label: string } } = {\n  table: {\n    value: \"table\",\n    label: \"Table View\",\n  },\n  \"group-pod\": {\n    value: \"group-pod\",\n    label: \"Group by Pod\",\n  },\n  \"group-level\": {\n    value: \"group-level\",\n    label: \"Group by Level\",\n  },\n};\n\nfunction getUserViewPreference() {\n  const preference = localStorage.getItem(VIEW_PREFERENCE_NAME);\n  if (preference && viewOptions[preference]) return preference;\n  return false;\n}\n\nfunction setUserViewPreference(preference: string) {\n  localStorage.setItem(VIEW_PREFERENCE_NAME, preference);\n}\n\nfunction getInitialView() {\n  return getUserViewPreference() || DEFAULT_VIEW;\n}\n\nlet _lastNumLogs = 0;\nlet _searchIndex = FlexSearch.create({\n  doc: {\n    id: \"id\",\n    field: SEARCH_FIELDS\n  }\n});\n\nconst applyFilters = <T extends Record<string, any>, K>(\n  item: T,\n  filters: { [key in keyof T]: any }\n) =>\n  Object.entries(filters).reduce((acc, curr) => {\n    const [key, value] = curr;\n    return acc && Array.isArray(value)\n      ? value.length === 0\n        ? true\n        : value.includes(item[key] as any)\n      : value === item[key];\n  }, true as boolean);\n\ntype Format = \"json\" | \"csv\" | \"txt\";\n\ntype View = \"group-pod\" | \"group-level\" | \"table\";\n\nconst generateFileName = (format: Format) =>\n  `jina-logs-${new Date()}.${format}`;\n\nconst saveLogData = (data: any, format: Format) => {\n  const filename = generateFileName(format);\n  if (format === \"csv\") return saveAs(serializeLogsToCSVBlob(data), filename);\n  if (format === \"json\") return saveAs(serializeLogsToJSONBlob(data), filename);\n  if (format === \"txt\") return saveAs(serializeLogsToTextBlob(data), filename);\n};\n\ntype Props = {\n  data: ProcessedLog[];\n  showLogDetails: (log: ProcessedLog) => void;\n};\n\nconst itemKey = (index: number, data: { items: ProcessedLog[] }) =>\n  data.items[index].id;\n\nconst arrayLikeToArray = (arrayLike: Readonly<any[]> | Set<any>) =>\n  Array.isArray(arrayLike) ? arrayLike : Array.from(arrayLike);\n\nconst toOption = (list: Readonly<any[]> | Set<any>) =>\n  arrayLikeToArray(list).map((item) => ({ label: item, value: item }));\n\nfunction LogsList({ data, firstCol, secondCol, showLogDetails, small }: any) {\n  const listRef = useRef<any>();\n  const [scrolledToBottom, setScrolledToBottom] = useState(true);\n\n  useEffect(() => {\n    if (listRef.current && scrolledToBottom) {\n      listRef.current.scrollToItem(data.length);\n    }\n  }, [data.length, scrolledToBottom]);\n\n  return (\n    <div>\n      <LogsTableHeader columns={{ firstCol, secondCol }} border={!small} />\n      <div\n        className={`log-stream-container${\n          small ? \"-small\" : \"\"\n        } p-0 border-top`}\n      >\n        {!scrolledToBottom && (\n          <div\n            onClick={() => listRef.current.scrollToItem(data.length)}\n            className={`back-to-bottom active`}\n          >\n            <i className=\"material-icons\">arrow_downward</i> Back to Bottom\n          </div>\n        )}\n        <AutoSizer>\n          {({ height, width }) => {\n            const thirdCol = width - (firstCol + secondCol);\n            return (\n              <List\n                onScroll={({ scrollOffset }) => {\n                  setScrolledToBottom(\n                    (scrollOffset + height) / ROW_SIZE - data.length === 0\n                  );\n                }}\n                height={height}\n                width={width}\n                itemCount={data.length}\n                itemSize={ROW_SIZE}\n                itemKey={itemKey}\n                itemData={{\n                  items: data,\n                  columns: { firstCol, secondCol, thirdCol },\n                  showLogDetails,\n                }}\n                ref={listRef}\n              >\n                {LogItem}\n              </List>\n            );\n          }}\n        </AutoSizer>\n      </div>\n    </div>\n  );\n}\n\ntype GroupedLogProps = {\n  groupedData: any;\n  grouping: string;\n  firstCol: any;\n  secondCol: any;\n  showLogDetails: any;\n};\n\nfunction GroupedLogs({\n  groupedData,\n  grouping,\n  firstCol,\n  secondCol,\n  showLogDetails,\n}: GroupedLogProps) {\n  return (\n    <Card.Body className=\"log-stream-container p-0 border-top\">\n      {Object.keys(groupedData).length && (\n        <div className=\"log-group-container\">\n          {Object.entries(groupedData).map(([key, data]: any, idx: number) => (\n            <LogGroup\n              group={grouping}\n              key={idx}\n              title={key}\n              levels={data.levels}\n              numItems={data.data.length}\n              body={\n                <LogsList\n                  firstCol={firstCol}\n                  secondCol={secondCol}\n                  data={data.data}\n                  showLogDetails={showLogDetails}\n                  small\n                />\n              }\n            />\n          ))}\n        </div>\n      )}\n    </Card.Body>\n  );\n}\n\nfunction LogsTable({ data, showLogDetails }: Props) {\n  const [currentView, setCurrentView] = useState(() => getInitialView());\n\n  const [selectedSources, setSelectedSources] = useState<any[]>([]);\n  const [selectedLevels, setSelectedLevels] = useState<any[]>([]);\n\n  const [searchResults, setSearchResults] = useState<any[]>([]);\n  const [searchString, setSearchString] = useState(\"\");\n\n  const search = useCallback(async () => {\n    const newData = data.slice(_lastNumLogs,data.length)\n    _searchIndex.add(newData);\n    _lastNumLogs = data.length;\n    const searchResults = await _searchIndex.search(searchString);\n    setSearchResults(searchResults);\n    // @ts-ignore\n  }, [searchString, data.length]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    if (searchString && data.length) search();\n  }, [data.length, searchString, search]);\n\n  function setView(view: View) {\n    setCurrentView(view);\n    setUserViewPreference(view);\n  }\n\n  const unfiltered = searchString ? searchResults : data;\n  const sources = data.reduce((acc, curr) => acc.add(curr.name), new Set());\n\n  let groupedData: any;\n\n  let resultData = (unfiltered || []).filter((result) =>\n    applyFilters(result as any, {\n      levelname: selectedLevels.map(({ value }) => value),\n      name: selectedSources.map(({ value }) => value),\n    })\n  );\n\n  if (currentView === \"group-pod\") {\n    const podNames = arrayLikeToArray(sources).map(\n      (name: string) => name.toLowerCase().split(POD_NAME_SPLIT_CHAR)[0]\n    );\n    groupedData = {};\n    podNames.forEach((podName: string) => {\n      const pod: any = {};\n\n      pod.data = (resultData || []).filter(\n        (log: any) => log.name && log.name.toLowerCase().startsWith(podName)\n      );\n\n      if (!pod.data.length) return;\n      pod.levels = _.countBy(pod.data, \"levelname\");\n      groupedData[podName] = pod;\n    });\n  } else if (currentView === \"group-level\") {\n    groupedData = {};\n    levels.forEach((level: string) => {\n      const levelItem: any = {};\n\n      levelItem.data = (resultData || []).filter(\n        (log: any) => log.levelname === level\n      );\n\n      if (!levelItem.data.length) return;\n      groupedData[level] = levelItem;\n    });\n  }\n\n  const firstCol = 300;\n  const secondCol = 300;\n\n  return (\n    <Card className=\"mb-4\">\n      <Card.Header className=\"p-0\">\n        <Row className=\"p-3\">\n          <Col md=\"8\">\n            <MultiFilterSelect\n              clearAfter\n              options={Object.values(viewOptions)}\n              onFilterChange={(option: any[]) => setView(option[0].value)}\n              className=\"logstream-select mb-2 mr-0 mb-md-0 mr-md-2\"\n              placeholder={\n                currentView === \"table\" ? (\n                  <span>\n                    <i className=\"material-icons mr-2\">table_rows</i>Table View\n                  </span>\n                ) : (\n                  <span>\n                    <i className=\"material-icons mr-2\">view_list</i>\n                    {viewOptions[currentView].label}\n                  </span>\n                )\n              }\n              isSearchable={false}\n            />\n            {currentView === \"table\" && (\n              <MultiFilterSelect\n                isMulti\n                options={toOption(sources)}\n                onFilterChange={setSelectedSources}\n                className=\"logstream-select mb-2 mr-0 mb-md-0 mr-md-2\"\n                placeholder={\n                  <span>\n                    <i className=\"material-icons mr-2\">mediation</i>All Sources\n                  </span>\n                }\n              />\n            )}\n            <MultiFilterSelect\n              isMulti\n              options={toOption(levels as any) as any}\n              onFilterChange={setSelectedLevels}\n              className=\"logstream-select mb-2 mr-0 mb-md-0 mr-md-2\"\n              placeholder={\n                <span>\n                  <i className=\"material-icons mr-2\">bar_chart</i>All Levels\n                </span>\n              }\n            />\n            <MultiFilterSelect\n              clearAfter\n              options={saveOptions}\n              onFilterChange={(option: any[]) =>\n                saveLogData(data, option[0].value)\n              }\n              className=\"logstream-select mb-2 mr-0 mb-md-0 mr-md-2\"\n              placeholder={\n                <span>\n                  <i className=\"material-icons mr-2\">download</i>Download Logs\n                </span>\n              }\n              isSearchable={false}\n            />\n          </Col>\n          <Col md=\"4\">\n            <ExpandingSearchbar\n              placeholder=\"search logs...\"\n              value={searchString}\n              onChange={setSearchString}\n            />\n          </Col>\n        </Row>\n      </Card.Header>\n      {currentView === \"table\" ? (\n        <LogsList\n          firstCol={firstCol}\n          secondCol={secondCol}\n          data={resultData}\n          showLogDetails={showLogDetails}\n        />\n      ) : (\n        <GroupedLogs\n          firstCol={firstCol}\n          secondCol={secondCol}\n          grouping={currentView}\n          groupedData={groupedData}\n          showLogDetails={showLogDetails}\n        />\n      )}\n    </Card>\n  );\n}\n\nexport { LogsTable };\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { LogLevelSummaryChart } from \"../components/LogStream/LogLevelSummaryChart\";\nimport { LogLevelPieChart } from \"../components/LogStream/LogLevelPieChart\";\nimport { PageTitle } from \"../components/Common/PageTitle\";\nimport { LogsTable } from \"../components/LogStream/LogsTable\";\nimport { Store, Dispatcher, Constants } from \"../flux\";\n\nconst LOGS_UPDATE_INTERVAL = 20;\nconst CHART_UPDATE_INTERVAL = 1000;\n\nlet chartUpdateInterval: any;\nlet logsUpdateInterval: any;\n\nconst DEFAULT_TIME_SELECTION = \"60second\";\n\nconst TIME_PREFERENCE_NAME = \"logs-time-preference\";\n\nconst timeOptions: {\n  [key: string]: { value: string; label: string; chartLabels: string[] };\n} = {\n  \"60second\": {\n    value: \"60second\",\n    label: \"60 Seconds\",\n    chartLabels: [\"60s ago\", \"30s ago\", \"\"],\n  },\n  \"15minute\": {\n    value: \"15minute\",\n    label: \"15 Minutes\",\n    chartLabels: [\"15m ago\", \"7m 30s ago\", \"\"],\n  },\n  \"1hour\": {\n    value: \"1hour\",\n    label: \"1 Hour\",\n    chartLabels: [\"1h ago\", \"30m ago\", \"\"],\n  },\n};\n\nconst numSeconds: { [key: string]: number } = {\n  \"60second\": 60,\n  \"15minute\": 900,\n  \"1hour\": 3600,\n};\n\nfunction getUserTimePreference() {\n  const preference = localStorage.getItem(TIME_PREFERENCE_NAME);\n  if (preference && timeOptions[preference]) return preference;\n  return false;\n}\n\nfunction setUserTimePreference(preference: string) {\n  localStorage.setItem(TIME_PREFERENCE_NAME, preference);\n}\n\nfunction getInitialTimeSelection() {\n  return getUserTimePreference() || DEFAULT_TIME_SELECTION;\n}\n\ntype TimePreference = \"60second\" | \"15minute\" | \"1hour\";\n\nconst showLogDetails = (log: any) => {\n  Dispatcher.dispatch({\n    actionType: Constants.SHOW_MODAL,\n    payload: { modal: \"logDetails\", modalParams: { log } },\n  });\n};\n\nfunction showLogInTable(index: number) {\n  Dispatcher.dispatch({\n    actionType: Constants.SHOW_LOG_AT_INDEX,\n    payload: index,\n  });\n}\n\nfunction LogsView() {\n  const hasNewLogs = React.useRef(false);\n  const [logs, setLogs] = useState(() => Store.getLogs());\n  const [selectedTime, setSelectedTime] = useState(() =>\n    getInitialTimeSelection()\n  );\n  const [logLevelOccurrences, setLogLevelOccurrences] = useState(() =>\n    Store.getLogLevelOccurences()\n  );\n  const [logLevelCharts, setLogLevelCharts] = useState(() =>\n    Store.getLogLevelCharts(numSeconds[selectedTime])\n  );\n\n  function setTimeSelection(time: TimePreference) {\n    setSelectedTime(time);\n    setUserTimePreference(time);\n  }\n\n  function updateLogs() {\n    const newLogs = Store.getLogs();\n    const newOccurrences = Store.getLogLevelOccurences();\n    setLogs([...newLogs]);\n    setLogLevelOccurrences({ ...newOccurrences });\n  }\n\n  const updateChart = useCallback(() => {\n    const newCharts = Store.getLogLevelCharts(numSeconds[selectedTime]);\n    setLogLevelCharts({ ...newCharts });\n  }, [selectedTime]);\n\n  function showLog(activePoints: any) {\n    const { data } = logLevelCharts;\n    let index = activePoints[0] && activePoints[0]._index;\n    if (index && typeof index !== \"undefined\") {\n      const { lastLog } = data[index];\n      showLogInTable(lastLog);\n    }\n  }\n\n  function checkForNewLogs() {\n    if (!hasNewLogs.current) return;\n    hasNewLogs.current = false;\n    updateLogs();\n  }\n\n  function onNewLogs() {\n    hasNewLogs.current = true;\n  }\n\n  useEffect(() => {\n    Store.on(\"update-logs\", onNewLogs);\n    logsUpdateInterval = setInterval(checkForNewLogs, LOGS_UPDATE_INTERVAL);\n    chartUpdateInterval = setInterval(updateChart, CHART_UPDATE_INTERVAL);\n    return () => {\n      Store.removeListener(\"update-logs\", onNewLogs);\n      clearInterval(logsUpdateInterval);\n      clearInterval(chartUpdateInterval);\n    };\n  }, [updateChart]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    updateChart();\n  }, [updateChart]);\n\n  const timeSelection = timeOptions[selectedTime];\n\n  return (\n    <Container fluid className=\"main-content-container px-0\">\n      <div className=\"px-4\">\n        <Row noGutters className=\"page-header mb-4\">\n          <PageTitle title=\"Log Stream\" className=\"text-sm-left mb-3\" />\n        </Row>\n        <Row>\n          <Col md=\"10\" className=\"mb-4\">\n            <LogLevelSummaryChart\n              data={logLevelCharts}\n              showLog={showLog}\n              setTimeSelection={setTimeSelection}\n              timeOptions={timeOptions}\n              selectedTime={selectedTime}\n              timeLabels={timeSelection.chartLabels}\n            />\n          </Col>\n          <Col md=\"2\" className=\"mb-4\">\n            <LogLevelPieChart data={logLevelOccurrences} />\n          </Col>\n        </Row>\n        <LogsTable data={logs} showLogDetails={showLogDetails} />\n      </div>\n    </Container>\n  );\n}\n\nexport { LogsView };\n","import React from \"react\";\nimport { Card } from \"shards-react\";\n\ntype Props = {\n  elapsed: {\n    task_name: string;\n    seconds: string | number;\n  };\n};\n\nexport default function ElapsedCard({ elapsed }: Props) {\n  return (\n    <Card className=\"p-3 h-100\">\n      <h6 className=\"stats-small__label text-uppercase text-center mb-0\">\n        <b>{elapsed.task_name}</b>\n      </h6>\n      <h2 className=\"my-3 mx-auto\">{elapsed.seconds}</h2>\n      <h6 className=\"stats-small__label text-uppercase text-center\">\n        Elapsed Time\n      </h6>\n    </Card>\n  );\n}\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { Card } from \"shards-react\";\n\nimport ChartElement from \"chart.js\";\n\ntype Props = {\n  progress: any;\n};\n\nfunction ProgressCard({ progress }: Props) {\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n  const [chartInstance, setChartInstance] = useState<ChartElement | null>(null);\n\n  useEffect(() => {\n    if (!canvasRef.current) return;\n    const newChartInstance = new ChartElement(canvasRef.current, {\n      type: \"doughnut\",\n      data: {\n        datasets: [\n          {\n            hoverBorderColor: \"#fff\",\n            data: [0, 100],\n            backgroundColor: [\"#32c8cd\", \"#E9ECEF\"],\n          },\n        ],\n        labels: [\"Label 1\", \"Label 2\"],\n      },\n      options: {\n        legend: { display: false },\n        responsive: false,\n        cutoutPercentage: 70,\n        animation: { duration: 0 },\n        tooltips: {\n          enabled: false,\n        },\n      },\n    });\n    setChartInstance(newChartInstance);\n  }, []);\n\n  useEffect(() => {\n    if (!chartInstance) return;\n    const percent = (progress.num_bars / progress.bar_len || 1) * 100;\n    let newData = {\n      datasets: [\n        {\n          hoverBorderColor: \"#fff\",\n          data: [percent, 100 - percent],\n          backgroundColor: [\"#32c8cd\", \"#E9ECEF\"],\n        },\n      ],\n      labels: [\"Label 1\", \"Label 2\"],\n    };\n    chartInstance.data = newData;\n    chartInstance.update();\n  }, [JSON.stringify(progress), chartInstance]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <Card className=\"p-3 h-100\">\n      <h6 className=\"stats-small__label text-uppercase text-center\">\n        <b>Progress</b>\n      </h6>\n      <div className=\"go-stats__chart mx-auto d-flex flex-row\">\n        <div className=\"mr-4 mt-3\">\n          <h6 className=\"stats-small__label text-uppercase text-center\">\n            Request\n          </h6>\n          <h4 className=\"mb-0\">{progress.currentRequest}</h4>\n        </div>\n\n        <canvas\n          ref={canvasRef}\n          style={{ width: \"100px\", height: \"100px\" }}\n          className=\"my-auto\"\n        />\n      </div>\n    </Card>\n  );\n}\n\nexport default ProgressCard;\n","import React, { useRef, useState, useCallback, useEffect } from \"react\";\nimport { Card } from \"shards-react\";\nimport { useTheme } from \"@emotion/react\";\nimport ChartElement, { ChartOptions } from \"chart.js\";\n\ntype Props = {\n  speed: {\n    history: any;\n    current: any;\n    unit: any;\n  };\n};\n\nfunction SpeedCard({ speed }: Props) {\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n  const [chartInstance, setChartInstance] = useState<ChartElement | null>(null);\n  const { history } = speed;\n  const { palette } = useTheme();\n\n  let maxValue = Math.max(...history);\n  let minValue = Math.min(...history);\n\n  const getChartOptions = useCallback((): ChartOptions => {\n    const difference = maxValue - minValue;\n    return {\n      maintainAspectRatio: true,\n      responsive: true,\n      animation: { duration: 0 },\n      legend: {\n        display: false,\n      },\n      tooltips: {\n        enabled: false,\n      },\n      layout: {\n        padding: {\n          bottom: -10,\n          left: -10,\n        },\n      },\n      elements: {\n        point: {\n          radius: 0,\n        },\n        line: {\n          tension: 0.33,\n        },\n      },\n      scales: {\n        xAxes: [\n          {\n            gridLines: {\n              display: false,\n            },\n            ticks: {\n              display: false,\n            },\n          },\n        ],\n        yAxes: [\n          {\n            gridLines: {\n              display: false,\n            },\n            scaleLabel: {\n              padding: 0,\n              display: false,\n            },\n            ticks: {\n              display: false,\n              // Avoid getting the graph line cut of at the top of the canvas.\n              // Chart.js bug link: https://github.com/chartjs/Chart.js/issues/4790\n              suggestedMax: maxValue + difference * 0.1,\n              suggestedMin: minValue - difference * 0.1,\n            },\n          },\n        ],\n      },\n    };\n  }, [maxValue, minValue]);\n\n  const getChartConfig = useCallback(\n    (chartOptions) => {\n      return {\n        type: \"line\",\n        data: {\n          labels: new Array(history.length).fill(null),\n          datasets: [\n            {\n              label: \"Today\",\n              fill: \"start\",\n              borderWidth: 1.5,\n              backgroundColor: \"rgba(0, 153, 153, 0.25)\",\n              borderColor: palette.primary,\n              data: history,\n            },\n          ],\n        },\n        options: chartOptions,\n      };\n    },\n    [history, palette.primary]\n  );\n\n  useEffect(() => {\n    if (!canvasRef.current) return;\n    const chartOptions = getChartOptions();\n    const chartConfig = getChartConfig(chartOptions);\n    const newChartInstance = new ChartElement(canvasRef.current, chartConfig);\n    setChartInstance(newChartInstance);\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    if (!chartInstance) return;\n    let newChartData = {\n      ...chartInstance.data,\n      ...{\n        datasets: [\n          {\n            label: \"Today\",\n            fill: \"start\",\n            borderWidth: 1.5,\n            backgroundColor: \"rgba(0, 153, 153, 0.25)\",\n            borderColor: palette.primary,\n            data: history,\n          },\n        ],\n      },\n    };\n    chartInstance.options = getChartOptions();\n    chartInstance.data = newChartData;\n    chartInstance.update();\n  }, [\n    history,\n    chartInstance,\n    getChartOptions,\n    getChartConfig,\n    palette.primary,\n  ]);\n\n  return (\n    <Card className=\"pt-0 h-100 stats-small\">\n      <div className=\"stats-small__data mx-auto\">\n        <h6 className=\"stats-small__label text-uppercase text-center mb-0 pt-0 mt-0\">\n          <b>Speed</b>\n        </h6>\n        <h2 className=\"my-3 mx-auto\">{speed.current}</h2>\n        <h6 className=\"stats-small__label under text-uppercase text-center\">\n          {speed.unit}/Second\n        </h6>\n      </div>\n      <canvas height=\"100\" ref={canvasRef} className=\"stats-small-1\" />\n    </Card>\n  );\n}\n\nexport default SpeedCard;\n","import React, { useRef, useEffect, useState, useCallback } from \"react\";\nimport ChartElement, {\n  ChartConfiguration,\n  ChartOptions,\n  ChartData,\n} from \"chart.js\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Row,\n  Col,\n  ButtonGroup,\n  Button,\n} from \"shards-react\";\nimport { formatBytes } from \"../../helpers\";\nimport { useTheme } from \"@emotion/react\";\n\nfunction BarChartCard(props: any) {\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n  const [chartInstance, setChartInstance] = useState<ChartElement | null>(null);\n  const [currentTab, setCurrentTab] = useState(\"messages\");\n  const { palette } = useTheme();\n\n  const chartData = props[currentTab];\n\n  const getChartOptions = useCallback((): ChartOptions => {\n    return {\n      animation: { duration: 0 },\n      tooltips: {\n        callbacks: {\n          title: function (tooltipItem: any) {\n            return `Pod: ${tooltipItem[0].xLabel}`;\n          },\n          label: (tooltipItem: any, data: any) => {\n            let label = `${data.datasets[tooltipItem.datasetIndex].label}: ${\n              currentTab === \"bytes\"\n                ? formatBytes(tooltipItem.value)\n                : tooltipItem.value\n            }`;\n            return label;\n          },\n          afterLabel: (tooltipItem: any) => {\n            let text = \"\\nProcess ID: \" + chartData[tooltipItem.index].process;\n            return text;\n          },\n        },\n      },\n      scales: {\n        xAxes: [\n          {\n            stacked: true,\n          },\n        ],\n        yAxes: [\n          {\n            stacked: true,\n            ticks: {\n              callback: (label: number) => {\n                if (currentTab === \"bytes\") return formatBytes(label);\n                return label > 999 ? `${(label / 1000).toFixed(0)}k` : label;\n              },\n            },\n          },\n        ],\n      },\n      maintainAspectRatio: false,\n    };\n  }, [chartData, currentTab]);\n\n  const getChartConfig = useCallback(\n    (chartOptions: ChartOptions): ChartConfiguration => {\n      return {\n        type: \"bar\",\n        options: chartOptions,\n        data: {\n          labels: chartData.map((d: any) => d.node),\n          datasets: [\n            {\n              label: \"msg sent\",\n              fill: \"start\",\n              data: chartData.map((d: any) => d.sent),\n              backgroundColor: palette.primary,\n              borderColor: palette.primary,\n              pointBackgroundColor: palette.background.default,\n              pointHoverBackgroundColor: palette.primary,\n              borderWidth: 1.5,\n            },\n            {\n              label: \"msg received\",\n              fill: \"start\",\n              data: chartData.map((d: any) => d.received),\n              backgroundColor: palette.success,\n              borderColor: palette.success,\n              pointBackgroundColor: palette.background.default,\n              pointHoverBackgroundColor: palette.success,\n              borderWidth: 1.5,\n            },\n          ],\n        },\n      };\n    },\n    [chartData, palette.success, palette.primary, palette.background.default]\n  );\n\n  const getChartData = useCallback(() => {\n    return {\n      labels: chartData.map((d: any) => d.node),\n      datasets: [\n        {\n          label: `${currentTab} sent`,\n          fill: \"start\",\n          data: chartData.map((d: any) => d.sent),\n          backgroundColor: palette.primary,\n          borderColor: palette.primary,\n          pointBackgroundColor: palette.background.default,\n          pointHoverBackgroundColor: palette.primary,\n          borderWidth: 1.5,\n        },\n        {\n          label: `${currentTab} received`,\n          fill: \"start\",\n          data: chartData.map((d: any) => d.received),\n          backgroundColor: palette.success,\n          borderColor: palette.success,\n          pointBackgroundColor: palette.background.default,\n          pointHoverBackgroundColor: palette.success,\n          borderWidth: 1.5,\n        },\n      ],\n    };\n  }, [\n    chartData,\n    currentTab,\n    palette.success,\n    palette.primary,\n    palette.background.default,\n  ]);\n\n  useEffect(() => {\n    if (!canvasRef.current) return;\n    const chartOptions: ChartOptions = getChartOptions();\n    const chartConfig: ChartConfiguration = getChartConfig(chartOptions);\n    const newChartInstance = new ChartElement(canvasRef.current, chartConfig);\n    setChartInstance(newChartInstance);\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    if (!chartInstance) return;\n    const newData: ChartData = getChartData();\n    const newOptions: ChartOptions = getChartOptions();\n    chartInstance.options = newOptions;\n    chartInstance.data = newData;\n    chartInstance.update();\n  }, [chartData, chartInstance, currentTab, getChartData, getChartOptions]);\n\n  return (\n    <Card small className=\"h-100 mb-4\">\n      <CardHeader className=\"border-bottom\">\n        <h6 className=\"m-0\">Network Load</h6>\n      </CardHeader>\n\n      <CardBody className=\"pt-0\">\n        <Row className=\"border-bottom py-2 bg-light\">\n          <Col sm=\"6\" className=\"col d-flex mb-2 mb-sm-0\">\n            <ButtonGroup>\n              <Button\n                theme=\"white\"\n                active={currentTab === \"messages\"}\n                onClick={() => setCurrentTab(\"messages\")}\n              >\n                Messages\n              </Button>\n              <Button\n                theme=\"white\"\n                active={currentTab === \"bytes\"}\n                onClick={() => setCurrentTab(\"bytes\")}\n              >\n                Bytes\n              </Button>\n            </ButtonGroup>\n          </Col>\n        </Row>\n        <div style={{ position: \"relative\", height: 300 }}>\n          <canvas ref={canvasRef} />\n        </div>\n      </CardBody>\n    </Card>\n  );\n}\n\nexport default BarChartCard;\n","import React, { useRef, useState, useCallback, useEffect } from \"react\";\nimport { Card } from \"shards-react\";\n\nimport ChartElement, { ChartOptions } from \"chart.js\";\n\ntype Props = {\n  qps: {\n    history: any;\n    current: any;\n  };\n};\n\nfunction QueriesPerSecondCard({ qps }: Props) {\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n  const [chartInstance, setChartInstance] = useState<ChartElement | null>(null);\n  const { history } = qps;\n\n  let maxValue = Math.max(...history);\n  let minValue = Math.min(...history);\n\n  const getChartOptions = useCallback((): ChartOptions => {\n    const difference = maxValue - minValue;\n    return {\n      maintainAspectRatio: true,\n      responsive: true,\n      animation: { duration: 0 },\n      legend: {\n        display: false,\n      },\n      tooltips: {\n        enabled: false,\n      },\n      elements: {\n        point: {\n          radius: 0,\n        },\n        line: {\n          tension: 0.33,\n        },\n      },\n      layout: {\n        padding: {\n          bottom: -10,\n          left: -10,\n        },\n      },\n      scales: {\n        xAxes: [\n          {\n            gridLines: {\n              display: false,\n            },\n            ticks: {\n              display: false,\n            },\n          },\n        ],\n        yAxes: [\n          {\n            gridLines: {\n              display: false,\n            },\n            scaleLabel: {\n              display: false,\n            },\n            ticks: {\n              display: false,\n              // Avoid getting the graph line cut of at the top of the canvas.\n              // Chart.js bug link: https://github.com/chartjs/Chart.js/issues/4790\n              suggestedMax: maxValue + difference * 0.1,\n              suggestedMin: minValue - difference * 0.1,\n            },\n          },\n        ],\n      },\n    };\n  }, [maxValue, minValue]);\n\n  const getChartConfig = useCallback(\n    (chartOptions) => {\n      return {\n        type: \"line\",\n        data: {\n          labels: new Array(history.length).fill(null),\n          datasets: [\n            {\n              label: \"Today\",\n              fill: \"start\",\n              borderWidth: 1.5,\n              backgroundColor: \"rgba(50, 200, 205, 0.25)\",\n              borderColor: \"#32c8cd\",\n              data: history,\n            },\n          ],\n        },\n        options: chartOptions,\n      };\n    },\n    [history]\n  );\n\n  useEffect(() => {\n    if (!canvasRef.current) return;\n    const chartOptions = getChartOptions();\n    const chartConfig = getChartConfig(chartOptions);\n    const newChartInstance = new ChartElement(canvasRef.current, chartConfig);\n    setChartInstance(newChartInstance);\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    if (!chartInstance) return;\n    let newChartData = {\n      ...chartInstance.data,\n      ...{\n        datasets: [\n          {\n            label: \"Today\",\n            fill: \"start\",\n            borderWidth: 1.5,\n            backgroundColor: \"rgba(50, 200, 205, 0.25)\",\n            borderColor: \"#32c8cd\",\n            data: history,\n          },\n        ],\n      },\n    };\n    chartInstance.options = getChartOptions();\n    chartInstance.data = newChartData;\n    chartInstance.update();\n  }, [history, chartInstance, getChartOptions, getChartConfig]);\n\n  return (\n    <Card className=\"pt-0 h-100 stats-small\">\n      <div className=\"stats-small__data mx-auto\">\n        <h6 className=\"stats-small__label text-uppercase text-center mb-0 pt-0 mt-0\">\n          <b>QPS</b>\n        </h6>\n        <h2 className=\"my-3 mx-auto\">{qps.current}</h2>\n        <h6 className=\"stats-small__label under text-uppercase text-center\">\n          Queries/Second\n        </h6>\n      </div>\n      <canvas height=\"100\" ref={canvasRef} className=\"stats-small-1\" />\n    </Card>\n  );\n}\n\nexport default QueriesPerSecondCard;\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { Store } from \"../flux\";\nimport { PageTitle } from \"../components/Common/PageTitle\";\nimport ElapsedCard from \"../components/Task/ElapsedCard\";\nimport ProgressCard from \"../components/Task/ProgressCard\";\nimport SpeedCard from \"../components/Task/SpeedCard\";\nimport BarChartCard from \"../components/Task/BarChartCard\";\nimport QueriesPerSecond from \"../components/Task/QueriesPerSecond\";\n\nclass TaskView extends React.Component<any, any> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      taskData: Store.getTaskData(),\n    };\n    Store.on(\"update-task\", this.getData);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-task\", this.getData);\n  };\n  getData = () => {\n    const taskData = Store.getTaskData();\n    this.setState({ taskData });\n  };\n  render = () => {\n    const { taskData } = this.state;\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        <div className=\"px-4\">\n          <Row noGutters className=\"page-header mb-4\">\n            <PageTitle title=\"Task\" className=\"text-sm-left mb-3\" />\n          </Row>\n          <Row>\n            <Col md=\"6\" lg=\"6\" xl=\"3\" className=\"mb-4\">\n              <ElapsedCard elapsed={taskData.elapsed} />\n            </Col>\n            <Col md=\"6\" lg=\"6\" xl=\"3\" className=\"mb-4\">\n              <ProgressCard progress={taskData.progress} />\n            </Col>\n            <Col md=\"6\" lg=\"6\" xl=\"3\" className=\"mb-4\">\n              <QueriesPerSecond qps={taskData.qps} />\n            </Col>\n            <Col md=\"6\" lg=\"6\" xl=\"3\" className=\"mb-4\">\n              <SpeedCard speed={taskData.speed} />\n            </Col>\n          </Row>\n          <BarChartCard\n            messages={taskData.messages}\n            bytes={taskData.bytes}\n            lastUpdate={taskData.lastUpdateChart}\n          />\n        </div>\n      </Container>\n    );\n  };\n}\n\nexport default TaskView;\n","import { SettingName } from \"../../redux/settings/settings.types\";\n\ntype LabelName =\n  | \"Host\"\n  | \"Log\"\n  | \"Profile\"\n  | \"YAML\"\n  | \"Shutdown\"\n  | \"Ready\"\n  | \"Port\";\n\ntype Option = {\n  label: LabelName;\n  placeholder: string;\n  value: SettingName;\n};\n\nexport const baseOptions: Option[] = [\n  {\n    label: \"Host\",\n    placeholder: \"0.0.0.0\",\n    value: \"host\",\n  },\n  {\n    label: \"Port\",\n    placeholder: \"5000\",\n    value: \"port\",\n  },\n];\n\nexport const advancedOptions: Option[] = [\n  {\n    label: \"Log\",\n    placeholder: \"/stream/log\",\n    value: \"log\",\n  },\n  {\n    label: \"Profile\",\n    placeholder: \"/stream/profile\",\n    value: \"profile\",\n  },\n  {\n    label: \"YAML\",\n    placeholder: \"/data/yaml\",\n    value: \"yaml\",\n  },\n  {\n    label: \"Shutdown\",\n    placeholder: \"/action/shutdown\",\n    value: \"shutdown\",\n  },\n  {\n    label: \"Ready\",\n    placeholder: \"/status/isready\",\n    value: \"ready\",\n  },\n];\n","import React from \"react\";\nimport { Col, FormInput } from \"shards-react\";\nimport { SettingName } from \"../../redux/settings/settings.types\";\n\ntype Props = {\n  colSpan?: number;\n  label: string;\n  value: SettingName;\n  placeholder: string;\n  onChange: (e: any) => void;\n};\n\nexport default function FormItem({\n  colSpan = 6,\n  label,\n  value,\n  placeholder,\n  onChange,\n}: Props) {\n  return (\n    <Col md={colSpan} className=\"form-group\">\n      <label>{label}</label>\n      <FormInput placeholder={placeholder} value={value} onChange={onChange} />\n    </Col>\n  );\n}\n","import { State } from \"../index\";\n\nexport const selectSettings = (state: State) => state.settingsState.settings;\n","import React, { useState } from \"react\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Form,\n  Row,\n} from \"shards-react\";\nimport { Collapse } from \"react-bootstrap\";\n\nimport { advancedOptions, baseOptions } from \"./options\";\nimport FormItem from \"./FormItem\";\nimport {\n  SettingName,\n  SettingUpdate,\n} from \"../../redux/settings/settings.types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateSettings } from \"../../redux/settings/settings.actions\";\nimport { selectSettings } from \"../../redux/settings/settings.selectors\";\n\nfunction SettingsCard() {\n  const [updates, setUpdates] = useState<SettingUpdate>({});\n  const [expanded, setExpanded] = useState(false);\n\n  const settings = useSelector(selectSettings);\n\n  const dispatch = useDispatch();\n\n  function changeSetting(setting: SettingName, value: string) {\n    const newUpdates: SettingUpdate = { ...updates };\n    newUpdates[setting] = value;\n    setUpdates(newUpdates);\n  }\n\n  function saveChanges() {\n    dispatch(updateSettings(updates));\n  }\n\n  function toggleExpand() {\n    setExpanded(!expanded);\n  }\n\n  return (\n    <Card small className=\"mb-4\">\n      <CardHeader className=\"border-bottom\">\n        <h6 className=\"m-0\">Connection Preferences</h6>\n      </CardHeader>\n      <CardBody>\n        <Form>\n          <Row form>\n            {baseOptions.map(({ label, placeholder, value }) => (\n              <FormItem\n                key={value as string}\n                label={label}\n                placeholder={placeholder}\n                value={\n                  (value in updates\n                    ? updates[value]\n                    : settings[value]) as SettingName\n                }\n                onChange={(e) => changeSetting(value, e.target.value)}\n              />\n            ))}\n          </Row>\n          <Row>\n            <Col xs=\"6\">\n              <strong\n                aria-controls=\"collapsed-form\"\n                aria-expanded={expanded}\n                onClick={toggleExpand}\n                className=\"text-primary d-inline-block mb-3 cursor-pointer\"\n              >\n                Advanced{\" \"}\n                <i className=\"material-icons\">\n                  {expanded ? \"arrow_drop_up\" : \"arrow_drop_down\"}\n                </i>\n              </strong>\n            </Col>\n            <Col xs=\"6\" className=\"text-right\">\n              <Button onClick={saveChanges}>Save Changes</Button>\n            </Col>\n          </Row>\n          <Collapse in={expanded}>\n            <div id=\"collapsed-form\">\n              <strong className=\"text-muted d-block mb-3\">Endpoints</strong>\n              <Row form>\n                {advancedOptions.map(({ label, placeholder, value }) => (\n                  <FormItem\n                    key={value}\n                    label={label}\n                    placeholder={placeholder}\n                    value={\n                      (value in updates\n                        ? updates[value]\n                        : settings[value]) as SettingName\n                    }\n                    onChange={(e) =>\n                      changeSetting(value as SettingName, e.target.value)\n                    }\n                  />\n                ))}\n              </Row>\n            </div>\n          </Collapse>\n        </Form>\n      </CardBody>\n    </Card>\n  );\n}\n\nexport default SettingsCard;\n","import { updateSettingsAction, SettingUpdate } from \"./settings.types\";\nimport { UPDATE_SETTINGS } from \"./settings.constants\";\n\nexport function updateSettings(settings: SettingUpdate): updateSettingsAction {\n  return {\n    type: UPDATE_SETTINGS,\n    payload: settings,\n  };\n}\n","import React from \"react\";\nimport { Container, Row } from \"react-bootstrap\";\nimport { PageTitle } from \"../components/Common/PageTitle\";\nimport SettingsCard from \"../components/Settings/Settings\";\n\nclass SettingsView extends React.Component {\n  render = () => {\n    return (\n      <Container fluid className=\"main-content-container px-4\">\n        <Row noGutters className=\"page-header mb-4\">\n          <PageTitle\n            title=\"Settings\"\n            className=\"text-sm-left mb-3\"\n          />\n        </Row>\n        <SettingsCard />\n      </Container>\n    );\n  };\n}\n\nexport default SettingsView;\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\n// Layout Types\nimport { IconSidebar } from \"../layouts\";\n\n// Route Views\nimport FlowView from \"../views/FlowView\";\nimport { LogsView } from \"../views/LogsView\";\nimport TaskView from \"../views/TaskView\";\nimport Settings from \"../views/Settings\";\nimport HubView from \"../views/HubView\";\nimport PackageView from \"../views/PackageView\";\nimport LogIn from \"../views/LogIn\";\n\nimport NotFound from \"../views/NotFound\";\n\nexport const dashboardRoutes = [\n  {\n    path: \"/\",\n    exact: true,\n    layout: IconSidebar,\n    component: () => <Redirect to=\"/logs\" />,\n  },\n  {\n    path: \"/logs\",\n    layout: IconSidebar,\n    component: LogsView,\n    props: {\n      usesConnection: true,\n      usesAuth: false,\n    },\n  },\n  {\n    path: \"/flow\",\n    layout: IconSidebar,\n    component: FlowView,\n    props: {\n      usesConnection: true,\n      usesAuth: false,\n    },\n  },\n  {\n    path: \"/task\",\n    layout: IconSidebar,\n    component: TaskView,\n    props: {\n      usesConnection: true,\n      usesAuth: false,\n    },\n  },\n  {\n    path: \"/settings\",\n    layout: IconSidebar,\n    component: Settings,\n    props: {\n      usesConnection: true,\n      usesAuth: false,\n    },\n  },\n  {\n    path: \"/help\",\n    layout: IconSidebar,\n    component: NotFound,\n    props: {\n      usesConnection: false,\n      usesAuth: false,\n    },\n  },\n  {\n    path: \"/home\",\n    layout: IconSidebar,\n    component: NotFound,\n    props: {\n      usesConnection: false,\n      usesAuth: false,\n    },\n  },\n  {\n    path: \"/hub\",\n    layout: IconSidebar,\n    component: HubView,\n    props: {\n      usesConnection: false,\n      usesAuth: true,\n    },\n  },\n  {\n    path: \"/package\",\n    layout: IconSidebar,\n    component: PackageView,\n    props: {\n      usesConnection: false,\n      usesAuth: true,\n    },\n  },\n  {\n    path: \"/login\",\n    layout: IconSidebar,\n    component: LogIn,\n    props: {\n      usesConnection: false,\n      usesAuth: true,\n    },\n  },\n];\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  selectFlowChart,\n  selectFlows,\n  selectSelectedFlowId,\n} from \"../redux/flows/flows.selectors\";\nimport { Constants, Dispatcher, Store } from \"../flux\";\nimport * as actions from \"@bastinjafari/react-flow-chart-with-tooltips-and-multi-select/src/container/actions\";\nimport { tooltipConfig } from \"../data/tooltipConfig\";\nimport {\n  createNewFlow,\n  deleteFlow,\n  duplicateFlow,\n  loadFlow,\n  updateFlow,\n} from \"../redux/flows/flows.actions\";\nimport html2canvas from \"html2canvas\";\nimport { cloneDeep } from \"lodash\";\nimport { copyToClipboard, formatAsYAML } from \"../helpers\";\nimport { Card, Container, Row } from \"shards-react\";\nimport { PageTitle } from \"../components/Common/PageTitle\";\nimport FlowSelection from \"../components/FlowChart/FlowSelection\";\nimport CommandBar from \"../components/FlowChart/CommandBar\";\nimport {\n  FlowChart,\n  IChart,\n  IOnLinkCompleteInput,\n} from \"@bastinjafari/react-flow-chart-with-tooltips-and-multi-select\";\nimport Tooltip from \"../components/FlowChart/Tooltip\";\nimport CustomNode from \"../components/FlowChart/ChartNode\";\nimport CustomPort from \"../components/FlowChart/NodePort\";\nimport Sidebar from \"../components/FlowChart/Sidebar\";\n\nexport default function FlowView() {\n  const dispatch = useDispatch();\n  const selectedFlowId = useSelector(selectSelectedFlowId);\n  const flows = useSelector(selectFlows);\n  const flowChart = useSelector(selectFlowChart);\n  const { flow: chart, type: flowType } = flowChart;\n  const chartWithTooltips = {\n    ...chart,\n    ...tooltipConfig,\n  };\n  const availableProperties = Store.getAvailableProperties();\n  const [connected, setConnected] = useState<boolean>(\n    Store.getConnectionStatus()\n  );\n  const [showOverlay, setShowOverlay] = useState<boolean>(false);\n\n  const actionCallbacks = Object.keys(actions).reduce((obj: any, key: any) => {\n    obj[key] = (...args: any) => {\n      let action = (actions as any)[key];\n      let newChartTransformer = action(...args);\n      let newChart = newChartTransformer(chart);\n      dispatch(updateFlow({ ...chartWithTooltips, ...newChart }));\n      return newChart;\n    };\n    return obj;\n  }, {});\n\n  const getConnectionStatus = () => {\n    setConnected(Store.getConnectionStatus());\n  };\n\n  Store.on(\"update-ui\", getConnectionStatus);\n\n  useEffect(() => {\n    const chartContainer = document.querySelector(\".chart-container\");\n    if (chartContainer)\n      chartContainer.addEventListener(\"contextmenu\", (e) => e.preventDefault());\n    return () => {\n      Store.removeListener(\"update-ui\", getConnectionStatus);\n    };\n  }, []);\n\n  const showCaptureOverlay = (showOverlay = true) => {\n    setShowOverlay(showOverlay);\n  };\n\n  const exportImage = (extension = \"png\") => {\n    const chartContainer = document.querySelector(\".chart-container\");\n    const captureOverlay = document.querySelector(\".capture-overlay\");\n    if (!chartContainer) return;\n    if (captureOverlay) captureOverlay.classList.add(\"fade-out\");\n\n    showCaptureOverlay();\n    setTimeout(() => showCaptureOverlay(false), 500);\n\n    let canvasParams = {\n      foreignObjectRendering: true,\n      logging: true,\n      x: 0,\n      y: 0,\n      scrollX: 0,\n      scrollY: 0,\n      scale: 5,\n    };\n\n    html2canvas(chartContainer as HTMLElement, canvasParams).then((canvas) => {\n      var image = canvas.toDataURL(`image/${extension}`);\n      var link = document.getElementById(\"download-link\");\n      if (!link) return;\n      link.setAttribute(\"download\", `jina-flow-visual.${extension}`);\n      link.setAttribute(\"href\", image);\n      link.click();\n    });\n  };\n\n  const updateNode = (node: any) => {\n    let newChart = cloneDeep(chart);\n    newChart.nodes[node.id].label = node.label;\n\n    let props = {\n      ...node.properties,\n      ...node.newProperties,\n    };\n\n    Object.keys(props).forEach((id) => {\n      if (props[id] === \"\" || typeof props[id] === \"undefined\") {\n        delete props[id];\n      }\n    });\n\n    newChart.nodes[node.id].properties = props;\n    dispatch(updateFlow({ ...chart, ...newChart }));\n\n    return newChart.nodes[node.id];\n  };\n\n  const updateLink = (\n    linkId: string,\n    fromId: string,\n    toId: string | undefined\n  ) => {\n    if (fromId === toId) return;\n    let newChart = cloneDeep(chart);\n\n    newChart.links[linkId].from.nodeId = fromId;\n    newChart.links[linkId].to.nodeId = toId;\n\n    dispatch(updateFlow({ ...chart, ...newChart }));\n  };\n\n  const deleteSelection = () => {\n    actionCallbacks.onDeleteKey({});\n  };\n\n  const copyChartAsYAML = () => {\n    copyToClipboard(formatAsYAML(chart));\n    alert(\"Chart copied to clipboard as YAML\");\n  };\n  const validateLink = ({\n    fromNodeId,\n    toNodeId,\n    fromPortId,\n    toPortId,\n  }: IOnLinkCompleteInput) => {\n    return !(fromNodeId === toNodeId || fromPortId === toPortId);\n  };\n\n  const showImportModal = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.SHOW_MODAL,\n      payload: { modal: \"import\" },\n    });\n  };\n\n  const handleCreateNewFlow = (e: any) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    dispatch(createNewFlow());\n  };\n\n  const handleDeleteFlow = (e: any, flowId: any) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    dispatch(deleteFlow(flowId));\n  };\n\n  const handleDuplicateFlow = () => {\n    const yaml = formatAsYAML(chart);\n    dispatch(duplicateFlow(yaml));\n  };\n\n  const readonly = flowType !== \"user-generated\";\n\n  return (\n    <Container fluid className=\"main-content-container px-0\">\n      <div className=\"px-4\">\n        <a href=\"/#\" id=\"download-link\" style={{ display: \"none\" }}>\n          download\n        </a>\n        <Row noGutters className=\"page-header mb-4\">\n          <PageTitle title=\"Flow Design\" className=\"text-sm-left mb-3\" />\n        </Row>\n        <div className=\"flow-container d-flex flex-column flex-md-row\">\n          <Card className=\"chart-section-container mr-md-4 mb-4\">\n            <FlowSelection\n              connected={connected}\n              flows={flows}\n              selectedFlowId={selectedFlowId}\n              createNewFlow={handleCreateNewFlow}\n              loadFlow={(flowId) => dispatch(loadFlow(flowId))}\n              deleteFlow={handleDeleteFlow}\n            />\n            <CommandBar\n              copyChart={copyChartAsYAML}\n              importChart={showImportModal}\n              exportImage={exportImage}\n            />\n            <div className=\"chart-container\">\n              <div\n                className=\"capture-overlay\"\n                style={{ display: showOverlay ? \"\" : \"none\" }}\n              >\n                <div className=\"capture-overlay-top\"></div>\n                <div className=\"capture-overlay-bottom\"></div>\n              </div>\n              <FlowChart\n                chart={(chart as unknown) as IChart}\n                Components={{\n                  TooltipComponent: Tooltip,\n                  NodeInner: CustomNode as any,\n                  Port: CustomPort,\n                }}\n                callbacks={actionCallbacks}\n                config={{\n                  readonly,\n                  validateLink: validateLink,\n                }}\n              />\n            </div>\n          </Card>\n          <Sidebar\n            availableProperties={availableProperties}\n            duplicateFlow={handleDuplicateFlow}\n            readonly={readonly}\n            flow={chart}\n            deleteSelection={deleteSelection}\n            updateNode={updateNode}\n            updateLink={updateLink}\n          />\n        </div>\n      </div>\n    </Container>\n  );\n}\n","const PERSIAN_GREEN = \"#009999\";\nconst GOLDEN_TANOI = \"#FFCC66\";\nconst BITTER_SWEET = \"#ff6666\";\nconst SCOOTER_GREEN = \"#32C8CD\";\n\nconst theme = {\n  palette: {\n    background: { default: \"#FFFFFF\" },\n    primary: PERSIAN_GREEN,\n    secondary: GOLDEN_TANOI,\n    warning: GOLDEN_TANOI,\n    error: BITTER_SWEET,\n    success: SCOOTER_GREEN,\n    info: PERSIAN_GREEN,\n    critical: \"#ff4540\",\n    debug: \"#7E7278\",\n  },\n};\n\nexport { theme };\n","import _ from \"lodash\";\nimport exampleFlows from \"../../data/exampleFlows\";\nimport { formatForFlowchart, parseYAML } from \"../../helpers\";\nimport {\n  initialFlow,\n  CREATE_NEW_FLOW,\n  DELETE_FLOW,\n  DUPLICATE_FLOW,\n  LOAD_FLOW,\n  UPDATE_FLOW,\n} from \"./flows.constants\";\nimport {\n  Flow,\n  FlowActionTypes,\n  FlowProperties,\n  Flows,\n  FlowState,\n} from \"./flows.types\";\nimport { nanoid } from \"nanoid\";\n\nfunction getUserFlows(): Flows {\n  const storedFlows = localStorage.getItem(\"userFlows\");\n  const userFlows = storedFlows ? JSON.parse(storedFlows) : null;\n  return _.isEmpty(userFlows)\n    ? {\n        _userFlow: {\n          name: \"Custom Flow 1\",\n          type: \"user-generated\",\n          flow: initialFlow,\n        },\n      }\n    : userFlows;\n}\n\nfunction getExampleFlows() {\n  const flows: Flows = {};\n\n  Object.entries(exampleFlows).forEach(([id, flow]) => {\n    const parsed = parseYAML(flow.yaml);\n    let canvas;\n    try {\n      canvas = parsed.data.with.board.canvas;\n    } catch (e) {\n      canvas = {};\n    }\n    const formatted = formatForFlowchart(parsed.data.pods, canvas);\n    flows[id] = {\n      ...flow,\n      flow: formatted,\n    };\n  });\n  return flows;\n}\n\nconst initialState: FlowState = {\n  selectedFlow: \"_userFlow\",\n  flows: {\n    ...getUserFlows(),\n    ...getExampleFlows(),\n  },\n};\n\nexport default function flowReducer(\n  state = initialState,\n  action: FlowActionTypes\n): FlowState {\n  switch (action.type) {\n    case DELETE_FLOW:\n      return _deleteFlow(state, action.payload);\n    case DUPLICATE_FLOW:\n      return _createNewFlow(state, action.payload);\n    case UPDATE_FLOW:\n      return _updateFlow(state, action.payload);\n    case CREATE_NEW_FLOW:\n      return _createNewFlow(state);\n    case LOAD_FLOW:\n      return _loadFlow(state, action.payload);\n\n    default:\n      return state;\n  }\n}\n\nfunction _deleteFlow(state: FlowState, flowId: string): FlowState {\n  let stateWithoutFlow: FlowState = {\n    ...state,\n    flows: _.omit(state.flows, flowId),\n  };\n  const nonExampleFlows = Object.entries(state.flows).filter(\n    ([id, flowProperties]: [string, FlowProperties]) =>\n      flowProperties.type !== \"example\"\n  );\n  if (state.selectedFlow === flowId && nonExampleFlows.length) {\n    const idFirstNonExampleFlow = nonExampleFlows[0][0];\n    stateWithoutFlow.selectedFlow = idFirstNonExampleFlow;\n  } else if (!nonExampleFlows.length) {\n    stateWithoutFlow = {\n      flows: {\n        _userFlow: {\n          name: \"Custom Flow 1\",\n          type: \"user-generated\",\n          flow: initialFlow,\n        },\n        ...stateWithoutFlow.flows,\n      },\n      selectedFlow: \"_userFlow\",\n    };\n  }\n\n  return stateWithoutFlow;\n}\n\nfunction _createNewFlow(state: FlowState, customYAML?: string): FlowState {\n  const prefixString = \"Custom Flow\";\n\n  let userFlows = Object.values(state.flows).filter((flow: any) =>\n    flow.name.startsWith(prefixString)\n  );\n\n  const userFlowNumbers = userFlows\n    .map(\n      (userFlow: FlowProperties) =>\n        parseInt(userFlow.name.substring(prefixString.length)) || 0\n    )\n    .sort((a, b) => a - b);\n\n  const largestNumber = userFlowNumbers[userFlowNumbers.length - 1] || 0;\n\n  const id = nanoid();\n\n  let flow = initialFlow;\n\n  if (customYAML) {\n    const parsed = parseYAML(customYAML);\n    let canvas;\n    try {\n      canvas = parsed.data.with.board.canvas;\n    } catch (e) {\n      canvas = {};\n    }\n    flow = formatForFlowchart(parsed.data.pods, canvas);\n  }\n\n  return {\n    flows: {\n      ...state.flows,\n      [id]: {\n        name: `${prefixString} ${largestNumber + 1}`,\n        type: \"user-generated\",\n        flow,\n      },\n    },\n    selectedFlow: id,\n  };\n}\n\nfunction _updateFlow(state: FlowState, newFlow: Flow): FlowState {\n  if (state.selectedFlow) {\n    return {\n      selectedFlow: state.selectedFlow,\n      flows: {\n        ...state.flows,\n        [state.selectedFlow]: {\n          ...state.flows[state.selectedFlow],\n          flow: newFlow,\n        },\n      },\n    };\n  } else return state;\n}\n\nfunction _loadFlow(state: FlowState, flowId: string): FlowState {\n  return {\n    ...state,\n    selectedFlow: flowId,\n  };\n}\n","import { intialSettings, UPDATE_SETTINGS } from \"./settings.constants\";\nimport {\n  SettingName,\n  Settings,\n  SettingsActionTypes,\n  SettingsState,\n} from \"./settings.types\";\nimport logger from \"../../logger\";\n\nexport default function settingsReducer(\n  state = intialSettings,\n  action: SettingsActionTypes\n): SettingsState {\n  switch (action.type) {\n    case UPDATE_SETTINGS:\n      const newSettings = {\n        ...state.settings,\n        ...action.payload,\n      };\n      const newSettingsState = {\n        settings: newSettings,\n      };\n      logger.log(\"saveSettings - settings\", newSettings);\n      _saveSettingsInStore(newSettings);\n      return newSettingsState;\n    default:\n      return state;\n  }\n}\n\nfunction _saveSettingsInStore(settings: Settings) {\n  Object.keys(settings).forEach((key) => {\n    localStorage.setItem(\n      `preferences-${key}`,\n      settings[key as SettingName] as string\n    );\n  });\n}\n","import { combineReducers, createStore } from \"redux\";\nimport flowReducer from \"./flows/flows.reducer\";\nimport { FlowState } from \"./flows/flows.types\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { SettingsState } from \"./settings/settings.types\";\nimport settingsReducer from \"./settings/settings.reducer\";\n\nexport type State = {\n  flowState: FlowState;\n  settingsState: SettingsState;\n};\n\nconst rootReducer = combineReducers({\n  flowState: flowReducer,\n  settingsState: settingsReducer,\n});\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ThemeProvider } from \"@emotion/react\";\nimport { Provider } from \"react-redux\";\nimport { theme } from \"./theme\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./assets/main.scss\";\nimport \"./App.css\";\nimport store from \"./redux\";\n\nlet App;\n\nif (process.env.REACT_APP_TARGET === \"dashboard\") {\n  const { Dashboard } = require(\"./apps/Dashboard\");\n  App = Dashboard;\n} else {\n  const { Hub } = require(\"./apps/Hub\");\n  App = Hub;\n}\n\nReactDOM.render(\n  // HOC to make theme available as a prop in all components\n  <ThemeProvider theme={theme}>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n","export const { dashboardRoutes } = require(\"./Dashboard\");\nexport const { hubRoutes } = require(\"./Hub\");\n","import React from \"react\";\nimport GoogleAnalytics from \"react-ga\";\n\nGoogleAnalytics.initialize(process.env.REACT_APP_GAID || \"UA-164627626-1\");\n\nconst withTracker = (WrappedComponent: any, options = {}) => {\n  const trackPage = (page: any) => {\n    if (process.env.NODE_ENV !== \"production\") {\n      return;\n    }\n\n    GoogleAnalytics.set({\n      page,\n      ...options,\n    });\n    GoogleAnalytics.pageview(page);\n  };\n\n  const BASENAME = process.env.REACT_APP_BASENAME || \"\";\n\n  // eslint-disable-next-line\n  const HOC = class extends React.Component<any, any> {\n    componentDidMount() {\n      // eslint-disable-next-line\n      const page = this.props.location.pathname + this.props.location.search;\n      trackPage(`${BASENAME}${page}`);\n    }\n\n    componentDidUpdate(prevProps: any) {\n      const currentPage =\n        prevProps.location.pathname + prevProps.location.search;\n      const nextPage =\n        this.props.location.pathname + this.props.location.search;\n\n      if (currentPage !== nextPage) {\n        trackPage(`${BASENAME}${nextPage}`);\n      }\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  };\n\n  return HOC;\n};\n\nexport default withTracker;\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { FallbackProps } from \"react-error-boundary\";\nimport { PageTitle } from \"../components/Common/PageTitle\";\nimport { Button } from \"shards-react\";\n\nfunction FallbackPage({ error, resetErrorBoundary }: FallbackProps) {\n  return (\n    <Container fluid className=\"main-content-container p-5\">\n      <Row noGutters className=\"page-header mb-4\">\n        <PageTitle\n          title=\"Error\"\n          subtitle=\"This should not have happened\"\n          className=\"text-sm-left my-3\"\n        />\n      </Row>\n      <Row noGutters className=\"page-header mb-4\">\n        <Col xs=\"12\" sm=\"3\">\n          <p>Something went wrong:</p>\n          <pre>\n            <code className=\"text-warning\">{error!.message}</code>\n          </pre>\n        </Col>\n      </Row>\n      <Row noGutters className=\"page-header\">\n        <Col>\n          <Button onClick={resetErrorBoundary}>Try again</Button>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport { FallbackPage };\n","import React from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\n\nimport { hubRoutes as routes } from \"../routes\";\nimport withTracker from \"../withTracker\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../assets/main.scss\";\nimport \"../App.css\";\nimport { ErrorBoundary } from \"react-error-boundary\";\nimport { FallbackPage } from \"../views/FallbackPage\";\nimport { Store } from \"../flux\";\n\nconst Hub = () => {\n  document.title = \"Jina Hub\";\n  return (\n    <Router basename={\"/\"}>\n      <div>\n        {routes.map((route: any, index: number) => {\n          return (\n            <Route\n              key={index}\n              path={route.path}\n              exact={route.exact}\n              component={withTracker((props: any) => {\n                return (\n                  <route.layout {...props} {...route.props}>\n                    <ErrorBoundary\n                      FallbackComponent={FallbackPage}\n                      onReset={() => Store.init()}\n                    >\n                      <route.component {...props} />\n                    </ErrorBoundary>\n                  </route.layout>\n                );\n              })}\n            />\n          );\n        })}\n      </div>\n    </Router>\n  );\n};\n\nexport { Hub };\n","import axios from \"axios\";\nimport logger from \"../logger\";\nimport { hubURL, timeout } from \"./config\";\nlet logStream: EventSource;\nlet taskStream: EventSource;\n\nconst hub = axios.create({\n  baseURL: hubURL,\n  withCredentials: true,\n  timeout, // 30 secs\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\",\n  },\n});\n\ntype Settings = {\n  host: string;\n  port: string | number;\n  log: string;\n  profile: string;\n  yaml: string;\n  ready: string;\n  shutdown: string;\n};\n\ntype ConnectionUpdate = (messageType: string, message: string) => void;\n\ntype UpdateHandler = (update: { type: string; data: string }) => void;\n\nexport default {\n  connect: (\n    settings: Settings,\n    connectionUpdate: ConnectionUpdate,\n    logUpdate: UpdateHandler,\n    taskUpdate: UpdateHandler\n  ) => {\n    logger.log(\"api - connect - settings\", settings);\n\n    const logString = `${settings.host}:${settings.port}${\n      settings.log.startsWith(\"/\") ? settings.log : \"/\" + settings.log\n    }`;\n    logger.log(\"api - connect - logString\", logString);\n\n    if (logStream) logStream.close();\n    logStream = new EventSource(logString);\n\n    logStream.onopen = () => {\n      logger.log(\"api - logStream.onopen called\");\n      connectionUpdate(\n        \"connected\",\n        `Logserver connection established at ${settings.host}:${settings.port}`\n      );\n    };\n\n    logStream.onmessage = (m) => {\n      logUpdate({ type: \"log\", data: JSON.parse(m.data) });\n    };\n\n    logStream.onerror = (data) => {\n      logger.log(\"api - logStream.onerror - ERROR\", data);\n      connectionUpdate(\n        \"failed\",\n        `Could not connect to logserver at ${settings.host}:${settings.port}`\n      );\n      logStream.close();\n    };\n\n    const taskString = `${settings.host}:${settings.port}${\n      settings.profile.startsWith(\"/\")\n        ? settings.profile\n        : \"/\" + settings.profile\n    }`;\n    logger.log(\"api - connect - taskString\", taskString);\n\n    if (taskStream) taskStream.close();\n    taskStream = new EventSource(taskString);\n\n    taskStream.onopen = () => {\n      logger.log(\"api - taskStream.onopen called\");\n      taskUpdate({\n        type: \"connect\",\n        data: `Task connection established at ${taskString}`,\n      });\n    };\n\n    taskStream.onmessage = (m) => {\n      taskUpdate({ type: \"event\", data: JSON.parse(m.data) });\n    };\n\n    taskStream.onerror = (data) => {\n      logger.log(\"api - taskStream.onerror - ERROR\", data);\n      taskUpdate({\n        type: \"error\",\n        data: `Could not get profile data from ${taskString}`,\n      });\n      taskStream.close();\n    };\n  },\n  getProfile: async () => {\n    const result = await hub.get(\"profile\");\n    return result.data;\n  },\n  getYAML: async (settings: Settings) => {\n    const connectionString = `${settings.host}:${settings.port}${\n      settings.yaml.startsWith(\"/\") ? settings.yaml : \"/\" + settings.yaml\n    }`;\n    logger.log(\"api - getYAML - connectionString\", connectionString);\n    const result = await axios.get(connectionString, { timeout });\n    return result.data;\n  },\n  getImages: async () => {\n    const result = await hub.get(\"list\");\n    return result.data;\n  },\n  getImage: async (id: string) => {\n    const result = await hub.get(`/images/${id}`);\n    return result.data;\n  },\n  postRating: async (imageId: string, stars: any) => {\n    const result = await hub.post(`/images/${imageId}/ratings`, { stars });\n    return result.data;\n  },\n  postReview: async (imageId: string, content: any) => {\n    const result = await hub.post(`/images/${imageId}/reviews`, { content });\n    return result.data;\n  },\n  searchHub: async (category: string, q: string, sort: string) => {\n    const result = await hub.get(\n      `/images?category=${category}&q=${q}&sort=${sort}`\n    );\n    return result.data;\n  },\n  logOut: async () => {\n    const result = await hub.post(\"/auth/logout\");\n    return result.data;\n  },\n};\n","import { EventEmitter } from \"events\";\nimport _ from \"lodash\";\nimport { nanoid } from \"nanoid\";\nimport { Constants, Dispatcher, transformLog } from \"./\";\nimport { parseYAML, formatForFlowchart, formatSeconds } from \"../helpers\";\nimport api from \"./api\";\nimport logger from \"../logger\";\nimport propertyList from \"../data/podProperties.json\";\nimport getSidebarNavItems from \"../data/sidebar-nav-items\";\nimport exampleFlows from \"../data/exampleFlows\";\nimport { Level, RawLogEntry } from \"./tranformLog\";\n\nconst MAX_CHART_TICKS = 60;\nconst HIDE_BANNER_TIMEOUT = 5000;\nconst TASK_UPDATE_INTERVAL = 500;\n\nfunction getExampleFlows() {\n  const flows: LooseObject = {};\n\n  Object.entries(exampleFlows).forEach(([id, flow]) => {\n    const parsed = parseYAML(flow.yaml);\n    let canvas;\n    try {\n      canvas = parsed.data.with.board.canvas;\n    } catch (e) {\n      canvas = {};\n    }\n    const formatted = formatForFlowchart(parsed.data.pods, canvas);\n    flows[id] = {\n      ...flow,\n      flow: formatted,\n    };\n  });\n\n  return flows;\n}\n\nfunction getUserFlows() {\n  const storedFlows = localStorage.getItem(\"userFlows\");\n  const userFlows = storedFlows ? JSON.parse(storedFlows) : null;\n  return _.isEmpty(userFlows)\n    ? {\n        _userFlow: {\n          name: \"Custom Flow 1\",\n          type: \"user-generated\",\n          flow: getInitialFlow(),\n        },\n      }\n    : userFlows;\n}\n\nfunction getInitialFlow() {\n  return {\n    selected: {},\n    hovered: {},\n    scale: 1,\n    nodes: {\n      gateway: {\n        id: \"gateway\",\n        label: \"gateway\",\n        ports: {\n          outPort: {\n            id: \"outPort\",\n            type: \"output\",\n          },\n        },\n        properties: {},\n        position: { x: 629, y: 72 },\n      },\n    },\n    links: {},\n    offset: { x: 0, y: 0 },\n  };\n}\n\nfunction getInitialLevelOccurences(): RawLogEntry {\n  return {\n    lastLog: 0,\n    levels: {\n      INFO: 0,\n      SUCCESS: 0,\n      WARNING: 0,\n      ERROR: 0,\n      CRITICAL: 0,\n      DEBUG: 0,\n    },\n  };\n}\n\nfunction getInitialStore(): LooseObject {\n  const initialStore: LooseObject = {\n    settings: {\n      host: localStorage.getItem(\"preferences-host\") || \"http://localhost\",\n      port: localStorage.getItem(\"preferences-port\") || 5000,\n      log: localStorage.getItem(\"preferences-log\") || \"/stream/log\",\n      profile: localStorage.getItem(\"preferences-profile\") || \"/stream/profile\",\n      yaml: localStorage.getItem(\"preferences-yaml\") || \"/data/yaml\",\n      shutdown:\n        localStorage.getItem(\"preferences-shutdown\") || \"/action/shutdown\",\n      ready: localStorage.getItem(\"preferences-ready\") || \"/status/ready\",\n    },\n    images: {},\n    hub: [],\n    banner: false,\n    connected: false,\n    loading: true,\n    modal: false,\n    menuVisible: false,\n    navItems: getSidebarNavItems(),\n    flows: {\n      ...getUserFlows(),\n      ...getExampleFlows(),\n    },\n    selectedFlow: \"_userFlow\",\n    logs: [],\n    logSources: {},\n    logLevels: {},\n    logLevelOccurences: {},\n    logIndex: false,\n    summaryCharts: {},\n    processes: {},\n    taskData: {\n      qps: {\n        current: 0,\n        history: new Array(30).fill(0),\n      },\n      elapsed: {\n        task_name: \"No Current Task\",\n        seconds: \"0s\",\n      },\n      progress: {\n        currentRequest: 0,\n        bar_len: 0,\n        num_bars: 0,\n      },\n      speed: {\n        current: 0,\n        unit: \"units\",\n        history: new Array(30).fill(0),\n      },\n      lastUpdateChart: new Date(),\n      messages: [],\n      bytes: [],\n    },\n    selectedNode: null,\n    modalParams: {},\n    currentTab: \"logStream\",\n  };\n  return initialStore;\n}\n\nlet _store: any = getInitialStore();\nlet _updateChartInterval: any;\nlet _updateTaskInterval: any;\nlet _bannerTimeout: any;\n\nif (window.location.hostname === \"localhost\") logger.enable();\n\ntype DispatchProps = {\n  actionType: string;\n  payload: any;\n};\n\ninterface LooseObject {\n  [key: string]: any;\n}\n\nclass StoreBase extends EventEmitter {\n  constructor() {\n    super();\n    Dispatcher.register(this.registerActions);\n    this.init();\n    (window as any).peakLogs = this.getLogs;\n    (window as any).peakStore = () => console.log(_store);\n  }\n  registerActions = ({ actionType, payload }: DispatchProps) => {\n    switch (actionType) {\n      case Constants.TOGGLE_SIDEBAR:\n        this.toggleSidebar();\n        break;\n      case Constants.SHOW_MODAL:\n        this.showModal(payload);\n        break;\n      case Constants.SHOW_BANNER:\n        this.showBanner(...(payload as [string, string]));\n        break;\n      case Constants.IMPORT_CUSTOM_YAML:\n        this.importCustomYAML(payload);\n        break;\n      case Constants.CLOSE_MODAL:\n        this.closeModal();\n        break;\n      case Constants.SHOW_LOG_AT_INDEX:\n        this.showLogAtIndex(payload);\n        break;\n      case Constants.SAVE_SETTINGS:\n        this.saveSettings(payload);\n        break;\n      case Constants.RECONNECT:\n        this.reconnect();\n        break;\n      case Constants.POST_RATING:\n        this.postRating(payload);\n        break;\n      case Constants.POST_REVIEW:\n        this.postReview(payload);\n        break;\n      case Constants.SEARCH_HUB:\n        this.searchHub(payload);\n        break;\n      case Constants.LOG_OUT:\n        this.logOut();\n        break;\n      case Constants.LOAD_FLOW:\n        this.loadFlow(payload);\n        break;\n      case Constants.SHOW_POD_IN_FLOW:\n        this.showPodByLabel(payload);\n        break;\n      case Constants.CREATE_NEW_FLOW:\n        this.createNewFlow();\n        break;\n      case Constants.DUPLICATE_FLOW:\n        this.createNewFlow(payload);\n        break;\n      case Constants.UPDATE_FLOW:\n        this.updateFlow(payload);\n        break;\n      case Constants.DELETE_FLOW:\n        this.deleteFlow(payload);\n        break;\n      default:\n    }\n  };\n\n  init = async () => {\n    this.clearIntervals();\n    _store = getInitialStore();\n\n    await this.initFlowChart();\n    this.initLogStream();\n    this.initHub();\n    this.initUser();\n\n    this.emit(\"update-ui\");\n    this.emit(\"update-settings\");\n  };\n\n  clearIntervals = () => {\n    if (_updateChartInterval) clearInterval(_updateChartInterval);\n    if (_updateTaskInterval) clearInterval(_updateTaskInterval);\n  };\n\n  initFlowChart = async () => {\n    let flow;\n\n    try {\n      let str = await api.getYAML(_store.settings);\n      flow = parseYAML(str);\n    } catch (e) {\n      logger.log(\"initFlowChart - parseYAML[API] ERROR\", e);\n      return;\n    }\n\n    let canvas;\n    try {\n      canvas = flow.data.with.board.canvas;\n    } catch (e) {\n      canvas = {};\n    }\n\n    logger.log(\"initFlowChart - flow\", flow);\n    logger.log(\"initFlowChart - canvas\", canvas);\n\n    const parsed = formatForFlowchart(flow.data.pods, canvas);\n    parsed.with = flow.data.with;\n\n    logger.log(\"initFlowChart - parsed\", parsed);\n\n    let flows: LooseObject = {};\n    flows.connectedFlow = {\n      flow: parsed,\n      name: \"Network Flow\",\n      type: \"remote\",\n    };\n    _store.flows = { ...flows, ..._store.flows };\n    _store.selectedFlow = \"connectedFlow\";\n\n    this.emit(\"update-ui\");\n    this.emit(\"update-flowchart\");\n  };\n\n  initLogStream = () => {\n    api.connect(\n      _store.settings,\n      this.handleLogConnectionStatus,\n      this.handleNewLog,\n      this.handleNewTaskEvent\n    );\n    _updateTaskInterval = setInterval(\n      () => this.emit(\"update-task\"),\n      TASK_UPDATE_INTERVAL\n    );\n  };\n\n  handleLogConnectionStatus = (status: string, message: string) => {\n    logger.log(\"handleLogConnectionStatus - status\", status);\n    logger.log(\"handleLogConnectionStatus - message\", message);\n    _store.loading = false;\n    if (status === \"connected\") {\n      _store.connected = true;\n      return this.showBanner(message, \"success\");\n    } else {\n      _store.connected = false;\n    }\n    this.emit(\"update-ui\");\n  };\n\n  handleNewLog = (message: { data: any }) => {\n    const { data } = message;\n    const log = transformLog(data, _store.logs.length);\n\n    const { process, name, levelname, unixTime } = log;\n\n    _store.logs.push(log);\n    _store.processes[process] = log.name;\n\n    if (_store.logSources[name]) _store.logSources[name]++;\n    else _store.logSources[name] = 1;\n\n    if (_store.logLevels[levelname]) _store.logLevels[levelname]++;\n    else _store.logLevels[levelname] = 1;\n\n    if (!_store.logLevelOccurences[unixTime])\n      _store.logLevelOccurences[unixTime] = getInitialLevelOccurences();\n\n    _store.logLevelOccurences[unixTime].levels[levelname]++;\n    _store.logLevelOccurences[unixTime].lastLog = log.idx;\n\n    this.emit(\"update-logs\");\n  };\n\n  handleNewTaskEvent = (message: { data: any }) => {\n    const { data } = message;\n\n    const event = data;\n\n    const {\n      task_name,\n      process,\n      bar_len,\n      num_bars,\n      elapsed,\n      speed,\n      speed_unit,\n      bytes_recv,\n      bytes_sent,\n      msg_recv,\n      msg_sent,\n      num_reqs,\n      qps,\n    } = event;\n\n    if (bar_len && num_bars) {\n      _store.taskData.progress.currentRequest = num_reqs;\n      _store.taskData.progress.bar_len = bar_len;\n      _store.taskData.progress.num_bars = num_bars;\n    }\n\n    if (msg_recv && msg_sent) {\n      let index = _store.taskData.messages\n        .map((obj: any) => obj.process)\n        .indexOf(process);\n      let msgData = {\n        process,\n        sent: msg_sent,\n        received: msg_recv,\n        node: _store.processes[process],\n      };\n      let bytesData = {\n        process,\n        sent: bytes_sent,\n        received: bytes_recv,\n        node: _store.processes[process],\n      };\n      if (index < 0) {\n        _store.taskData.messages.push(msgData);\n        _store.taskData.bytes.push(bytesData);\n      } else {\n        _store.taskData.messages[index] = msgData;\n        _store.taskData.bytes[index] = bytesData;\n      }\n      _store.taskData.messages = _store.taskData.messages\n        .sort((a: any, b: any) => b.sent + b.received - (a.sent + a.received))\n        .slice(0, 20);\n      _store.taskData.bytes = _store.taskData.bytes\n        .sort((a: any, b: any) => b.sent + b.received - (a.sent + a.received))\n        .slice(0, 20);\n      _store.taskData.lastUpdateChart = new Date();\n    }\n\n    if (qps) {\n      _store.taskData.qps.current = parseFloat(qps).toFixed(1);\n      _store.taskData.qps.history.push(parseFloat(qps).toFixed(3));\n      _store.taskData.qps.history.shift();\n    }\n\n    if (speed && speed_unit) {\n      _store.taskData.speed.unit = speed_unit;\n      _store.taskData.speed.current = parseFloat(speed).toFixed(1);\n      _store.taskData.speed.history.push(parseFloat(speed).toFixed(3));\n      _store.taskData.speed.history.shift();\n    }\n\n    if (elapsed) {\n      _store.taskData.elapsed.seconds = formatSeconds(parseInt(elapsed));\n      _store.taskData.elapsed.task_name = `Task: ${task_name}`;\n    }\n  };\n\n  initHub = async () => {\n    try {\n      const images = await api.getImages();\n      _store.hub = images;\n    } catch (e) {\n      _store.hub = false;\n    }\n    this.emit(\"update-hub\");\n  };\n\n  initUser = async () => {\n    const user = await api.getProfile();\n    _store.user = user;\n    this.emit(\"update-user\");\n  };\n\n  reconnect() {\n    this.init();\n  }\n\n  toggleSidebar() {\n    _store.menuVisible = !_store.menuVisible;\n    this.emit(\"update-ui\");\n  }\n\n  showLogAtIndex = (logIndex: number) => {\n    if (!logIndex || !_store.logs[logIndex]) return;\n    _store.logIndex = logIndex;\n    this.emit(\"show-log\");\n  };\n\n  showPodByLabel = (label: string) => {\n    let selected: LooseObject = {};\n    let x = 0;\n    let y = 0;\n    Object.entries(_store.flowchart.nodes).forEach(\n      ([key, value]: [string, any]) => {\n        if (value.label === label) {\n          selected.id = key;\n          selected.type = \"node\";\n          x = value.position.x * -1 + 40;\n          y = value.position.y * -1 + 100;\n        }\n      }\n    );\n    _store.flowchart.selected = selected;\n    _store.flowchart.offset = { x, y };\n    this.emit(\"update-flowchart\");\n    window.location.hash = \"#/flow\";\n  };\n\n  importCustomYAML = (customYAML?: string) => {\n    logger.log(\"importCustomYAML - customYAML\", customYAML);\n    this.createNewFlow(customYAML);\n    this.closeModal();\n    this.emit(\"update-flowchart\");\n  };\n\n  loadFlow = (flowId: string) => {\n    _store.selectedFlow = flowId;\n    this.emit(\"update-flowchart\");\n  };\n\n  updateFlow = (newFlow: any) => {\n    _store.flows[_store.selectedFlow].flow = newFlow;\n    this.saveFlowsToStorage();\n    this.emit(\"update-flowchart\");\n  };\n\n  createNewFlow = (customYAML?: string) => {\n    let prefixString = \"Custom Flow\";\n\n    let userFlows = Object.values(_store.flows).filter((flow: any) =>\n      flow.name.startsWith(prefixString)\n    );\n\n    const flowNumbers = userFlows\n      .map((f: any) => parseInt(f.name.substring(prefixString.length)) || 0)\n      .sort((a, b) => a - b);\n\n    const largestNumber = flowNumbers[flowNumbers.length - 1] || 0;\n\n    const id = nanoid();\n\n    let flow;\n\n    if (customYAML) {\n      const parsed = parseYAML(customYAML);\n      let canvas;\n      try {\n        canvas = parsed.data.with.board.canvas;\n      } catch (e) {\n        canvas = {};\n      }\n      flow = formatForFlowchart(parsed.data.pods, canvas);\n    } else flow = getInitialFlow();\n\n    _store.flows[id] = {\n      name: `${prefixString} ${largestNumber + 1}`,\n      type: \"user-generated\",\n      flow,\n    };\n\n    _store.selectedFlow = id;\n    this.saveFlowsToStorage();\n    this.emit(\"update-flowchart\");\n  };\n\n  deleteFlow = (flowId: string) => {\n    _store.flows = _.omit(_store.flows, flowId);\n\n    const nonExampleFlows = Object.entries(_store.flows).filter(\n      ([id, flow]: [string, any]) => flow.type !== \"example\"\n    );\n\n    if (_store.selectedFlow === flowId && nonExampleFlows.length) {\n      _store.selectedFlow = nonExampleFlows[0][0];\n    } else if (!nonExampleFlows.length) {\n      _store.flows = {\n        _userFlow: {\n          name: \"Custom Flow 1\",\n          type: \"user-generated\",\n          flow: getInitialFlow(),\n        },\n        ..._store.flows,\n      };\n      _store.selectedFlow = \"_userFlow\";\n    }\n\n    this.saveFlowsToStorage();\n    this.emit(\"update-flowchart\");\n  };\n\n  saveFlowsToStorage = () => {\n    let toSave: LooseObject = {};\n    const { flows } = _store;\n    Object.entries(flows).forEach(([id, flow]: [string, any]) => {\n      if (flow.type === \"user-generated\") toSave[id] = flow;\n    });\n    localStorage.setItem(\"userFlows\", JSON.stringify(toSave));\n  };\n\n  saveSettings = (settings: LooseObject) => {\n    logger.log(\"saveSettings - settings\", settings);\n    Object.keys(settings).forEach((key) => {\n      localStorage.setItem(`preferences-${key}`, settings[key]);\n    });\n    setTimeout(this.init, 100);\n  };\n\n  postRating = async ({ imageId, stars }: { imageId: string; stars: any }) => {\n    if (!_store.user) return (window.location.hash = \"#/login\");\n    let result;\n    try {\n      result = await api.postRating(imageId, stars);\n    } catch (e) {\n      let error = String(e).includes(\"409\") ? \"Already Rated\" : e;\n      return this.showError(error);\n    }\n    if (result.error) this.showError(result.error);\n    else if (result.data) {\n      const image = result.data;\n      _store.images[image.id] = image;\n      this.showBanner(\"Rating successfully posted\", \"success\");\n    }\n    this.emit(\"update-hub\");\n  };\n\n  postReview = async ({\n    imageId,\n    content,\n  }: {\n    imageId: string;\n    content: any;\n  }) => {\n    if (!_store.user) {\n      this.closeModal();\n      return (window.location.hash = \"#/login\");\n    }\n    this.closeModal();\n    let result;\n    try {\n      result = await api.postReview(imageId, content);\n    } catch (e) {\n      let error = String(e).includes(\"409\") ? \"Already Reviewed\" : e;\n      return this.showError(error);\n    }\n    if (result.error) this.showError(result.error);\n    else if (result.data) {\n      const image = result.data;\n      _store.images[image.id] = image;\n      this.showBanner(\"Review successfully posted\", \"success\");\n    }\n    this.emit(\"update-hub\");\n  };\n\n  logOut = async () => {\n    await api.logOut();\n    window.location.reload();\n  };\n\n  searchHub = async ({\n    category,\n    q,\n    sort,\n  }: {\n    category: string;\n    q: string;\n    sort: string;\n  }) => {\n    const images = await api.searchHub(category, q, sort);\n    _store.hub = images;\n    this.emit(\"update-hub\");\n  };\n\n  showBanner = (message: string, theme: string) => {\n    if (_bannerTimeout) clearTimeout(_bannerTimeout);\n    _store.banner = { message: String(message), theme };\n    _bannerTimeout = setTimeout(this.hideBanner, HIDE_BANNER_TIMEOUT);\n    this.emit(\"update-ui\");\n  };\n\n  hideBanner = () => {\n    _store.banner = false;\n    this.emit(\"update-ui\");\n  };\n\n  showError = (message: string) => {\n    this.showBanner(message, \"error\");\n  };\n\n  showModal = (data: { modal: string; modalParams: any }) => {\n    const { modal, modalParams } = data;\n    _store.modal = modal;\n    _store.modalParams = modalParams || {};\n    this.emit(\"update-ui\");\n  };\n\n  closeModal = () => {\n    _store.modal = false;\n    _store.modalParams = {};\n    this.emit(\"update-ui\");\n  };\n\n  getMenuState() {\n    return _store.menuVisible;\n  }\n\n  getSidebarItems() {\n    return _store.navItems;\n  }\n\n  getCurrentTab = () => {\n    return _store.currentTab;\n  };\n\n  getUser = () => {\n    return _store.user;\n  };\n\n  getHubImages = () => {\n    return _store.hub;\n  };\n\n  getHubImage = async (imageId: string) => {\n    if (!_store.images[imageId]) {\n      _store.images[imageId] = await api.getImage(imageId);\n    }\n    return _store.images[imageId];\n  };\n\n  getSettings = () => {\n    return _store.settings;\n  };\n\n  getBanner = () => {\n    return _store.banner;\n  };\n\n  getModal = () => {\n    return _store.modal;\n  };\n\n  getModalParams = () => {\n    return _store.modalParams;\n  };\n\n  getLogs = () => {\n    return _store.logs;\n  };\n\n  getLogSources = () => {\n    return _store.logSources;\n  };\n\n  getLogLevels = () => {\n    return _store.logLevels;\n  };\n\n  getSummaryCharts = () => {\n    return _store.summaryCharts;\n  };\n\n  getLogLevelCharts = (numSeconds: number = 60) => {\n    const emptyItem = getInitialLevelOccurences();\n    const step = numSeconds / MAX_CHART_TICKS;\n    const data = [];\n    const currentInterval = Math.ceil(+new Date() / 1000 / step) * step;\n    const now = Math.floor(+new Date() / 1000);\n    for (let i = currentInterval - numSeconds; i < currentInterval; i += step) {\n      let item = _.cloneDeep(emptyItem);\n      for (let j = i; j < i + step; ++j) {\n        const occurence = _store.logLevelOccurences[j];\n        if (!occurence) continue;\n        item.lastLog = occurence.lastLog;\n        Object.entries(occurence.levels).forEach((logEntry) => {\n          const level = logEntry[0] as Level;\n          const amount = logEntry[1] as number;\n          item.levels[level] = item.levels[level] + amount;\n        });\n      }\n      data.push(item);\n    }\n\n    return { data, numSeconds, numTicks: MAX_CHART_TICKS, lastTimestamp: now };\n  };\n\n  getLogLevelOccurences = () => {\n    return _store.logLevels;\n  };\n\n  getTaskData = () => {\n    return _store.taskData;\n  };\n\n  getActivePanel = () => {\n    const path = window.location.hash.substring(2, window.location.hash.length);\n    if (path.startsWith(\"flow\")) return \"flow\";\n    if (path.startsWith(\"logs\")) return \"logs\";\n    if (path.startsWith(\"hub\") || path.startsWith(\"package\")) return \"hub\";\n    if (path.startsWith(\"task\")) return \"task\";\n    return \"neither\";\n  };\n\n  getConnectionStatus = () => {\n    return _store.connected;\n  };\n\n  isLoading = () => {\n    return _store.loading;\n  };\n\n  getFlowchart = () => {\n    return _store.flows[_store.selectedFlow];\n  };\n\n  getFlows = () => {\n    return _store.flows;\n  };\n\n  getSelectedFlowId = () => {\n    return _store.selectedFlow;\n  };\n\n  getAvailableProperties = () => {\n    return propertyList;\n  };\n\n  getIndexedLog = () => {\n    return _store.logIndex;\n  };\n\n  getStoreCopy = () => {\n    return _.cloneDeep(_store);\n  };\n}\n\nexport const Store = new StoreBase();\n","export default function () {\n  return [\n    {\n      items: [\n        {\n          title: \"Home\",\n          to: \"/home\",\n          iconName: \"home\",\n          matches: [\"home\"],\n        },\n        {\n          title: \"Log Stream\",\n          to: \"/logs\",\n          iconName: \"insert_comment\",\n          matches: [\"logs\"],\n        },\n        {\n          title: \"Task\",\n          to: \"/task\",\n          iconName: \"assessment\",\n          matches: [\"task\"],\n        },\n        {\n          title: \"Flow Design\",\n          to: \"/flow\",\n          iconName: \"device_hub\",\n          matches: [\"flow\"],\n        },\n        {\n          title: \"Hub\",\n          to: \"/hub\",\n          iconName: \"store\",\n          matches: [\"hub\", \"package\"],\n        },\n        {\n          title: \"Settings\",\n          to: \"/settings\",\n          iconName: \"settings\",\n          matches: [\"settings\"],\n        },\n        {\n          title: \"Help\",\n          to: \"/help\",\n          iconName: \"help\",\n          matches: [\"help\"],\n        },\n      ],\n    },\n  ];\n}\n","const { Dispatcher } = require(\"./dispatcher\");\nconst { Store } = require(\"./store\");\nconst { Constants } = require(\"./constants\");\nconst { transformLog } = require(\"./tranformLog\");\n\nexport { Dispatcher, Store, Constants, transformLog };\n","export const timeout = 15000;\nexport const hubURL = \"https://hubapi.jina.ai\";\n// export const hubURL:'http://localhost:3040';\n","import { SettingsState } from \"./settings.types\";\n\nexport const UPDATE_SETTINGS = \"UPDATE_SETTINGS\";\n\nexport const intialSettings: SettingsState = {\n  settings: {\n    host: localStorage.getItem(\"preferences-host\") || \"http://localhost\",\n    port: localStorage.getItem(\"preferences-port\") || \"5000\",\n    log: localStorage.getItem(\"preferences-log\") || \"/stream/log\",\n    profile: localStorage.getItem(\"preferences-profile\") || \"/stream/profile\",\n    yaml: localStorage.getItem(\"preferences-yaml\") || \"/data/yaml\",\n    shutdown:\n      localStorage.getItem(\"preferences-shutdown\") || \"/action/shutdown\",\n    ready: localStorage.getItem(\"preferences-ready\") || \"/status/ready\",\n  },\n};\n","import React, { ReactNode } from \"react\";\nimport { Card, Row, Col } from \"react-bootstrap\";\n\ntype Props = {\n  title: ReactNode;\n  content: string;\n  icon: string;\n  theme: string;\n  link: string;\n};\n\nfunction HelpCard({ title, content, icon, theme, link }: Props) {\n  return (\n    <a\n      className=\"unstyled-link\"\n      href={link}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      <Card className=\"h-100\">\n        <Card.Body className=\"pt-3\">\n          <Row className=\"align-items-center\">\n            <Col xs=\"8\">\n              <h4>{title}</h4>\n            </Col>\n            <Col xs=\"4\">\n              <h1 className=\"float-right\">\n                <span className={`${icon} log-${theme}`} />\n              </h1>\n            </Col>\n          </Row>\n          <Row>\n            <Col>{content}</Col>\n          </Row>\n        </Card.Body>\n      </Card>\n    </a>\n  );\n}\n\nexport { HelpCard };\n","import React from \"react\";\nimport { Container, Row, Col } from \"shards-react\";\nimport { HelpCard } from \"../components/Common/HelpCard\";\nimport { PageTitle } from \"../components/Common/PageTitle\";\n\nconst NotFound = () => (\n  <Container fluid className=\"main-content-container px-4\">\n    <Row noGutters className=\"page-header mb-4\">\n      <PageTitle title=\"Resources\" className=\"text-sm-left mb-3\" />\n    </Row>\n    <Row>\n      <Col md=\"4\" lg=\"3\" className=\"mb-4\">\n        <HelpCard\n          title=\"Jina 101\"\n          content=\"Understanding all key concepts of Jina in 3 minutes!\"\n          link=\"https://101.jina.ai\"\n          icon=\"fas fa-egg\"\n          theme=\"warning\"\n        />\n      </Col>\n      <Col md=\"4\" lg=\"3\" className=\"mb-4\">\n        <HelpCard\n          title=\"Jina Docs\"\n          content=\"The best way to learn Jina in depth.\"\n          link=\"https://docs.jina.ai\"\n          icon=\"fas fa-book\"\n          theme=\"primary\"\n        />\n      </Col>\n      <Col md=\"4\" lg=\"3\" className=\"mb-4\">\n        <HelpCard\n          title='Jina \"Hello World\"'\n          content=\"A simple demo of image neural search for Fashion-MNIST.\"\n          link=\"https://github.com/jina-ai/jina#jina-hello-world-\"\n          icon=\"fas fa-globe-europe\"\n          theme=\"error\"\n        />\n      </Col>\n      <Col md=\"4\" lg=\"3\" className=\"mb-4\">\n        <HelpCard\n          title={\n            <span>\n              Visit us on <span className=\"text-nowrap\">Github!</span>\n            </span>\n          }\n          content=\"Explore more exciting open-source projects from us.\"\n          link=\"https://opensource.jina.ai\"\n          icon=\"fab fa-github\"\n          theme=\"info\"\n        />\n      </Col>\n      <Col md=\"4\" lg=\"3\" className=\"mb-4\">\n        <HelpCard\n          title=\"We are hiring!\"\n          content=\"Join us and build the next neural search eco system!\"\n          link=\"https://www.linkedin.com/company/jinaai/jobs/\"\n          icon=\"fab fa-linkedin\"\n          theme=\"linkedin\"\n        />\n      </Col>\n    </Row>\n  </Container>\n);\n\nexport default NotFound;\n"],"sourceRoot":""}