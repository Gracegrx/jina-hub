{"version":3,"sources":["helpers/flow-chart.ts","redux/settings/settings.constants.ts","components/Common/HelpCard.tsx","views/NotFound.tsx","helpers/utils.ts","redux/logStream/logStream.actions.ts","services/hubApi.ts","views/LogIn.tsx","components/Common/NavigateButton.tsx","components/Hub/ImageDetails.tsx","components/Hub/Readme.tsx","components/Common/Typography.tsx","views/PackageView.tsx","components/Hub/HubFilters.tsx","components/Hub/HubImagesList.tsx","logger.ts","services/jinaApi.ts","redux/global/global.actions.ts","redux/flows/flows.constants.ts","settings.ts","redux/flows/flows.actions.ts","helpers/serialise.ts","helpers/transform-log.ts","routes/Hub.tsx","components/LogStream/levels.ts","components/LogStream/BarChartBase.tsx","components/Common/MultiFilterSelect.tsx","components/LogStream/LogLevelSummaryChart.tsx","components/LogStream/PieChartBase.tsx","components/LogStream/LogLevelPieChart.tsx","components/LogStream/LogItem.tsx","components/LogStream/LogsTableHeader.tsx","components/Common/ExpandingSearchbar.tsx","components/LogStream/LogGroup.tsx","components/LogStream/LogsTable.tsx","redux/logStream/logStream.selectors.ts","views/LogsView.tsx","components/Task/ElapsedCard.tsx","components/Task/ProgressCard.tsx","components/Task/SpeedCard.tsx","components/Task/BarChartCard.tsx","components/Task/QueriesPerSecond.tsx","redux/task/task.selectors.ts","views/TaskView.tsx","components/Settings/options.ts","components/Settings/FormItem.tsx","redux/settings/settings.selectors.ts","components/Settings/Settings.tsx","redux/settings/settings.actions.ts","views/Settings.tsx","components/Hub/HubOverviewAction.tsx","components/Hub/HubOverviewActionsContainer.tsx","components/Hub/HubImagesListPreview.tsx","views/HubView.tsx","components/FlowChart/FlowSelection.tsx","assets/icons/Play.svg","assets/icons/Save.svg","assets/icons/Stop.svg","assets/icons/Upload.svg","assets/icons/Yaml.svg","components/FlowChart/CommandBar.tsx","components/FlowChart/ChartNode.tsx","components/FlowChart/SidebarItem.tsx","data/defaultPods.ts","components/FlowChart/Sidebar.tsx","components/FlowChart/FlowChart.tsx","views/FlowView.tsx","routes/Dashboard.tsx","routes/index.ts","withTracker.tsx","views/FallbackPage.tsx","apps/Hub.tsx","redux/global/global.constants.ts","index.tsx","theme.ts","components/Layout/MainNavbar/NavbarSpacer.tsx","components/Layout/MainNavbar/ConnectionIndicator.tsx","components/Layout/MainNavbar/NavLogo.tsx","components/Layout/MainNavbar/MainNavbar.tsx","components/Layout/MainSidebar/SidebarMainNavbar.tsx","components/Layout/MainSidebar/SidebarNavItem.tsx","components/Layout/MainSidebar/SidebarNavItems.tsx","components/Layout/MainSidebar/MainSidebar.tsx","components/Layout/MainFooter.tsx","components/Common/CookiesBanner.tsx","components/Common/InfoToast.tsx","components/Common/ConnectionToast.tsx","modals/PasteYAML.tsx","modals/WriteReview.tsx","modals/LogDetails.tsx","modals/NewFlow.tsx","modals/PodEdit.tsx","layouts/IconSidebar.tsx","layouts/HubLayout.tsx","redux/flows/flows.selectors.ts","data/exampleFlows.ts","redux/flows/flows.reducer.ts","helpers/typeCheckers.ts","redux/hub/hub.reducer.ts","redux/settings/settings.reducer.ts","redux/logStream/logStream.reducer.ts","redux/global/global.reducer.ts","redux/task/task.constants.ts","redux/task/task.reducer.ts","redux/index.ts","components/Common/PageTitle.tsx","redux/global/global.selectors.ts","services/jinad.ts","services/config.ts","redux/logStream/logStream.constants.ts","helpers/format.ts","redux/hub/hub.selectors.ts","redux/hub/hub.constants.ts","components/Common/SpinningLoader.tsx","redux/hub/hub.actions.ts","components/Hub/ImageCard.tsx"],"names":["settings","require","createNode","id","data","position","type","createLink","source","target","formatForFlowchart","prevNode","pods","canvas","with","board","formatted","nodes","links","version","includes","podMap","forEach","pod","name","gateway","Object","keys","node","label","needs","push","parent","x","y","parseInt","depthPopulation","offsetX","nodeOffset","offsetY","depth","getNodeDepth","undefined","elements","parents","length","parentDepthList","map","parentId","find","Math","max","UPDATE_SETTINGS","intialSettings","host","localStorage","getItem","port","log","profile","yaml","shutdown","ready","HelpCard","title","content","icon","theme","link","dataName","className","href","rel","data-name","Card","Body","Row","Col","xs","NotFound","fluid","noGutters","PageTitle","md","lg","copyToClipboard","str","temp","document","createElement","value","body","appendChild","select","execCommand","removeChild","timeout","ms","Promise","resolve","setTimeout","showLogAtIndex","logIndex","SHOW_LOG_INDEX","payload","handleNewLog","HANDLE_NEW_LOG","initLogStream","workspace_id","flow_id","dispatch","handleConnection","handleLog","a","connected","message","showBanner","jinadClient","waitForFlow","flowResult","status","getLogs","logsResult","logs","logger","store","getState","settingsState","listenForLogs","getHubImages","filters","axios","get","HUB_API_ENDPOINT","params","paramsSerializer","serializeQueryParams","response","getDocumentationHTML","url","rawMarkdownURL","getRawMarkdownURL","rawMarkdownResponse","post","text","HTMLResponse","queryString","arrayFormat","skipNull","replace","Login","componentDidMount","window","location","indexOf","render","src","style","maxWidth","alt","React","Component","NavigationLink","styled","Link","props","palette","mutedText","NavigateButton","path","to","SectionHeading","div","headerTextColor","DetailsSection","Platform","Tag","tagPlatformBackground","ImageDetails","image","keywords","platform","author","dockerCommand","keyword","key","p","ReadMe","documentation","useState","readme","setReadme","useEffect","readmeHTML","dangerouslySetInnerHTML","__html","SpinningLoader","Title","h2","Paragraph","ImageContainer","PackageView","useDispatch","packageId","useParams","hubImages","useSelector","selectHubImages","isHubImagesLoading","selectIsHubImagesLoading","fetchHubImages","description","getCheckedFilterValues","filter","values","reduce","acc","FiltersTitle","FiltersContainer","Checkbox","input","CheckboxLabel","checked","highlightColor","FilterCheckbox","filterCategoryIndex","handleFilterChange","setChecked","highlight","useTheme","onChange","HubFilters","setFilters","kind","getSelectedFilters","filterLabel","removeDuplicates","arrayWithDuplicates","e","i","convertArrayToFilterObject","array","f","HubImagesList","images","getImageFilters","useCallback","index","ImageCard","handleErrorMessage","msg","line","pushLog","arg","logsEnabled","args","arguments","console","isEnabled","enable","_navigator","navigator","addEventListener","disable","removeEventListener","setFormat","format","logsFormat","exportLogs","JSON","stringify","filename","Date","blob","Blob","saveAs","getJinaFlowArguments","JINA_API_ENDPOINT","flowArguments","flow","parseFlowMethodOption","methods","m","options","pea","typeMap","bool","int","help","defaultValue","default","itemType","handleConnectionStatus","HANDLE_CONNECTION_STATUS","_handleConnectionStatus","FETCH_ARGUMENTS_FROM_DAEMON","setFlowArguments","FETCH_ARGUMENTS_FROM_API","toggleSidebar","TOGGLE_SIDE_BAR","SHOW_BANNER","_showBanner","HIDE_BANNER","HIDE_BANNER_TIMEOUT","showModal","modal","modalParams","SHOW_MODAL","closeModal","CLOSE_MODAL","connectJinaD","connect","LOAD_FLOW","CREATE_NEW_FLOW","UPDATE_SELECTED_FLOW","DUPLICATE_FLOW","ADD_NODE","DELETE_FLOW","UPDATE_NODE","UPDATE_NODE_DATA","DELETE_NODE","ADD_LINK","DELETE_LINK","RERENDER","IMPORT_FLOW","SET_FLOW_ARGUMENTS","initialFlowChart","loadFlow","flowId","createNewFlow","updateSelectedFlow","flowUpdate","duplicateFlow","flowYAML","importFlow","deleteFlow","addNode","addLink","sourceHandle","targetHandle","deleteLink","deleteLinkProps","updateNode","nodeId","nodeUpdate","updateNodeProperties","nodePropertiesUpdate","deleteNode","rerender","startFlow","selectedFlowId","flowState","flows","flowChart","formatAsYAML","result","initNetworkFlow","stopFlow","flowProperties","terminateFlow","getFlow","toBlob","serializeLogsToCSVBlob","uptime","formattedTimestamp","process","level","context","workspace_path","serializeLogsToCSV","serializeLogsToJSONBlob","fileContent","serializeLogsToJSON","serializeLogsToTextBlob","serializeLogsToText","transformLog","idx","nanoid","timestamp","unixTime","floor","valueOf","toLocaleString","hubRoutes","exact","layout","HubLayout","component","usesConnection","usesAuth","navigateButton","LogIn","getLevels","colorPalette","INFO","borderColor","info","backgroundColor","SUCCESS","success","WARNING","warning","ERROR","error","CRITICAL","critical","DEBUG","debug","getParsedDatasets","levels","levelData","tick","barPercentage","categoryPercentage","fill","getLabels","amount","labels","ChartBase","width","height","numTicks","onClick","timeLabels","canvasRef","useRef","chartInstance","setChartInstance","onClickChart","activePoints","getElementsAtEvent","getXAxisLabel","getYAxisLabel","Number","isInteger","ChartLegend","entries","toLowerCase","current","chartOptions","animation","duration","events","maintainAspectRatio","responsive","legend","display","tooltips","enabled","point","radius","hitRadius","scales","xAxes","stacked","ticks","padding","maxRotation","autoSkip","callback","gridLines","zeroLineColor","color","yAxes","scaleLabel","borderDash","drawBorder","suggestedMin","maxTicksLimit","chartConfig","datasets","newChartInstance","ChartElement","chartData","update","ref","customStyles","dropdownIndicator","styles","indicatorSeparator","opacity","container","provided","selectProps","option","cursor","control","border","background","MultiFilterSelect","isMulti","isSearchable","clearAfter","onFilterChange","rest","val","Array","isArray","readOnly","LogLevelSummaryChart","numSeconds","showLog","setTimeSelection","timeOptions","selectedTime","Header","placeholder","PieChartBase","getColor","names","borderWidth","boxWidth","mode","LogLevelPieChart","LogItem","memo","columns","items","showLogDetails","logData","logName","String","substring","levelInitial","firstCol","secondCol","thirdCol","css","maxHeight","overflow","textOverflow","whiteSpace","paddingRight","marginRight","areEqual","LogsTableHeader","ExpandingSearchbar","variant","InputGroup","Prepend","Text","Form","Control","Append","_icons","pending","failed","CountSummary","numItems","StatusIcon","k","getStatusFromLevels","ExpandController","expanded","LogGroup","group","setExpanded","prev","Collapse","in","VIEW_PREFERENCE_NAME","saveOptions","viewOptions","table","getInitialView","preference","getUserViewPreference","_lastNumLogs","_searchIndex","FlexSearch","create","doc","field","saveLogData","generateFileName","itemKey","arrayLikeToArray","arrayLike","from","toOption","list","item","LogsList","small","listRef","scrolledToBottom","setScrolledToBottom","scrollToItem","onScroll","scrollOffset","itemCount","itemSize","itemData","GroupedLogs","groupedData","grouping","LogsTable","currentView","setCurrentView","selectedSources","setSelectedSources","selectedLevels","setSelectedLevels","searchResults","setSearchResults","searchString","setSearchString","search","newData","slice","add","setView","view","setItem","unfiltered","sources","curr","Set","resultData","podNames","split","podName","startsWith","_","countBy","levelItem","selectLogs","state","logStreamState","selectLogLevels","logLevels","selectLogLevelOccurrences","logLevelOccurrences","TIME_PREFERENCE_NAME","chartLabels","getInitialTimeSelection","getUserTimePreference","ElapsedCard","elapsed","task_name","seconds","ProgressCard","progress","hoverBorderColor","cutoutPercentage","percent","num_bars","bar_len","currentRequest","SpeedCard","speed","history","maxValue","minValue","min","getChartOptions","difference","bottom","left","tension","suggestedMax","getChartConfig","primary","newChartData","unit","BarChartCard","currentTab","setCurrentTab","callbacks","tooltipItem","xLabel","datasetIndex","formatBytes","afterLabel","toFixed","d","sent","pointBackgroundColor","pointHoverBackgroundColor","received","getChartData","newOptions","sm","active","QueriesPerSecondCard","qps","selectTaskData","taskState","taskData","TaskView","Container","xl","QueriesPerSecond","messages","bytes","lastUpdate","lastUpdateChart","baseOptions","advancedOptions","FormItem","colSpan","selectSettings","SettingsCard","updates","setUpdates","changeSetting","setting","newUpdates","form","aria-controls","aria-expanded","updateSettings","SettingsView","Settings","ActionItemContainer","ActionItemTitle","span","ActionButton","button","HubOverviewAction","overviewAction","buttonLabel","buttonAction","HubOverviewActionsContainer","useHistory","hubOverviewActionsData","SubTitle","HubImagesListPreview","HubView","useRouteMatch","ConnectionIndicator","show","TitleConnectionIndicator","DeleteFlowButton","Delete","FlowSelection","showNewFlowModal","selectFlows","FlowSelectionMenu","SelectedFlowHeader","FlowTap","selected","FlowHeader","FlowName","userFlows","exampleFlows","currentFlow","ButtonGroup","Button","PlayButton","CommandBar","importChart","copyChart","exportImage","Play","Stop","Save","Upload","marginLeft","marginTop","Yaml","ChartNodeElement","NodePort","NodePortTop","Handle","NodePortBottom","Position","Top","Bottom","ChartNode","flowType","selectSelectedFlow","onDoubleClick","SidebarItem","draggable","onDragStart","event","dataString","dataTransfer","setData","effectAllowed","dedaultPods","yaml_path","parallel","read_only","timeout_ready","separated_workspace","ReadOnly","PodMenu","defaultPods","properties","FlowChartSidebar","readonly","nodeTypes","FlowChart","reactFlowInstance","setReactFlowInstance","reactFlowWrapper","onConnect","onElementsRemove","element","isEdge","isNode","onLoad","_reactFlowInstance","onDrop","preventDefault","reactFlowBounds","getBoundingClientRect","DOMRect","parse","getData","project","clientX","clientY","top","onDragOver","dropEffect","onNodeDragStop","nodesDraggable","FlowViewContainer","dashboardRoutes","IconSidebar","setSelectedTime","getLogLevelCharts","logLevelCharts","setLogLevelCharts","currentDate","newCharts","timeSelection","_index","lastLog","time","selectRerender","selectConnectionStatus","selectSelectedFlowId","selectFlowArguments","copyChartAsYAML","alert","showOverlay","setShowOverlay","showCaptureOverlay","extension","chartContainer","querySelector","captureOverlay","classList","canvasParams","foreignObjectRendering","logging","scrollX","scrollY","scale","html2canvas","then","toDataURL","getElementById","setAttribute","click","Sidebar","deleteSelection","GoogleAnalytics","initialize","REACT_APP_GAID","withTracker","WrappedComponent","trackPage","page","set","pageview","BASENAME","REACT_APP_BASENAME","HOC","this","pathname","prevProps","currentPage","nextPage","FallbackPage","resetErrorBoundary","subtitle","Hub","basename","routes","route","FallbackComponent","SHOW_ERROR","initialGlobalState","user","banner","loading","menuVisible","navItems","iconName","matches","processes","App","PERSIAN_GREEN","GOLDEN_TANOI","secondary","tagBackground","Sentry","dsn","integrations","Integrations","BrowserTracing","tracesSampleRate","ReactDOM","NavbarSpacer","reconnect","pill","NavLogo","lineHeight","MainNavbar","showLogo","navbar","SidebarMainNavbar","SidebarNavItem","useLocation","match","tag","RouteNavLink","SidebarNavItems","MainSidebar","sidebarNavItems","classes","classNames","size","MainFooter","menuItems","copyright","loggerEnabled","enableLogger","disableLogger","defaultProps","contained","CookiesBanner","acceptCookies","InfoToast","Toast","closeButton","ConnectionToast","overlay","right","transform","PasteYAML","inputRef","open","importYAML","ariaHideApp","isOpen","contentLabel","shouldCloseOnOverlayClick","onRequestClose","closeTimeoutMS","Group","Label","as","rows","WriteReviewModal","submitReview","hiddenKeys","LogDetails","CloseModal","CreateOptionsContainer","CreateOption","CreateOptionAdd","fontSize","marginBottom","OptionName","NewFlow","exampleFlowsKeyEntryPairs","selectExampleFlowsKeyEntryPairs","handleAction","action","exampleFlowsKeyEntryPair","alignItems","justifyContent","PodEditContainer","Header1","header","Header2","PropertyTable","Input","DeleteButton","PodEditComponent","searchQuery","setSearchQuery","filteredArguments","setFilteredArguments","results","argument","_updateLabel","_updateNodeProp","IconSidebarLayout","selectModal","selectModalParams","selectLoading","selectBanner","selectMenuState","selectSidebarItems","selectUser","acceptedCookies","setAcceptedCookies","_closeModal","_toggleSidebar","children","logOut","storeCopy","yamlString","WriteReview","PodEdit","hideSidebarToggle","displayName","emails","photos","profileUrl","provider","username","_json","_raw","flowKeyEntryPair","pokedex","flower","southpark","blankFlow","initialState","storedFlows","isEmpty","_userFlow","getUserFlows","parsed","parseYAML","isConnected","getExampleFlows","tooltipConfig","tooltipsGlobal","showTooltip","toogleOffWhenClicked","_createNewFlow","draft","customYAML","prefixString","userFlowNumbers","userFlow","sort","b","largestNumber","flowReducer","produce","omit","nonExampleFlows","idFirstNonExampleFlow","selectedFlow","oldNodeIndex","findIndex","oldNode","newNode","withoutLinksAndNode","newLink","linkId","toSave","saveFlowsToStorage","hubReducer","FETCH_HUB_IMAGES","FETCH_HUB_IMAGES_SUCCESS","FETCH_HUB_IMAGES_FAILURE","initialHubState","settingsReducer","logStreamReducer","rawLog","newLogSourceValue","logSources","newLogLevelValue","newLogLevelOccurrence","getInitialLogLevel","_handleNewLog","intialLogStreamState","globalReducer","initialTaskState","taskReducer","taskEvent","speed_unit","bytes_recv","bytes_sent","msg_recv","msg_sent","num_reqs","obj","msgData","bytesData","parseFloat","shift","formatSeconds","_handleNewTaskEvent","rootReducer","combineReducers","hubState","globalState","createStore","composeWithDevTools","applyMiddleware","thunk","jinadInstance","baseURL","statusResult","jina","parseDaemonFlowMethodOptions","podResult","peaResult","getDaemonStatus","daemonStatus","getWorkspaces","workspaces","createWorkspace","files","formData","FormData","file","append","headers","workspace","deleteWorkspace","delete","deleteAllWorkspaces","getArgumentsForFlow","terminateAllFlows","numRetries","retryTimeout","origin","socket","WebSocket","send","getArgumentsForPod","getPod","podId","startPod","podArgs","terminatePod","terminateAllPods","getArgumentsForPea","getPea","peaId","startPea","peaArgs","terminatePea","terminateAllPeas","string","boolean","integer","customProperties","yamlSTR","yamlStrWithoutTag","test","join","YAML","Error","chart","chartWith","podArguments","childParentsMap","child","arr","podProperties","argName","propValue","possibleArguments","decodePropValue","output","minute","hour","numBytes","MAX_CHART_TICKS","emptyItem","step","currentInterval","ceil","now","cloneDeep","j","occurrence","logEntry","lastTimestamp","tagsToHide","rotate","keyframes","Spinner","InnerSpinner","rotateAndHide","OuterSpinner","SpinnerContainer","defaultParams","fetchHubImagesSuccess","fetchHubImagesFailure","ImageLink"],"mappings":"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","file":"static/js/main.c5c32076.chunk.js","sourcesContent":["// @ts-nocheck\nimport { FlowChart, NodeData } from \"../redux/flows/flows.types\"\nimport { Edge, Node, XYPosition } from \"react-flow-renderer/dist/types\"\nconst settings = require(\"./../settings\")\n\nexport const createNode = (\n  id: string,\n  data?: NodeData,\n  position: XYPosition\n): Node => {\n  return {\n    id,\n    type: id === \"gateway\" ? \"gateway\" : \"pod\",\n    data,\n    position,\n  }\n}\n\nexport const createLink = (source: string, target: string): Edge => ({\n  id: `e-${source}-to-${target}`,\n  source,\n  target,\n  type: \"step\",\n})\n\n//todo type this properly\ntype ParsedYAML = {\n  pods: Array | { [key: string]: any }\n  with?: {\n    board?: {\n      canvas?: { [key: string]: { x: number; y: number } }\n    }\n  }\n  version?: string\n}\n\nexport const formatForFlowchart = (data: ParsedYAML): FlowChart => {\n  let pods = data.pods\n  let canvas = data.with?.board?.canvas\n\n  const formatted: FlowChart = {\n    with: data.with,\n  }\n\n  let nodes: Node[] = []\n  let links: Edge[] = []\n\n  if (data.version?.includes(\"1\")) {\n    let podMap = {}\n    pods.forEach((pod) => {\n      const id = pod.name\n      delete pod.name\n      podMap[id] = {\n        ...pod,\n      }\n    })\n    pods = podMap\n  }\n\n  if (!pods.gateway) {\n    pods = {\n      gateway: null,\n      ...pods,\n    }\n  }\n\n  let prevNode\n  Object.keys(pods).forEach((id) => {\n    const pod = pods[id] || {}\n\n    let node: Node = createNode(id, pod, {})\n\n    node.data.label = id\n\n    if (prevNode && !node.data.needs && id !== \"gateway\") {\n      !node.data.needs && (node.data.needs = [])\n      node.data.needs.push(prevNode)\n    }\n\n    if (node?.data?.needs)\n      node.data.needs.forEach((parent) => links.push(createLink(parent, id)))\n\n    if (canvas && canvas[id]) {\n      const { x, y } = canvas[id]\n      node.position = { x: parseInt(x), y: parseInt(y) }\n    }\n    nodes.push(node)\n    prevNode = id\n  })\n\n  const depthPopulation = {} //how many nodes at each depth\n  const offsetX = settings.nodeOffset.x\n  const offsetY = settings.nodeOffset.y\n\n  //fallback: if no position encoded on canvas portion of YAML, infer the position using depth and order\n  nodes.forEach((node) => {\n    const depth = getNodeDepth(nodes, node)\n    node.data.depth = depth\n\n    depthPopulation[depth] === undefined\n      ? (depthPopulation[depth] = 1)\n      : (depthPopulation[depth] = depthPopulation[depth] + 1)\n\n    if (!node.position.x)\n      node.position = {\n        y: depth * offsetY + offsetY,\n        x: depthPopulation[depth] * offsetX,\n      }\n  })\n\n  formatted.elements = [...nodes, ...links]\n\n  return formatted\n}\n\nfunction getNodeDepth(nodes: Node[], node: Node): number {\n  const parents = node.data.needs\n\n  if (!parents || parents.length === 0) return 0\n  else {\n    const parentDepthList = parents.map((parentId) => {\n      const parent = nodes.find((node) => node.id === parentId)\n      let depth\n      if (parent.data.depth) depth = parent.data.depth\n      else depth = getNodeDepth(nodes, parent)\n      return depth\n    })\n    const max = Math.max(...parentDepthList) + 1\n    return max\n  }\n}\n","import { SettingsState } from \"./settings.types\";\n\nexport const defaultPort = \"5000\";\nexport const defaultHost = \"http://localhost\";\n\nexport const UPDATE_SETTINGS = \"UPDATE_SETTINGS\";\n\nexport const intialSettings: SettingsState = {\n  settings: {\n    host: localStorage.getItem(\"preferences-host\") || defaultHost,\n    port: localStorage.getItem(\"preferences-port\") || defaultPort,\n    log: localStorage.getItem(\"preferences-log\") || \"/stream/log\",\n    profile: localStorage.getItem(\"preferences-profile\") || \"/stream/profile\",\n    yaml: localStorage.getItem(\"preferences-yaml\") || \"/data/yaml\",\n    shutdown:\n      localStorage.getItem(\"preferences-shutdown\") || \"/action/shutdown\",\n    ready: localStorage.getItem(\"preferences-ready\") || \"/status/ready\",\n  },\n};\n","import React, { ReactNode } from \"react\";\nimport { Card, Row, Col } from \"react-bootstrap\";\n\ntype Props = {\n  title: ReactNode;\n  content: string;\n  icon: string;\n  theme: string;\n  link: string;\n  dataName: string;\n};\n\nfunction HelpCard({ title, content, icon, theme, link, dataName }: Props) {\n  return (\n    <a\n      className=\"unstyled-link\"\n      href={link}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      data-name={dataName}\n    >\n      <Card className=\"h-100\">\n        <Card.Body className=\"pt-3\">\n          <Row className=\"align-items-center\">\n            <Col xs=\"8\">\n              <h4>{title}</h4>\n            </Col>\n            <Col xs=\"4\">\n              <h1 className=\"float-right\">\n                <span className={`${icon} log-${theme}`} />\n              </h1>\n            </Col>\n          </Row>\n          <Row>\n            <Col>{content}</Col>\n          </Row>\n        </Card.Body>\n      </Card>\n    </a>\n  );\n}\n\nexport { HelpCard };\n","import React from \"react\";\nimport { Container, Row, Col } from \"shards-react\";\nimport { HelpCard } from \"../components/Common/HelpCard\";\nimport { PageTitle } from \"../components/Common/PageTitle\";\n\nconst NotFound = () => (\n  <Container fluid className=\"main-content-container px-4\" data-name=\"helpPage\">\n    <Row noGutters className=\"page-header mb-4\">\n      <PageTitle title=\"Resources\" className=\"text-sm-left mb-3\" />\n    </Row>\n    <Row>\n      <Col md=\"4\" lg=\"3\" className=\"mb-4\">\n        <HelpCard\n          title=\"Jina 101\"\n          content=\"Understanding all key concepts of Jina in 3 minutes!\"\n          link=\"https://101.jina.ai\"\n          icon=\"fas fa-egg\"\n          theme=\"warning\"\n          dataName=\"jina-101-card\"\n        />\n      </Col>\n      <Col md=\"4\" lg=\"3\" className=\"mb-4\">\n        <HelpCard\n          title=\"Jina Docs\"\n          content=\"The best way to learn Jina in depth.\"\n          link=\"https://docs.jina.ai\"\n          icon=\"fas fa-book\"\n          theme=\"primary\"\n          dataName=\"jina-docs-card\"\n        />\n      </Col>\n      <Col md=\"4\" lg=\"3\" className=\"mb-4\">\n        <HelpCard\n          title='Jina \"Hello World\"'\n          content=\"A simple demo of image neural search for Fashion-MNIST.\"\n          link=\"https://github.com/jina-ai/jina#jina-hello-world-\"\n          icon=\"fas fa-globe-europe\"\n          theme=\"error\"\n          dataName=\"jina-hello-world-card\"\n        />\n      </Col>\n      <Col md=\"4\" lg=\"3\" className=\"mb-4\">\n        <HelpCard\n          title={\n            <span>\n              Visit us on <span className=\"text-nowrap\">Github!</span>\n            </span>\n          }\n          content=\"Explore more exciting open-source projects from us.\"\n          link=\"https://opensource.jina.ai\"\n          icon=\"fab fa-github\"\n          theme=\"info\"\n          dataName=\"jina-github-card\"\n        />\n      </Col>\n      <Col md=\"4\" lg=\"3\" className=\"mb-4\">\n        <HelpCard\n          title=\"We are hiring!\"\n          content=\"Join us and build the next neural search eco system!\"\n          link=\"https://www.linkedin.com/company/jinaai/jobs/\"\n          icon=\"fab fa-linkedin\"\n          theme=\"linkedin\"\n          dataName=\"jina-linkedin-card\"\n        />\n      </Col>\n    </Row>\n  </Container>\n);\n\nexport default NotFound;\n","export const copyToClipboard = (str: string) => {\n  const temp = document.createElement(\"textarea\")\n  temp.value = str\n  document.body.appendChild(temp)\n  temp.select()\n  document.execCommand(\"copy\")\n  document.body.removeChild(temp)\n  return\n}\n\nexport const timeout = (ms: number) => {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n","import { HANDLE_NEW_LOG, SHOW_LOG_INDEX } from \"./logStream.constants\"\nimport {\n  handleNewLogAction,\n  showLogAtIndexAction,\n  RawLog,\n} from \"./logStream.types\"\nimport { ThunkAction } from \"redux-thunk\"\nimport { Action } from \"redux\"\n\nimport store from \"..\"\nimport { showBanner } from \"../global/global.actions\"\nimport logger from \"../../logger\"\nimport jinadClient from \"../../services/jinad\"\n\nexport function showLogAtIndex(logIndex: number): showLogAtIndexAction {\n  return {\n    type: SHOW_LOG_INDEX,\n    payload: logIndex,\n  }\n}\n\nexport function handleNewLog(log: RawLog): handleNewLogAction {\n  return {\n    type: HANDLE_NEW_LOG,\n    payload: log,\n  }\n}\n\nexport function initLogStream(\n  workspace_id: string,\n  flow_id: string\n): ThunkAction<void, any, unknown, Action<string>> {\n  return async function (dispatch) {\n    function handleConnection({\n      connected,\n      message,\n    }: {\n      connected: boolean\n      message: string\n    }) {\n      if (!connected) return dispatch(showBanner(message, \"error\") as any)\n    }\n\n    let flowResult = await jinadClient.waitForFlow(workspace_id, flow_id)\n\n    if (flowResult.status === \"error\")\n      return dispatch(showBanner(flowResult.message, \"error\") as any)\n\n    let logsResult = await jinadClient.getLogs(workspace_id, flow_id)\n\n    if (logsResult.status === \"error\") {\n      if (logsResult.message)\n        dispatch(showBanner(logsResult.message, \"error\") as any)\n      return\n    }\n\n    function handleLog(log: RawLog) {\n      dispatch(handleNewLog(log))\n    }\n\n    const { logs } = logsResult\n\n    logger.log(\"got logs:\", logs)\n\n    logs.forEach(handleLog)\n\n    const settings = store.getState().settingsState.settings\n    jinadClient.listenForLogs(\n      workspace_id,\n      flow_id,\n      settings,\n      handleConnection,\n      handleLog\n    )\n  }\n}\n","import axios from \"axios\";\nimport * as queryString from \"query-string\";\nimport { FilterParams } from \"../components/Hub/HubFilters\";\n\nconst HUB_API_ENDPOINT = process.env.REACT_APP_HUB_API!;\n\nexport const getHubImages = async (filters: FilterParams) => {\n  const response = await axios.get(HUB_API_ENDPOINT + \"/images\", {\n    params: filters,\n    paramsSerializer: (params) => serializeQueryParams(params),\n  });\n\n  return response.data;\n};\n\nexport const getDocumentationHTML = async (url: string) => {\n  const rawMarkdownURL = getRawMarkdownURL(url);\n  const rawMarkdownResponse = await axios.get(rawMarkdownURL);\n  const HTMLResponse = await axios.post(\"https://api.github.com/markdown\", {\n    text: rawMarkdownResponse.data,\n  });\n\n  return HTMLResponse.data;\n};\n\nexport const serializeQueryParams = (params: Record<string, any>) =>\n  queryString.stringify(params, { arrayFormat: \"comma\", skipNull: true });\n\nexport const getRawMarkdownURL = (url: string): string => {\n  const defaultRawMarkdownURL =\n    \"https://raw.githubusercontent.com/jina-ai/jina-hub/master/README.md\";\n\n  return url.includes(\"/blob/master/\")\n    ? url.replace(\"github\", \"raw.githubusercontent\").replace(\"/blob\", \"\")\n    : defaultRawMarkdownURL;\n};\n","/* eslint jsx-a11y/anchor-is-valid: 0 */\n\nimport React from \"react\";\nimport { Container, Row, Col, Card, CardBody } from \"shards-react\";\n\nclass Login extends React.Component {\n  componentDidMount = () => {\n    let hash = window.location.href;\n    const codeIndex = hash.indexOf(\"code\");\n    if (codeIndex > 0) {\n    }\n  };\n  render = () => {\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        <Row noGutters className=\"h-100\">\n          <Col lg=\"3\" md=\"5\" className=\"auth-form mx-auto\">\n            <Card>\n              <CardBody>\n                <img\n                  className=\"auth-form__logo d-table mx-auto mb-3\"\n                  src=\"/jina-light.svg\"\n                  style={{ maxWidth: \"100px\" }}\n                  alt=\"Jina\"\n                />\n                <h5 className=\"auth-form__title text-center mb-4\">Log in</h5>\n                <a\n                  id=\"github-button\"\n                  className=\"btn btn-block btn-social btn-github\"\n                >\n                  <i className=\"fab fa-github\"></i> Sign in with GitHub\n                </a>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    );\n  };\n}\n\nexport default Login;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"@emotion/styled\";\n\ntype NavigateButtonProps = {\n  label: string;\n  path: string;\n};\n\nconst NavigationLink = styled(Link)`\n  color: ${(props) => props.theme.palette.mutedText};\n  font-size: 1.25rem;\n  width: 20%;\n  padding: 1rem;\n  &:hover {\n    text-decoration: none;\n  }\n`;\n\nconst NavigateButton = ({ label, path }: NavigateButtonProps) => {\n  return (\n    <>\n      <NavigationLink to={path}> {label} </NavigationLink>\n    </>\n  );\n};\n\nexport default NavigateButton;\n","import React from \"react\";\nimport { Card, CardBody } from \"shards-react\";\nimport { HubImage } from \"../../redux/hub/hub.types\";\nimport styled from \"@emotion/styled\";\nimport { Tag } from \"./ImageCard\";\n\ntype Props = {\n  image: HubImage;\n};\n\nconst SectionHeading = styled.div`\n  font-size: 1.25rem;\n  font-weight: 700;\n  color: ${(props) => props.theme.palette.headerTextColor};\n`;\nconst DetailsSection = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nconst Platform = styled(Tag)`\n  background-color: ${(props) => props.theme.palette.tagPlatformBackground};\n`;\n\nexport default function ImageDetails({ image }: Props) {\n  let { keywords, platform, author } = image;\n  let dockerCommand = image[\"docker-command\"];\n  return (\n    <Card className=\"readme-container mb-4\">\n      <CardBody className=\"pt-0 pb-2\">\n        <DetailsSection>\n          <SectionHeading>Tags</SectionHeading>\n          <div>\n            {keywords.map((keyword) => (\n              <Tag data-name=\"hubImageTags\" key={keyword}>\n                {keyword}\n              </Tag>\n            ))}\n          </div>\n        </DetailsSection>\n        <DetailsSection>\n          <SectionHeading>Platform</SectionHeading>\n          <div>\n            {platform.map((p) => (\n              <Platform data-name=\"hubImageTags\" key={p}>\n                {p}\n              </Platform>\n            ))}\n          </div>\n        </DetailsSection>\n        <DetailsSection>\n          <SectionHeading>Docker Pull Command</SectionHeading>\n          <div>{dockerCommand}</div>\n        </DetailsSection>\n        <DetailsSection>\n          <SectionHeading>Owner</SectionHeading>\n          <div>{author}</div>\n        </DetailsSection>\n      </CardBody>\n    </Card>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Card, CardHeader, CardBody } from \"shards-react\";\nimport { getDocumentationHTML } from \"../../services/hubApi\";\nimport SpinningLoader from \"../Common/SpinningLoader\";\n\ntype Props = {\n  documentation: string;\n};\n\nexport default function ReadMe({ documentation }: Props) {\n  let [readme, setReadme] = useState(\"\");\n  useEffect(() => {\n    (async () => {\n      const readmeHTML = await getDocumentationHTML(documentation);\n      setReadme(readmeHTML);\n    })();\n  }, [documentation]);\n  return (\n    <Card className=\"readme-container mb-4\">\n      <CardHeader className=\"border-bottom d-flex flex-row\">\n        <h6 className=\"m-0 d-inline-block\">README.md</h6>\n        <div className=\"flex-fill d-inline-block\" />\n        <a\n          href={documentation}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"cursor-pointer text-primary\"\n        >\n          <i className=\"fab fa-github\"></i> View on GitHub\n        </a>\n      </CardHeader>\n      <CardBody>\n        {readme ? (\n          <div\n            className=\"markup\"\n            dangerouslySetInnerHTML={{ __html: readme }}\n          />\n        ) : (\n          <SpinningLoader />\n        )}\n      </CardBody>\n    </Card>\n  );\n}\n","import styled from \"@emotion/styled\";\n\nexport const Title = styled.h2`\n  color: ${(props) => props.theme.palette.headerTextColor};\n  padding: 1rem;\n`;\nexport const Paragraph = styled.p`\n  color: ${(props) => props.theme.palette.headerTextColor};\n  padding: 1rem;\n`;\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"@emotion/styled\";\nimport {\n  selectHubImages,\n  selectIsHubImagesLoading,\n} from \"../redux/hub/hub.selectors\";\nimport { fetchHubImages } from \"../redux/hub/hub.actions\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { Card } from \"shards-react\";\nimport ImageDetails from \"../components/Hub/ImageDetails\";\nimport Readme from \"../components/Hub/Readme\";\nimport SpinningLoader from \"../components/Common/SpinningLoader\";\nimport { Title, Paragraph } from \"../components/Common/Typography\";\n\nconst ImageContainer = styled.div`\n  padding: 0 1.75rem;\n`;\nconst PackageView = () => {\n  const dispatch = useDispatch();\n  let { packageId } = useParams<{ packageId: string }>();\n  const hubImages = useSelector(selectHubImages);\n  const isHubImagesLoading = useSelector(selectIsHubImagesLoading);\n  const image = hubImages[parseInt(packageId, 10)];\n  if (hubImages.length === 0 && !isHubImagesLoading) {\n    dispatch(fetchHubImages());\n  }\n  return (\n    <>\n      {\" \"}\n      {hubImages.length === 0 ? (\n        <SpinningLoader />\n      ) : (\n        <ImageContainer>\n          <Row>\n            <Col md=\"8\">\n              <Card>\n                <Title data-name=\"imageOverviewTitle\">{image.name}</Title>\n                <Paragraph data-name=\"imageOverviewDescription\">\n                  {image.description}\n                </Paragraph>\n              </Card>\n              <Readme documentation={image.documentation} />\n            </Col>\n            <Col md=\"4\">\n              <ImageDetails image={image} />\n            </Col>\n          </Row>\n        </ImageContainer>\n      )}\n    </>\n  );\n};\n\nexport default PackageView;\n","import React, { useState } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { useTheme } from \"@emotion/react\";\n\nexport type FilterMap = { [key: string]: boolean };\nexport type FilterParams = {\n  kind: string[];\n  keywords: string[];\n};\nexport type Filter = {\n  filterLabel: string;\n  values: FilterMap;\n};\ntype HubFilterProps = {\n  filters: Filter[];\n  setFilters: (filters: Filter[]) => void;\n  getHubImages: (filters: FilterParams) => void;\n};\n\nexport const getSelectedFilters = (filters: Filter[]) => {\n  return {\n    kind: getCheckedFilterValues(filters[0]),\n    keywords: getCheckedFilterValues(filters[1]),\n  };\n};\n\nexport const getCheckedFilterValues = (filter: Filter) => {\n  return Object.keys(filter.values).reduce((acc, key) => {\n    let filterValue = filter.values;\n    return filterValue[key] ? [...acc, key] : acc;\n  }, [] as string[]);\n};\n\nconst FiltersTitle = styled.div`\n  font-weight: 500;\n  font-size: 1.25rem;\n`;\n\nconst FiltersContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n// Hide checkbox but keep it in the DOM for accessibility\nconst Checkbox = styled.input`\n  margin-right: -1rem;\n  opacity: 0;\n`;\ntype CheckboxLabelProps = {\n  checked: boolean;\n  highlightColor: string;\n};\nconst CheckboxLabel = styled.label`\n  border: ${(props: CheckboxLabelProps) =>\n    props.checked ? `1px solid ${props.highlightColor}` : \"none\"};\n  border-radius: 0.25rem;\n  padding: 0.25rem 0.5rem;\n`;\n\nconst HubFilters = ({ filters, setFilters, getHubImages }: HubFilterProps) => {\n  const handleFilterChange = (\n    filterCategoryIndex: number,\n    key: string,\n    value: boolean\n  ) => {\n    filters[filterCategoryIndex].values[key] = value;\n    setFilters(filters);\n    getHubImages(getSelectedFilters(filters));\n  };\n  return (\n    <div data-name=\"hubImagesFilter\">\n      {filters &&\n        filters.map((filter: Filter, filterCategoryIndex: number) => (\n          <div key={filterCategoryIndex}>\n            <FiltersTitle>{filter.filterLabel}</FiltersTitle>\n            <FiltersContainer>\n              {Object.keys(filter.values).map((key) => (\n                <FilterCheckbox\n                  filter={filter}\n                  value={filter.values[key]}\n                  key={key}\n                  label={key}\n                  filterCategoryIndex={filterCategoryIndex}\n                  handleFilterChange={handleFilterChange}\n                />\n              ))}\n            </FiltersContainer>\n          </div>\n        ))}\n    </div>\n  );\n};\n\ntype FilterCheckboxProps = {\n  filter: Filter;\n  value: boolean;\n  label: string;\n  filterCategoryIndex: number;\n  handleFilterChange: (\n    filterCategoryIndex: number,\n    key: string,\n    value: boolean\n  ) => void;\n};\n\nconst FilterCheckbox = ({\n  filter,\n  value,\n  label,\n  filterCategoryIndex,\n  handleFilterChange,\n}: FilterCheckboxProps) => {\n  const [checked, setChecked] = useState(value);\n  const theme = useTheme();\n  const { highlight } = theme.palette;\n  const handleFilterSelect = () => {\n    setChecked(!checked);\n    handleFilterChange(filterCategoryIndex, label, !checked);\n  };\n  return (\n    <CheckboxLabel checked={checked} highlightColor={highlight || \"cyan\"}>\n      <Checkbox\n        type=\"checkbox\"\n        checked={checked}\n        onChange={() => handleFilterSelect()}\n      />\n      {label}\n    </CheckboxLabel>\n  );\n};\n\nexport default HubFilters;\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { fetchHubImages } from \"../../redux/hub/hub.actions\";\nimport {\n  selectHubImages,\n  selectIsHubImagesLoading,\n} from \"../../redux/hub/hub.selectors\";\nimport { HubImage } from \"../../redux/hub/hub.types\";\nimport ImageCard from \"./ImageCard\";\nimport HubFilters from \"./HubFilters\";\nimport SpinningLoader from \"../Common/SpinningLoader\";\nimport { Filter, FilterMap } from \"./HubFilters\";\n\nexport const removeDuplicates = (arrayWithDuplicates: string[]): string[] =>\n  arrayWithDuplicates.filter((e, i) => {\n    return arrayWithDuplicates.indexOf(e) === i;\n  });\n\nexport const convertArrayToFilterObject = (\n  array: string[],\n  filter: Filter\n): FilterMap =>\n  array.reduce(\n    (acc, f) => ({\n      ...acc,\n      [f]: (filter?.values && filter.values[f]) || false,\n    }),\n    {} as FilterMap\n  );\n\nexport const getImageFilters = (images: HubImage[], filters: Filter[]) => {\n  return [\n    {\n      filterLabel: \"Type of image\",\n      values: convertArrayToFilterObject(\n        removeDuplicates(\n          images.reduce((acc, image) => [...acc, image.kind], [] as string[])\n        ),\n        filters[0]\n      ),\n    },\n    {\n      filterLabel: \"Key domain of the image\",\n      values: convertArrayToFilterObject(\n        removeDuplicates(\n          images.reduce(\n            (acc, image) => [...acc, ...image.keywords],\n            [] as string[]\n          )\n        ),\n        filters[1]\n      ),\n    },\n  ];\n};\n\nconst HubImagesList = () => {\n  const dispatch = useDispatch();\n  const hubImages = useSelector(selectHubImages);\n  const isHubImagesLoading = useSelector(selectIsHubImagesLoading);\n  let [filters, setFilters] = useState([] as Filter[]);\n  if (hubImages.length === 0 && !isHubImagesLoading) {\n    dispatch(fetchHubImages());\n  }\n\n  useEffect(() => {\n    hubImages && setFilters(getImageFilters(hubImages, filters));\n  }, [hubImages]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const getHubImages = useCallback(\n    (filters) => {\n      dispatch(fetchHubImages(filters));\n    },\n    [dispatch]\n  );\n\n  return (\n    <>\n      {isHubImagesLoading ? (\n        <SpinningLoader />\n      ) : (\n        <Row>\n          <Col md=\"2\">\n            <HubFilters\n              filters={filters}\n              setFilters={setFilters}\n              getHubImages={getHubImages}\n            />\n          </Col>\n          <Col md=\"10\">\n            <Row data-name=\"hubImagesList\">\n              {hubImages.map((image, index) => (\n                <Col\n                  key={`${image.name}.${image.version}.${image[\"jina-version\"]}`}\n                  md=\"4\"\n                  className=\"mb-4\"\n                >\n                  <ImageCard image={image} index={index} />\n                </Col>\n              ))}\n            </Row>\n          </Col>\n        </Row>\n      )}\n    </>\n  );\n};\n\nexport default HubImagesList;\n","import { saveAs } from \"file-saver\";\n\nfunction handleErrorMessage(msg: any, url: any, line: any) {\n  // @ts-ignore\n  logger.log(\"window.onerror - ERROR\", msg, url, `line: ${line}`);\n}\n\nfunction pushLog(data: any) {\n  (window as any).logs.push(data);\n}\n\nfunction clearLogs() {\n  (window as any).logs = [];\n}\n\nconst logger = {\n  log: function (...arg: any) {\n    if (!(window as any).logsEnabled) return;\n    let args = [...(arguments as any)];\n    console.log(...args);\n    pushLog(args);\n  },\n  isEnabled: function () {\n    return (window as any).logsEnabled;\n  },\n  enable: function () {\n    const _navigator: any = {};\n    for (let i in window.navigator)\n      _navigator[i] = (window as any).navigator[i];\n    clearLogs();\n    pushLog(_navigator);\n    window.addEventListener(\"error\", handleErrorMessage as any);\n    (window as any).logsEnabled = true;\n  },\n  disable: function () {\n    window.removeEventListener(\"error\", handleErrorMessage as any);\n    (window as any).logsEnabled = false;\n  },\n  setFormat: function (format = \"json\") {\n    (window as any).logsFormat = format;\n  },\n  exportLogs: function () {\n    const format = (window as any).logsFormat || \"json\";\n    const logs = (window as any).logs;\n    let content = \"[\\n\";\n    for (let i = 0; i < logs.length; ++i) {\n      let args = logs[i];\n      content += JSON.stringify(args) + `${i < logs.length - 1 ? \",\" : \"\"}\\n`;\n    }\n    content += \"]\";\n\n    let filename = `jina-dashboard-debug-output-${new Date()}.${format}`;\n    let blob = new Blob([content], { type: \"text,plain;charset=utf-8\" });\n    saveAs(blob, filename);\n  },\n};\n\nexport default logger;\n","import axios from \"axios\";\nimport {\n  FlowArgument,\n  FlowArguments,\n  FlowArgumentType,\n} from \"../redux/flows/flows.types\";\nimport { JinaApiMethodOption, JinaApiResponse } from \"./services.types\";\n\nconst JINA_API_ENDPOINT = process.env.REACT_APP_JINA_API!;\n\nexport const getJinaFlowArguments = async (): Promise<FlowArguments> => {\n  let response = await axios.get(JINA_API_ENDPOINT + \"/latest.json\");\n  let data: JinaApiResponse = response.data;\n  let flowArguments: FlowArguments = {\n    flow: parseFlowMethodOption(\n      data.methods.find((m) => m.name === \"flow\")?.options\n    ),\n    pea: parseFlowMethodOption(\n      data.methods.find((m) => m.name === \"pea\")?.options\n    ),\n    pod: parseFlowMethodOption(\n      data.methods.find((m) => m.name === \"pod\")?.options\n    ),\n    version: data.version,\n  };\n  return flowArguments;\n};\n\nconst typeMap: { [key: string]: FlowArgumentType } = {\n  str: \"string\",\n  bool: \"boolean\",\n  int: \"integer\",\n  \"typing.List[str]\": \"string\",\n};\n\nexport const parseFlowMethodOption = (\n  options?: JinaApiMethodOption[]\n): FlowArgument[] => {\n  if (!options) return [];\n  return options.map(\n    ({ name, help: description, default: defaultValue, type: itemType }) => {\n      const type = typeMap[itemType];\n      if (typeof defaultValue === \"undefined\" || defaultValue === null)\n        return { name, description, type };\n      return { name, description, defaultValue, type };\n    }\n  );\n};\n","import {\n  CLOSE_MODAL,\n  FETCH_ARGUMENTS_FROM_API,\n  FETCH_ARGUMENTS_FROM_DAEMON,\n  HANDLE_CONNECTION_STATUS,\n  HIDE_BANNER,\n  HIDE_BANNER_TIMEOUT,\n  SHOW_BANNER,\n  SHOW_ERROR,\n  SHOW_MODAL,\n  TOGGLE_SIDE_BAR,\n} from \"./global.constants\"\nimport {\n  CloseModalAction,\n  HandleConnectionStatusAction,\n  HideBannerAction,\n  Modal,\n  ShowBannerAction,\n  ShowErrorAction,\n  ShowModalAction,\n  ToggleSidebarAction,\n} from \"./global.types\"\nimport { AppThunk } from \"../index\"\nimport store from \"..\"\nimport jinadClient from \"../../services/jinad\"\nimport { getJinaFlowArguments } from \"../../services/jinaApi\"\nimport { setFlowArguments } from \"../flows/flows.actions\"\nimport logger from \"../../logger\"\n\nexport function handleConnectionStatus(\n  connected: boolean,\n  message: string\n): AppThunk {\n  return function (dispatch) {\n    dispatch(_handleConnectionStatus(connected, message))\n    if (connected) {\n      dispatch(showBanner(message, \"success\"))\n      dispatch(fetchArgumentsFromDaemon())\n    } else {\n      dispatch(fetchArgumentsFromApi())\n    }\n  }\n}\n\nexport function _handleConnectionStatus(\n  connected: boolean,\n  message: string\n): HandleConnectionStatusAction {\n  return {\n    type: HANDLE_CONNECTION_STATUS,\n    payload: {\n      connected,\n      message,\n    },\n  }\n}\n\nexport function fetchArgumentsFromApi(): AppThunk {\n  return async function (dispatch) {\n    dispatch({ type: FETCH_ARGUMENTS_FROM_API })\n    let flowArguments = await getJinaFlowArguments()\n    logger.log(\"loadFlowArgumentsFromApi | flowArguments:\", flowArguments)\n    return dispatch(setFlowArguments(flowArguments))\n  }\n}\n\nexport function fetchArgumentsFromDaemon(): AppThunk {\n  return async function (dispatch) {\n    dispatch({ type: FETCH_ARGUMENTS_FROM_DAEMON })\n    let flowArguments = await jinadClient.getJinaFlowArguments()\n    logger.log(\"loadFlowArgumentsFromDaemon | flowArguments:\", flowArguments)\n    return dispatch(setFlowArguments(flowArguments))\n  }\n}\n\nexport function toggleSidebar(): ToggleSidebarAction {\n  return {\n    type: TOGGLE_SIDE_BAR,\n  }\n}\n\nexport function _showBanner(message: string, theme: string): ShowBannerAction {\n  return {\n    type: SHOW_BANNER,\n    payload: {\n      message,\n      theme,\n    },\n  }\n}\n\nexport function _hideBanner(): HideBannerAction {\n  return {\n    type: HIDE_BANNER,\n  }\n}\n\nexport function showBanner(message: string, theme: string): AppThunk {\n  return function (dispatch) {\n    dispatch(_showBanner(message, theme))\n    setTimeout(() => {\n      dispatch(_hideBanner())\n    }, HIDE_BANNER_TIMEOUT)\n  }\n}\n\nexport function showError(message: string): ShowErrorAction {\n  return {\n    type: SHOW_ERROR,\n    payload: {\n      message,\n    },\n  }\n}\n\nexport function showModal(modal: Modal, modalParams?: any): ShowModalAction {\n  return {\n    type: SHOW_MODAL,\n    payload: {\n      modal,\n      modalParams: modalParams || null,\n    },\n  }\n}\n\nexport function closeModal(): CloseModalAction {\n  return {\n    type: CLOSE_MODAL,\n  }\n}\n\nexport function connectJinaD(): AppThunk {\n  return function (dispatch) {\n    const settings = store.getState().settingsState.settings\n    function onConnectionStatus({\n      connected,\n      message,\n    }: {\n      connected: boolean\n      message: string\n    }) {\n      dispatch(handleConnectionStatus(connected, message))\n    }\n    jinadClient.connect(settings, onConnectionStatus)\n  }\n}\n","import { FlowChart } from \"./flows.types\"\n\nexport const LOAD_FLOW = \"LOAD_FLOW\"\nexport const CREATE_NEW_FLOW = \"CREATE_NEW_FLOW\"\nexport const UPDATE_SELECTED_FLOW = \"UPDATE_SELECTED_FLOW\"\nexport const DUPLICATE_FLOW = \"DUPLICATE_FLOW\"\nexport const ADD_NODE = \"ADD_NODE\"\nexport const DELETE_FLOW = \"DELETE_FLOW\"\nexport const UPDATE_NODE = \"UPDATE_NODE\"\nexport const UPDATE_NODE_DATA = \"UPDATE_NODE_DATA\"\nexport const DELETE_NODE = \"DELETE_NODE\"\nexport const ADD_LINK = \"ADD_LINK\"\nexport const DELETE_LINK = \"DELETE_LINK\"\nexport const RERENDER = \"RERENDER\"\nexport const START_FLOW = \"START_FLOW\"\nexport const STOP_FLOW = \"STOP_FLOW\"\nexport const IMPORT_FLOW = \"IMPORT_FLOW\"\nexport const SET_FLOW_ARGUMENTS = \"SET_FLOW_ARGUMENTS\"\n\nexport const initialFlowChart: FlowChart = {\n  elements: [\n    {\n      id: \"gateway\",\n      type: \"gateway\",\n      data: { label: \"gateway\" },\n      position: { x: 629, y: 72 },\n    },\n  ],\n}\n","export const nodeOffset = {\n  x: 250,\n  y: 150,\n};\n","import {\n  CREATE_NEW_FLOW,\n  DELETE_FLOW,\n  DELETE_NODE,\n  UPDATE_NODE,\n  DUPLICATE_FLOW,\n  LOAD_FLOW,\n  RERENDER,\n  UPDATE_SELECTED_FLOW,\n  IMPORT_FLOW,\n  SET_FLOW_ARGUMENTS,\n  ADD_NODE,\n  ADD_LINK,\n  DELETE_LINK,\n  UPDATE_NODE_DATA,\n} from \"./flows.constants\"\nimport {\n  CreateNewFlowAction,\n  DeleteFlowAction,\n  DeleteNodeAction,\n  DuplicateFlowAction,\n  FlowState,\n  LoadFlowAction,\n  NodeUpdate,\n  RerenderAction,\n  UpdateNodeAction,\n  UpdateSelectedFlowAction,\n  ImportFlowAction,\n  FlowArguments,\n  SetFlowArgumentsAction,\n  FlowUpdate,\n  NodeId,\n  AddNodeAction,\n  AddLinkAction,\n  DeleteLinkAction,\n  DeleteLinkProps,\n  NodeData,\n  UpdateNodePropertiesAction,\n  NodeDataUpdate,\n  Flow,\n} from \"./flows.types\"\n\nimport { ThunkAction } from \"redux-thunk\"\nimport { Action } from \"redux\"\n\nimport { showBanner } from \"../global/global.actions\"\nimport { initLogStream } from \"../logStream/logStream.actions\"\nimport store from \"..\"\nimport { formatAsYAML } from \"../../helpers\"\nimport logger from \"../../logger\"\nimport jinadClient from \"../../services/jinad\"\nimport { XYPosition } from \"react-flow-renderer/dist/types\"\nimport { ElementId } from \"react-flow-renderer/dist/nocss/types\"\n\nexport function loadFlow(flowId: string): LoadFlowAction {\n  return {\n    type: LOAD_FLOW,\n    payload: flowId,\n  }\n}\n\nexport function createNewFlow(): CreateNewFlowAction {\n  return {\n    type: CREATE_NEW_FLOW,\n  }\n}\n\nexport function setFlowArguments(\n  flowArguments: FlowArguments\n): SetFlowArgumentsAction {\n  return {\n    type: SET_FLOW_ARGUMENTS,\n    payload: flowArguments,\n  }\n}\n\nexport function updateSelectedFlow(\n  flowUpdate: FlowUpdate\n): UpdateSelectedFlowAction {\n  return {\n    type: UPDATE_SELECTED_FLOW,\n    payload: flowUpdate,\n  }\n}\n\nexport function duplicateFlow(flowYAML: string): DuplicateFlowAction {\n  return {\n    type: DUPLICATE_FLOW,\n    payload: flowYAML,\n  }\n}\n\nexport function importFlow(flowYAML: string): ImportFlowAction {\n  return {\n    type: IMPORT_FLOW,\n    payload: flowYAML,\n  }\n}\n\nexport function deleteFlow(flowId: string): DeleteFlowAction {\n  return {\n    type: DELETE_FLOW,\n    payload: flowId,\n  }\n}\n\nexport function addNode(\n  id: string,\n  position: XYPosition,\n  data?: NodeData\n): AddNodeAction {\n  return {\n    type: ADD_NODE,\n    payload: {\n      data,\n      id,\n      position,\n    },\n  }\n}\n\nexport function addLink(\n  source: NodeId,\n  target: NodeId,\n  sourceHandle: ElementId | null,\n  targetHandle: ElementId | null\n): AddLinkAction {\n  return {\n    type: ADD_LINK,\n    payload: {\n      source,\n      target,\n      sourceHandle,\n      targetHandle,\n    },\n  }\n}\n\nexport function deleteLink(deleteLinkProps: DeleteLinkProps): DeleteLinkAction {\n  return {\n    type: DELETE_LINK,\n    payload: deleteLinkProps,\n  }\n}\n\nexport function updateNode(\n  nodeId: string,\n  nodeUpdate: NodeUpdate\n): UpdateNodeAction {\n  return {\n    type: UPDATE_NODE,\n    payload: { nodeId, nodeUpdate },\n  }\n}\n\nexport function updateNodeProperties(\n  nodeId: string,\n  nodePropertiesUpdate: NodeDataUpdate\n): UpdateNodePropertiesAction {\n  return {\n    type: UPDATE_NODE_DATA,\n    payload: { nodeId, nodePropertiesUpdate },\n  }\n}\n\nexport function deleteNode(nodeId: string): DeleteNodeAction {\n  return {\n    type: DELETE_NODE,\n    payload: nodeId,\n  }\n}\n\nexport function rerender(): RerenderAction {\n  return {\n    type: RERENDER,\n  }\n}\n\nexport function startFlow(\n  selectedFlowId: string\n): ThunkAction<void, FlowState, unknown, Action<string>> {\n  return async function (dispatch) {\n    logger.log(\"starting flow: \", selectedFlowId)\n    const flow = store.getState().flowState.flows[selectedFlowId] as Flow\n    const flowArguments = store.getState().flowState\n      .flowArguments as FlowArguments\n    const { flowChart } = flow\n    logger.log(\"starting flow chart: \", flowChart)\n    const yaml = formatAsYAML(flowChart, flowArguments)\n    logger.log(\"starting flow yaml: \", flowChart)\n    const result = await jinadClient.startFlow(yaml)\n    const { status, message, flow_id } = result\n\n    dispatch(updateSelectedFlow({ flow_id }))\n\n    if (status === \"error\") return dispatch(showBanner(message, \"error\") as any)\n\n    dispatch(showBanner(message, \"success\") as any)\n\n    dispatch(initNetworkFlow(selectedFlowId))\n    //TODO: initialize flow (logs, etc)\n  }\n}\n\nexport function stopFlow(\n  selectedFlowId: string\n): ThunkAction<void, FlowState, unknown, Action<string>> {\n  return async function (dispatch) {\n    logger.log(\"stop flow: \", selectedFlowId)\n    const flowProperties = store.getState().flowState.flows[selectedFlowId]\n    const { flow_id } = flowProperties\n    logger.log(\"flowProperties:\", flowProperties)\n    logger.log(\"flow_id:\", flow_id)\n    if (!flow_id)\n      return dispatch(showBanner(\"Flow is not deployed\", \"error\") as any)\n\n    const result = await jinadClient.terminateFlow(flow_id)\n    const { status, message } = result\n\n    logger.log(\"stopFlow result: \", result)\n    if (status === \"error\") return dispatch(showBanner(message, \"error\") as any)\n\n    dispatch(showBanner(message, \"success\") as any)\n    //TODO: initialize flow (logs, etc)\n  }\n}\n\nexport function initNetworkFlow(\n  selectedFlowId: string\n): ThunkAction<void, FlowState, unknown, Action<string>> {\n  return async function (dispatch) {\n    const { flow_id } = store.getState().flowState.flows[selectedFlowId]\n    if (!flow_id) return\n    const flowResult = await jinadClient.getFlow(flow_id)\n    logger.log(\"got network flow:\", flowResult)\n    if (flowResult.status === \"error\") {\n      if (flowResult.message)\n        dispatch(showBanner(flowResult.message, \"error\") as any)\n      return\n    }\n    const { workspace_id } = flowResult.flow;\n\n    dispatch(updateSelectedFlow({ workspace_id }))\n\n    //See: https://github.com/jina-ai/jina/issues/1812\n    setTimeout(() => dispatch(initLogStream(workspace_id, flow_id)), 5000)\n  }\n}\n","import { ProcessedLog } from \"../redux/logStream/logStream.types\";\n\nconst toBlob = (content: string) => {\n  return new Blob([content], { type: \"text,plain;charset=utf-8\" });\n};\n\nconst serializeLogsToCSV = (logs: ProcessedLog[]): string => {\n  const columns =\n    \"created,formatted timestamp,name,process,level name,message,context,host,workspace\\n\";\n  const fileContent = logs.reduce((acc, log) => {\n    acc += `${log.uptime},\"${log.formattedTimestamp}\",${log.name},${log.process},${log.level},\"${log.message}\",${log.context},${log.host},${log.workspace_path}\\n`;\n    return acc;\n  }, columns);\n  return fileContent;\n};\n\nconst serializeLogsToJSON = (logs: ProcessedLog[]): string => {\n  const fileContent = logs.reduce((acc, log, i) => {\n    acc += JSON.stringify(log) + `${i < logs.length - 1 ? \",\" : \"\"}\\n`;\n    return acc;\n  }, \"\\n\");\n  return `[${fileContent}]`;\n};\n\nconst serializeLogsToText = (logs: ProcessedLog[]): string => {\n  const fileContent = logs.reduce((acc, log) => {\n    acc += `${log.formattedTimestamp} ${log.name}@${log.process} [${log.level}]: ${log.message}\\n`;\n    return acc;\n  }, \"\");\n  return fileContent;\n};\n\nexport const serializeLogsToCSVBlob = (logs: ProcessedLog[]) =>\n  toBlob(serializeLogsToCSV(logs));\n\nexport const serializeLogsToJSONBlob = (logs: ProcessedLog[]) =>\n  toBlob(serializeLogsToJSON(logs));\nexport const serializeLogsToTextBlob = (logs: ProcessedLog[]) =>\n  toBlob(serializeLogsToText(logs));\n","import { nanoid } from \"nanoid\";\nimport { ProcessedLog, RawLog } from \"../redux/logStream/logStream.types\";\nconst levels = [\n  \"INFO\",\n  \"SUCCESS\",\n  \"WARNING\",\n  \"ERROR\",\n  \"CRITICAL\",\n  \"DEBUG\",\n] as const;\nexport type Level = typeof levels[number];\n\nfunction transformLog(log: RawLog, idx: number): ProcessedLog {\n  const { uptime, type } = log;\n  const id = nanoid();\n  const timestamp = new Date(uptime);\n  const unixTime = Math.floor(timestamp.valueOf() / 1000);\n  const formattedTimestamp = timestamp.toLocaleString();\n  return {\n    ...log,\n    id,\n    idx,\n    unixTime,\n    timestamp,\n    formattedTimestamp,\n    level: type,\n  };\n}\n\nexport { transformLog };\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\n// Layout Types\nimport { HubLayout } from \"../layouts\";\n\n// Route Views\nimport PackageView from \"../views/PackageView\";\nimport LogIn from \"../views/LogIn\";\nimport NotFound from \"../views/NotFound\";\nimport NavigateButton from \"../components/Common/NavigateButton\";\nimport HubImagesList from \"../components/Hub/HubImagesList\";\n\nexport const hubRoutes = [\n  {\n    path: \"/\",\n    exact: true,\n    layout: HubLayout,\n    component: () => <Redirect to=\"/home\" />,\n  },\n  {\n    path: \"/help\",\n    layout: HubLayout,\n    component: NotFound,\n    props: {\n      usesConnection: false,\n      usesAuth: false,\n    },\n  },\n  {\n    path: \"/home\",\n    layout: HubLayout,\n    component: HubImagesList,\n    props: {\n      usesConnection: false,\n      usesAuth: true,\n    },\n  },\n  {\n    path: \"/package/:packageId\",\n    layout: HubLayout,\n    component: PackageView,\n    props: {\n      navigateButton: () => <NavigateButton label={\"❮  Back\"} path={\"/home\"} />,\n    },\n  },\n  {\n    path: \"/login\",\n    layout: HubLayout,\n    component: LogIn,\n    props: {\n      usesConnection: false,\n      usesAuth: true,\n    },\n  },\n];\n","import { Theme } from \"@emotion/react\";\n\nexport const getLevels = (theme: Theme): { [key: string]: any } => {\n  const colorPalette = theme.palette;\n  return {\n    INFO: {\n      borderColor: colorPalette.info,\n      backgroundColor: \"rgba(0, 153, 153, 0.9)\",\n    },\n    SUCCESS: {\n      borderColor: colorPalette.success,\n      backgroundColor: \"rgba(50, 200, 205, 0.9)\",\n    },\n    WARNING: {\n      borderColor: colorPalette.warning,\n      backgroundColor: \"rgba(255, 204, 102, 0.9)\",\n    },\n    ERROR: {\n      borderColor: colorPalette.error,\n      backgroundColor: \"rgba(255, 102, 102, 0.9)\",\n    },\n    CRITICAL: {\n      borderColor: colorPalette.critical,\n      backgroundColor: \"rgba(255, 70, 64, 0.9)\",\n    },\n    DEBUG: {\n      borderColor: colorPalette.debug,\n      backgroundColor: \"rgba(110, 114, 120, 0.9)\",\n    },\n  };\n};\n","import React, { useRef, useEffect, useState, useCallback } from \"react\";\nimport ChartElement, {\n  ChartConfiguration,\n  ChartOptions,\n  ChartData,\n  ChartDataSets,\n} from \"chart.js\";\nimport { LogLevelSummaryChartData } from \"./types\";\nimport { getLevels } from \"./levels\";\nimport { Theme, useTheme } from \"@emotion/react\";\n\nconst DEFAULT_HEIGHT = 10;\nconst DEFAULT_WIDTH = 100;\n\nfunction getParsedDatasets(data: LogLevelSummaryChartData, theme: Theme) {\n  const levels = getLevels(theme);\n  const datasets = Object.keys(levels).map(\n    (level): ChartDataSets => {\n      const levelData = data.map((tick: any) => tick.levels[level]);\n      return {\n        barPercentage: 0.75,\n        categoryPercentage: 1,\n        label: level,\n        fill: \"start\",\n        backgroundColor: levels[level].backgroundColor,\n        data: levelData,\n      };\n    }\n  );\n  return datasets;\n}\n\nfunction getLabels(amount?: number): number[] {\n  const labels = [];\n  for (let i = 0; i < (amount || 0); ++i) {\n    labels.push(i);\n  }\n  return labels;\n}\n\ntype Props = {\n  width?: number;\n  height?: number;\n  numTicks?: number;\n  data: LogLevelSummaryChartData;\n  onClick: (activePoints: any) => void;\n  timeLabels: string[];\n};\n\nfunction ChartBase({\n  width,\n  height,\n  data,\n  numTicks,\n  onClick,\n  timeLabels,\n}: Props) {\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n  const [chartInstance, setChartInstance] = useState<ChartElement | null>(null);\n  // Get theme from ThemeProvider (for usecases like dark mode)\n  const theme = useTheme();\n\n  function onClickChart(e: any) {\n    if (!chartInstance) return;\n    const activePoints = chartInstance.getElementsAtEvent(e);\n    onClick(activePoints);\n  }\n\n  const getXAxisLabel = useCallback(\n    (value: any, index: number, values: any) => {\n      if (index === 0) return timeLabels[0];\n      else if (index === Math.floor(values.length / 2)) return timeLabels[1];\n      return;\n    },\n    [timeLabels]\n  );\n\n  function getYAxisLabel(value: any) {\n    if (Number.isInteger(value)) {\n      return value;\n    }\n  }\n\n  function ChartLegend() {\n    return (\n      <div\n        className=\"chart-legend mt-1 mb-3\"\n        data-name=\"logOccurencesChartLegend\"\n      >\n        {Object.entries(getLevels(theme)).map(\n          ([level, style]: [string, any]) => (\n            <div className=\"chart-legend-item\" key={level}>\n              <div\n                className={`chart-legend-indicator mr-1 ${level.toLowerCase()}`}\n                style={{ backgroundColor: style.borderColor }}\n              />\n              <span className=\"chart-legend-caption mr-2\">{level}</span>\n            </div>\n          )\n        )}\n      </div>\n    );\n  }\n\n  useEffect(() => {\n    if (!canvasRef.current) return;\n    const chartOptions: ChartOptions = {\n      animation: { duration: 0 },\n      events: [\"click\"],\n      onClick: onClickChart,\n      maintainAspectRatio: true,\n      responsive: true,\n      legend: {\n        display: false,\n      },\n      tooltips: {\n        enabled: false,\n      },\n      elements: {\n        point: {\n          radius: 0,\n          hitRadius: 20,\n        },\n      },\n      scales: {\n        xAxes: [\n          {\n            stacked: true,\n            ticks: {\n              padding: 5,\n              maxRotation: 0,\n              autoSkip: false,\n              callback: getXAxisLabel,\n            },\n            gridLines: {\n              zeroLineColor: \"#cfd8dc\",\n              color: \"#cfd8dc\",\n            },\n          },\n        ],\n        yAxes: [\n          {\n            stacked: true,\n            scaleLabel: {\n              display: false,\n            },\n            gridLines: {\n              borderDash: [5, 5],\n              zeroLineColor: \"#cfd8dc\",\n              drawBorder: false,\n              color: \"#cfd8dc\",\n            },\n            ticks: {\n              padding: 5,\n              suggestedMin: 0,\n              autoSkip: true,\n              maxTicksLimit: 4,\n              callback: getYAxisLabel,\n            },\n          },\n        ],\n      },\n    };\n\n    const chartConfig: ChartConfiguration = {\n      type: \"bar\",\n      data: {\n        datasets: getParsedDatasets(data, theme),\n      },\n      options: chartOptions,\n    };\n\n    const newChartInstance = new ChartElement(canvasRef.current, chartConfig);\n    setChartInstance(newChartInstance);\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    if (!chartInstance) return;\n    const chartData: ChartData = {\n      labels: getLabels(numTicks),\n      datasets: getParsedDatasets(data, theme),\n    };\n    chartInstance.data = chartData;\n    chartInstance.update();\n  }, [data, chartInstance, numTicks, theme]);\n\n  useEffect(() => {\n    if (\n      chartInstance &&\n      chartInstance.options.scales &&\n      chartInstance.options.scales.xAxes &&\n      chartInstance.options.scales.xAxes[0].ticks\n    ) {\n      chartInstance.options.scales.xAxes[0].ticks.callback = getXAxisLabel;\n      chartInstance.update();\n    }\n  }, [getXAxisLabel, chartInstance]);\n\n  return (\n    <>\n      <ChartLegend />\n      <canvas\n        height={height || DEFAULT_HEIGHT}\n        width={width || DEFAULT_WIDTH}\n        ref={canvasRef}\n      />\n    </>\n  );\n}\n\nexport default ChartBase;\n","import React from \"react\";\nimport Select, { Props as SelectProps } from \"react-select\";\n\nconst customStyles = {\n  dropdownIndicator: (styles: any) => ({\n    ...styles,\n    color: \"black\",\n  }),\n  indicatorSeparator: (styles: any) => ({\n    ...styles,\n    opacity: \"0\",\n  }),\n  container: (provided: any, { selectProps: { width } }: any) => ({\n    ...provided,\n    width: width,\n  }),\n  option: (styles: any) => ({\n    ...styles,\n    cursor: \"pointer\",\n  }),\n  control: (styles: any) => ({\n    ...styles,\n    cursor: \"pointer\",\n    border: \"none\",\n    background: \"#F6F8FA\",\n  }),\n};\n\nexport type Props = {\n  onFilterChange: (val: any[]) => void;\n  options: { value: string; label: string }[];\n  isMulti?: boolean;\n  isSearchable?: boolean;\n  clearAfter?: boolean;\n} & SelectProps;\n\nfunction MultiFilterSelect({\n  isMulti,\n  isSearchable,\n  clearAfter,\n  onFilterChange,\n  options,\n  ...rest\n}: Props) {\n  let value = clearAfter ? null : undefined;\n  return (\n    <Select\n      onChange={(val) => {\n        onFilterChange(Array.isArray(val) ? val : !val ? [] : [val]);\n      }}\n      value={value}\n      isMulti={isMulti}\n      options={options}\n      styles={customStyles}\n      readOnly={true}\n      isSearchable={isSearchable}\n      {...rest}\n    />\n  );\n}\n\nexport { MultiFilterSelect };\n","import React from \"react\";\nimport { Card, Row, Col } from \"react-bootstrap\";\nimport BarChart from \"./BarChartBase\";\nimport { MultiFilterSelect } from \"../Common/MultiFilterSelect\";\nimport { LogLevelSummaryChartData } from \"./types\";\n\nconst DEFAULT_HEIGHT = 10;\nconst DEFAULT_WIDTH = 70;\n\nconst DEFAULT_HEIGHT_SMALL = 20;\nconst DEFAULT_WIDTH_SMALL = 50;\n\ntype Props = {\n  data: {\n    data: LogLevelSummaryChartData;\n    lastTimestamp: number;\n    numSeconds: number;\n    numTicks: number;\n  };\n  showLog: (activePoints: any) => void;\n  setTimeSelection: (timeSelection: any) => void;\n  timeOptions: { [key: string]: { value: string; label: string } };\n  selectedTime: any;\n  timeLabels: any;\n};\n\nfunction LogLevelSummaryChart({\n  data: { data, numSeconds, numTicks },\n  showLog,\n  setTimeSelection,\n  timeOptions,\n  selectedTime,\n  timeLabels,\n}: Props) {\n  return (\n    <Card className=\"h-100\">\n      <Card.Header className=\"p-2 px-3\">\n        <Row>\n          <Col data-name=\"logOccurenceTitle\">Log Occurences by Level</Col>\n          <Col className=\"text-right\" data-name=\"logOccurenceDurationSelect\">\n            <MultiFilterSelect\n              clearAfter\n              options={Object.values(timeOptions)}\n              onFilterChange={(option: any[]) =>\n                setTimeSelection(option[0].value)\n              }\n              className=\"logstream-select text-left\"\n              placeholder={\n                <span data-name=\"logOccurenceDurationSelectedOption\">\n                  <i className=\"material-icons mr-2\">access_time</i>\n                  {timeOptions[selectedTime].label}\n                </span>\n              }\n              isSearchable={false}\n            />\n          </Col>\n        </Row>\n      </Card.Header>\n      <Card.Body className=\"d-none d-md-block p-0 pb-2 px-3\">\n        <BarChart\n          timeLabels={timeLabels}\n          data={data}\n          numTicks={numTicks}\n          height={DEFAULT_HEIGHT}\n          width={DEFAULT_WIDTH}\n          onClick={showLog}\n        />\n      </Card.Body>\n      <Card.Body className=\"d-md-none pb-2\">\n        <BarChart\n          timeLabels={timeLabels}\n          data={data}\n          numTicks={numTicks}\n          height={DEFAULT_HEIGHT_SMALL}\n          width={DEFAULT_WIDTH_SMALL}\n          onClick={showLog}\n        />\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport { LogLevelSummaryChart };\n","import React, { useRef, useEffect, useState, useCallback } from \"react\";\nimport ChartElement, {\n  ChartConfiguration,\n  ChartOptions,\n  ChartData,\n} from \"chart.js\";\nimport { useTheme } from \"@emotion/react\";\nimport { getLevels } from \"./levels\";\nimport { LogLevels } from \"../../redux/logStream/logStream.types\";\n\nconst DEFAULT_HEIGHT = 50;\nconst DEFAULT_WIDTH = 50;\n\ntype Props = {\n  width?: number;\n  height?: number;\n  data: LogLevels;\n};\n\nfunction PieChartBase({ width, height, data }: Props) {\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n  const [chartInstance, setChartInstance] = useState<ChartElement | null>(null);\n  const theme = useTheme();\n\n  const getColor = useCallback(\n    (key: string) => {\n      return getLevels(theme)[key];\n    },\n    [theme]\n  );\n\n  useEffect(() => {\n    if (!canvasRef.current) return;\n    const names = Object.keys(data);\n    const chartOptions: ChartOptions = {\n      animation: { duration: 0 },\n      legend: {\n        display: false,\n        position: \"bottom\",\n        labels: {\n          padding: 25,\n          boxWidth: 20,\n        },\n      },\n      tooltips: {\n        mode: \"index\",\n        position: \"nearest\",\n      },\n    };\n\n    const chartConfig: ChartConfiguration = {\n      type: \"pie\",\n      data: {\n        datasets: [\n          {\n            borderWidth: 1,\n            data: Object.values(data),\n            borderColor: names.map((name) => getColor(name).borderColor),\n            backgroundColor: names.map(\n              (name) => getColor(name).backgroundColor\n            ),\n          },\n        ],\n      },\n      options: chartOptions,\n    };\n\n    const newChartInstance = new ChartElement(canvasRef.current, chartConfig);\n    setChartInstance(newChartInstance);\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    if (!chartInstance) return;\n    const names = Object.keys(data);\n    const chartData: ChartData = {\n      labels: names,\n      datasets: [\n        {\n          borderWidth: 1,\n          data: Object.values(data),\n          borderColor: names.map((name) => getColor(name).borderColor),\n          backgroundColor: names.map((name) => getColor(name).backgroundColor),\n        },\n      ],\n    };\n    chartInstance.data = chartData;\n    chartInstance.update();\n  }, [data, chartInstance, getColor]);\n\n  return (\n    <canvas\n      height={height || DEFAULT_HEIGHT}\n      width={width || DEFAULT_WIDTH}\n      ref={canvasRef}\n    />\n  );\n}\n\nexport default PieChartBase;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport PieChart from \"./PieChartBase\";\nimport { LogLevels } from \"../../redux/logStream/logStream.types\";\n\ntype Props = {\n  data: LogLevels;\n};\n\nfunction LogLevelPieChart({ data }: Props) {\n  return (\n    <Card className=\"h-100\">\n      <Card.Header className=\"text-center p-2\">Log Levels</Card.Header>\n      <Card.Body className=\"px-3 pt-0 pb-3\">\n        <PieChart data={data} />\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport { LogLevelPieChart };\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { memo } from \"react\";\nimport { areEqual } from \"react-window\";\nimport { ProcessedLog } from \"../../redux/logStream/logStream.types\";\n\ntype Props = {\n  index: number;\n  style: any;\n  data: {\n    columns: { firstCol: number; secondCol: number; thirdCol: number };\n    items: ProcessedLog[];\n    showLogDetails: (log: any) => void;\n  };\n};\n\nconst LogItem = memo(\n  ({ index, style, data: { columns, items, showLogDetails } }: Props) => {\n    const logData = items[index];\n    const { name, message, level, process, formattedTimestamp, idx } = logData;\n    let logName = String(name);\n    logName = logName.length > 20 ? logName.substring(0, 20) : logName;\n    let levelInitial = String(level)[0];\n    const { firstCol, secondCol, thirdCol } = columns;\n    return (\n      <div\n        data-name={`logItem-${index}`}\n        className={`log log-${String(\n          level\n        ).toLowerCase()} px-4 border-bottom py-1`}\n        css={{ maxHeight: 84 }}\n        style={style}\n        onClick={() => showLogDetails(logData)}\n      >\n        <Row>\n          <Col\n            className=\"log-prefix text-muted px-0 d-flex flex-row\"\n            css={{ maxWidth: firstCol }}\n          >\n            <div className=\"text-bold mr-2\">{idx}</div>\n            <div className=\"ml-auto\">{formattedTimestamp}</div>\n          </Col>\n          <Col\n            className=\"log-prefix px-0 text-left text-md-right text-bold cursor-pointer\"\n            css={{ maxWidth: secondCol }}\n          >\n            {logName}@{process}[{levelInitial}]:\n          </Col>\n          <Col\n            className=\"px-0\"\n            css={{\n              maxHeight: 84,\n              display: \"block\",\n              overflow: \"hidden\",\n              textOverflow: \"ellipsis\",\n              width: thirdCol,\n              whiteSpace: \"nowrap\",\n              paddingRight: 0,\n              marginRight: 0,\n            }}\n          >\n            {message}\n          </Col>\n        </Row>\n      </div>\n    );\n  },\n  areEqual\n);\n\nexport { LogItem };\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/react\";\nimport { Row, Col } from \"react-bootstrap\";\n\ntype Props = {\n  columns: { firstCol: number; secondCol: number };\n  border?: boolean;\n};\n\nconst LogsTableHeader = ({\n  columns: { firstCol, secondCol },\n  border,\n}: Props) => {\n  return (\n    <div\n      className={`px-4 py-1 bg-light text-monospace ${\n        border ? \"border-top\" : \"\"\n      }`}\n      css={{ maxHeight: 84 }}\n    >\n      <Row>\n        <Col\n          className=\"log-prefix text-muted px-0 d-flex flex-row\"\n          css={{ maxWidth: firstCol }}\n        >\n          <div className=\"text-bold mr-2\">#</div>\n          <div className=\"ml-auto\">timestamp</div>\n        </Col>\n        <Col\n          className=\"log-prefix px-0 text-left text-md-right text-bold\"\n          css={{ maxWidth: secondCol }}\n        >\n          source@process[level]:\n        </Col>\n        <Col\n          className=\"px-0\"\n          css={{\n            maxHeight: 84,\n            display: \"block\",\n            overflow: \"hidden\",\n            textOverflow: \"ellipsis\",\n            // width: \"1\",\n            whiteSpace: \"nowrap\",\n            paddingRight: 0,\n            marginRight: 0,\n          }}\n        >\n          message\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport { LogsTableHeader };\n","import React from \"react\";\nimport { Form, InputGroup } from \"react-bootstrap\";\n\ntype Props = {\n  value: string | number;\n  placeholder?:string;\n  variant?:string;\n  onChange: (newValue: string) => void;\n};\n\nfunction ExpandingSearchbar({ value, onChange,placeholder,variant }: Props) {\n  return (\n    <div className={`expanding-searchbar expanding-searchbar-${variant||\"default\"}`}>\n      <InputGroup>\n        <InputGroup.Prepend className=\"ml-auto\">\n          <InputGroup.Text>\n            <i className=\"material-icons\">search</i>\n          </InputGroup.Text>\n        </InputGroup.Prepend>\n        <Form.Control\n          type=\"text\"\n          placeholder={placeholder}\n          value={value}\n          onChange={(e: any) => onChange(e.target.value)}\n        />\n        <InputGroup.Append>\n          <InputGroup.Text>\n            <i className={`cursor-pointer text-muted material-icons mr-3 ${!value?'d-invisible':\"\"}`} onClick={()=>onChange(\"\")}>cancel</i>\n          </InputGroup.Text>\n        </InputGroup.Append>\n      </InputGroup>\n    </div>\n  );\n}\n\nexport { ExpandingSearchbar };\n","import React, { useState } from \"react\";\nimport { Collapse } from \"react-bootstrap\";\nimport logger from \"../../logger\";\n\nconst _icons: { [key: string]: any } = {\n  success: {\n    name: \"check_circle\",\n    color: \"success\",\n  },\n  pending: {\n    name: \"pending\",\n    color: \"muted\",\n  },\n  warning: {\n    name: \"error\",\n    color: \"warning\",\n  },\n  failed: {\n    name: \"cancel\",\n    color: \"critical\",\n  },\n};\n\ntype StatusString = \"success\" | \"pending\" | \"warning\" | \"failed\";\n\ntype CountSummaryProps = {\n  levels?: any[];\n  numItems: number;\n  title: string;\n};\n\nfunction CountSummary({ levels, numItems }: CountSummaryProps) {\n  logger.log(\"levels:\", levels);\n  return <span className=\"ml-2 text-muted\">({numItems})</span>;\n}\n\nfunction getStatusFromLevels(levels: any): StatusString {\n  const keys = Object.keys(levels);\n  if (\n    keys.find((k) => k.toLowerCase() === \"critical\") ||\n    keys.find((k) => k.toLowerCase() === \"error\")\n  )\n    return \"failed\";\n  if (keys.find((k) => k.toLowerCase() === \"warning\")) return \"warning\";\n  return \"success\";\n}\n\nfunction StatusIcon({ levels }: { levels: any }) {\n  const status = getStatusFromLevels(levels);\n  const icon = _icons[status];\n  return (\n    <i className={`no-select material-icons log-${icon.color} mr-2`}>\n      {icon.name}\n    </i>\n  );\n}\n\ntype ExpandIndicator = {\n  expanded: boolean;\n};\n\nfunction ExpandController({ expanded }: ExpandIndicator) {\n  return (\n    <i\n      className={`no-select material-icons text-muted cursor-pointer ${\n        expanded ? \"rotate-90\" : \"\"\n      } mr-2`}\n    >\n      arrow_forward_ios\n    </i>\n  );\n}\n\ntype Props = {\n  title: string;\n  body: any;\n  numItems: number;\n  group: string;\n  levels?: string[];\n};\n\nfunction LogGroup({ title, body, levels, numItems, group }: Props) {\n  const [expanded, setExpanded] = useState(false);\n  return (\n    <div className={`log-group-item m-2 ${expanded ? \"bg-light\" : \"\"}`}>\n      <div\n        className=\"log-group-header cursor-pointer p-2\"\n        onClick={() => setExpanded((prev) => !prev)}\n      >\n        <ExpandController expanded={expanded} />\n        {levels && <StatusIcon levels={levels} />}\n        <span\n          className={\n            group === \"group-level\" ? `log-${title.toLowerCase()}` : \"\"\n          }\n        >\n          {title}\n        </span>\n        {!levels && (\n          <CountSummary levels={levels} numItems={numItems} title={title} />\n        )}\n      </div>\n      <Collapse in={expanded} timeout={100}>\n        <div className=\"log-group-body p-3\">\n          <div className=\"bg-white border\">{body}</div>\n        </div>\n      </Collapse>\n    </div>\n  );\n}\n\nexport { LogGroup };\n","import React, { useState, useCallback, useEffect, useRef } from \"react\";\nimport _ from \"lodash\";\nimport { FixedSizeList as List } from \"react-window\";\nimport { Card, Row, Col } from \"react-bootstrap\";\nimport AutoSizer from \"react-virtualized-auto-sizer\";\nimport FlexSearch from \"flexsearch\";\nimport { saveAs } from \"file-saver\";\n\nimport { MultiFilterSelect } from \"../Common/MultiFilterSelect\";\nimport { LogItem } from \"./LogItem\";\nimport { LogsTableHeader } from \"./LogsTableHeader\";\nimport { ProcessedLog } from \"../../redux/logStream/logStream.types\";\nimport { ExpandingSearchbar } from \"../Common/ExpandingSearchbar\";\nimport { LogGroup } from \"./LogGroup\";\n\nimport {\n  serializeLogsToCSVBlob,\n  serializeLogsToJSONBlob,\n  serializeLogsToTextBlob,\n} from \"../../helpers\";\n\nconst ROW_SIZE = 30;\nconst DEFAULT_VIEW = \"table\";\nconst VIEW_PREFERENCE_NAME = \"logs-view-preference\";\nconst POD_NAME_SPLIT_CHAR = \"-\";\n\nconst SEARCH_FIELDS = [\n  \"filename\",\n  \"funcName\",\n  \"module\",\n  \"message\",\n  \"pathname\",\n  \"name\",\n];\n\nconst levels = [\n  \"INFO\",\n  \"SUCCESS\",\n  \"WARNING\",\n  \"ERROR\",\n  \"CRITICAL\",\n  \"DEBUG\",\n] as const;\n\nconst saveOptions = [\n  { value: \"csv\", label: \"CSV\" },\n  { value: \"json\", label: \"JSON\" },\n  { value: \"txt\", label: \"TXT\" },\n];\n\nconst viewOptions: { [key: string]: { value: string; label: string } } = {\n  table: {\n    value: \"table\",\n    label: \"Table View\",\n  },\n  \"group-pod\": {\n    value: \"group-pod\",\n    label: \"Group by Pod\",\n  },\n  \"group-level\": {\n    value: \"group-level\",\n    label: \"Group by Level\",\n  },\n};\n\nfunction getUserViewPreference() {\n  const preference = localStorage.getItem(VIEW_PREFERENCE_NAME);\n  if (preference && viewOptions[preference]) return preference;\n  return false;\n}\n\nfunction setUserViewPreference(preference: string) {\n  localStorage.setItem(VIEW_PREFERENCE_NAME, preference);\n}\n\nfunction getInitialView() {\n  return getUserViewPreference() || DEFAULT_VIEW;\n}\n\nlet _lastNumLogs = 0;\nlet _searchIndex = FlexSearch.create({\n  doc: {\n    id: \"id\",\n    field: SEARCH_FIELDS,\n  },\n});\n\nconst applyFilters = <T extends Record<string, any>>(\n  item: T,\n  filters: { [key in keyof T]: any }\n) =>\n  Object.entries(filters).reduce((acc, curr) => {\n    const [key, value] = curr;\n    return acc && Array.isArray(value)\n      ? value.length === 0\n        ? true\n        : value.includes(item[key] as any)\n      : value === item[key];\n  }, true as boolean);\n\ntype Format = \"json\" | \"csv\" | \"txt\";\n\ntype View = \"group-pod\" | \"group-level\" | \"table\";\n\nconst generateFileName = (format: Format) =>\n  `jina-logs-${new Date()}.${format}`;\n\nconst saveLogData = (data: any, format: Format) => {\n  const filename = generateFileName(format);\n  if (format === \"csv\") return saveAs(serializeLogsToCSVBlob(data), filename);\n  if (format === \"json\") return saveAs(serializeLogsToJSONBlob(data), filename);\n  if (format === \"txt\") return saveAs(serializeLogsToTextBlob(data), filename);\n};\n\ntype Props = {\n  data: ProcessedLog[];\n  showLogDetails: (log: ProcessedLog) => void;\n};\n\nconst itemKey = (index: number, data: { items: ProcessedLog[] }) =>\n  data.items[index].id;\n\nconst arrayLikeToArray = (arrayLike: Readonly<any[]> | Set<any>) =>\n  Array.isArray(arrayLike) ? arrayLike : Array.from(arrayLike);\n\nconst toOption = (list: Readonly<any[]> | Set<any>) =>\n  arrayLikeToArray(list).map((item) => ({ label: item, value: item }));\n\nfunction LogsList({ data, firstCol, secondCol, showLogDetails, small }: any) {\n  const listRef = useRef<any>();\n  const [scrolledToBottom, setScrolledToBottom] = useState(true);\n\n  useEffect(() => {\n    if (listRef.current && scrolledToBottom) {\n      listRef.current.scrollToItem(data.length);\n    }\n  }, [data.length, scrolledToBottom]);\n\n  return (\n    <div>\n      {!scrolledToBottom && (\n        <div\n          onClick={() => listRef.current.scrollToItem(data.length)}\n          className={`back-to-bottom active`}\n        >\n          <i className=\"material-icons\">arrow_downward</i> Back to Bottom\n        </div>\n      )}\n      <LogsTableHeader columns={{ firstCol, secondCol }} border={!small} />\n      <div\n        className={`log-stream-container${\n          small ? \"-small\" : \"\"\n        } p-0 border-top`}\n      >\n        <AutoSizer>\n          {({ height, width }) => {\n            const thirdCol = width - (firstCol + secondCol);\n            return (\n              <List\n                onScroll={({ scrollOffset }) => {\n                  setScrolledToBottom(\n                    (scrollOffset + height) / ROW_SIZE - data.length === 0\n                  );\n                }}\n                height={height}\n                width={width}\n                itemCount={data.length}\n                itemSize={ROW_SIZE}\n                itemKey={itemKey}\n                itemData={{\n                  items: data,\n                  columns: { firstCol, secondCol, thirdCol },\n                  showLogDetails,\n                }}\n                ref={listRef}\n              >\n                {LogItem}\n              </List>\n            );\n          }}\n        </AutoSizer>\n      </div>\n    </div>\n  );\n}\n\ntype GroupedLogProps = {\n  groupedData: any;\n  grouping: string;\n  firstCol: any;\n  secondCol: any;\n  showLogDetails: any;\n};\n\nfunction GroupedLogs({\n  groupedData,\n  grouping,\n  firstCol,\n  secondCol,\n  showLogDetails,\n}: GroupedLogProps) {\n  return (\n    <Card.Body className=\"log-stream-container p-0 border-top\">\n      {Object.keys(groupedData).length && (\n        <div className=\"log-group-container\">\n          {Object.entries(groupedData).map(([key, data]: any, idx: number) => (\n            <LogGroup\n              group={grouping}\n              key={idx}\n              title={key}\n              levels={data.levels}\n              numItems={data.data.length}\n              body={\n                <LogsList\n                  firstCol={firstCol}\n                  secondCol={secondCol}\n                  data={data.data}\n                  showLogDetails={showLogDetails}\n                  small\n                />\n              }\n            />\n          ))}\n        </div>\n      )}\n    </Card.Body>\n  );\n}\n\nfunction LogsTable({ data, showLogDetails }: Props) {\n  const [currentView, setCurrentView] = useState(() => getInitialView());\n\n  const [selectedSources, setSelectedSources] = useState<any[]>([]);\n  const [selectedLevels, setSelectedLevels] = useState<any[]>([]);\n\n  const [searchResults, setSearchResults] = useState<any[]>([]);\n  const [searchString, setSearchString] = useState(\"\");\n\n  const search = useCallback(async () => {\n    const newData = data.slice(_lastNumLogs, data.length);\n    _searchIndex.add(newData);\n    _lastNumLogs = data.length;\n    const searchResults = await _searchIndex.search(searchString);\n    setSearchResults(searchResults);\n    // @ts-ignore\n  }, [searchString, data.length]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    if (searchString && data.length) search();\n  }, [data.length, searchString, search]);\n\n  function setView(view: View) {\n    setCurrentView(view);\n    setUserViewPreference(view);\n  }\n\n  const unfiltered = searchString ? searchResults : data;\n  const sources = data.reduce((acc, curr) => acc.add(curr.name), new Set());\n\n  let groupedData: any;\n\n  let resultData = (unfiltered || []).filter((result) =>\n    applyFilters(result as any, {\n      level: selectedLevels.map(({ value }) => value),\n      name: selectedSources.map(({ value }) => value),\n    })\n  );\n\n  if (currentView === \"group-pod\") {\n    const podNames = arrayLikeToArray(sources).map(\n      (name: string) => name.toLowerCase().split(POD_NAME_SPLIT_CHAR)[0]\n    );\n    groupedData = {};\n    podNames.forEach((podName: string) => {\n      const pod: any = {};\n\n      pod.data = (resultData || []).filter(\n        (log: any) => log.name && log.name.toLowerCase().startsWith(podName)\n      );\n\n      if (!pod.data.length) return;\n      pod.levels = _.countBy(pod.data, \"level\");\n      groupedData[podName] = pod;\n    });\n  } else if (currentView === \"group-level\") {\n    groupedData = {};\n    levels.forEach((level: string) => {\n      const levelItem: any = {};\n\n      levelItem.data = (resultData || []).filter(\n        (log: any) => log.level === level\n      );\n\n      if (!levelItem.data.length) return;\n      groupedData[level] = levelItem;\n    });\n  }\n\n  const firstCol = 300;\n  const secondCol = 300;\n\n  return (\n    <Card className=\"mb-4\">\n      <Card.Header className=\"p-0\">\n        <Row className=\"p-3\">\n          <Col md=\"8\">\n            <MultiFilterSelect\n              clearAfter\n              options={Object.values(viewOptions)}\n              onFilterChange={(option: any[]) => setView(option[0].value)}\n              className=\"logstream-select mb-2 mr-0 mb-md-0 mr-md-2\"\n              placeholder={\n                currentView === \"table\" ? (\n                  <span>\n                    <i className=\"material-icons mr-2\">table_rows</i>Table View\n                  </span>\n                ) : (\n                  <span>\n                    <i className=\"material-icons mr-2\">view_list</i>\n                    {viewOptions[currentView].label}\n                  </span>\n                )\n              }\n              isSearchable={false}\n            />\n            {currentView === \"table\" && (\n              <MultiFilterSelect\n                isMulti\n                options={toOption(sources)}\n                onFilterChange={setSelectedSources}\n                className=\"logstream-select mb-2 mr-0 mb-md-0 mr-md-2\"\n                placeholder={\n                  <span>\n                    <i className=\"material-icons mr-2\">mediation</i>All Sources\n                  </span>\n                }\n              />\n            )}\n            <MultiFilterSelect\n              isMulti\n              options={toOption(levels as any) as any}\n              onFilterChange={setSelectedLevels}\n              className=\"logstream-select mb-2 mr-0 mb-md-0 mr-md-2\"\n              placeholder={\n                <span>\n                  <i className=\"material-icons mr-2\">bar_chart</i>All Levels\n                </span>\n              }\n            />\n            <MultiFilterSelect\n              clearAfter\n              options={saveOptions}\n              onFilterChange={(option: any[]) =>\n                saveLogData(data, option[0].value)\n              }\n              className=\"logstream-select mb-2 mr-0 mb-md-0 mr-md-2\"\n              placeholder={\n                <span>\n                  <i className=\"material-icons mr-2\">download</i>Download Logs\n                </span>\n              }\n              isSearchable={false}\n            />\n          </Col>\n          <Col md=\"4\">\n            <ExpandingSearchbar\n              placeholder=\"search logs...\"\n              value={searchString}\n              onChange={setSearchString}\n            />\n          </Col>\n        </Row>\n      </Card.Header>\n      {currentView === \"table\" ? (\n        <LogsList\n          firstCol={firstCol}\n          secondCol={secondCol}\n          data={resultData}\n          showLogDetails={showLogDetails}\n        />\n      ) : (\n        <GroupedLogs\n          firstCol={firstCol}\n          secondCol={secondCol}\n          grouping={currentView}\n          groupedData={groupedData}\n          showLogDetails={showLogDetails}\n        />\n      )}\n    </Card>\n  );\n}\n\nexport { LogsTable };\n","import { State } from \"../index\";\n\nexport const selectLogs = (state: State) => state.logStreamState.logs;\nexport const selectLogLevels = (state: State) => state.logStreamState.logLevels;\nexport const selectLogLevelOccurrences = (state: State) =>\n  state.logStreamState.logLevelOccurrences;\n","import React, { useEffect, useState } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { LogLevelSummaryChart } from \"../components/LogStream/LogLevelSummaryChart\";\nimport { LogLevelPieChart } from \"../components/LogStream/LogLevelPieChart\";\nimport { PageTitle } from \"../components/Common/PageTitle\";\nimport { LogsTable } from \"../components/LogStream/LogsTable\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { showLogAtIndex } from \"../redux/logStream/logStream.actions\";\nimport {\n  selectLogLevelOccurrences,\n  selectLogLevels,\n  selectLogs,\n} from \"../redux/logStream/logStream.selectors\";\n\nimport { getLogLevelCharts } from \"../helpers/format\";\nimport { showModal } from \"../redux/global/global.actions\";\n\ntype TimePreference = \"60second\" | \"15minute\" | \"1hour\";\n\nconst DEFAULT_TIME_SELECTION: TimePreference = \"60second\";\n\nconst MAX_CHART_TICKS = 60;\n\nconst TIME_PREFERENCE_NAME = \"logs-time-preference\";\n\nconst timeOptions: {\n  [key: string]: { value: string; label: string; chartLabels: string[] };\n} = {\n  \"60second\": {\n    value: \"60second\",\n    label: \"60 Seconds\",\n    chartLabels: [\"60s ago\", \"30s ago\", \"\"],\n  },\n  \"15minute\": {\n    value: \"15minute\",\n    label: \"15 Minutes\",\n    chartLabels: [\"15m ago\", \"7m 30s ago\", \"\"],\n  },\n  \"1hour\": {\n    value: \"1hour\",\n    label: \"1 Hour\",\n    chartLabels: [\"1h ago\", \"30m ago\", \"\"],\n  },\n};\n\nconst numSeconds: { [key: string]: number } = {\n  \"60second\": 60,\n  \"15minute\": 900,\n  \"1hour\": 3600,\n};\n\nfunction getUserTimePreference() {\n  const preference = localStorage.getItem(TIME_PREFERENCE_NAME);\n  if (preference && timeOptions[preference]) return preference;\n  return false;\n}\n\nfunction setUserTimePreference(preference: string) {\n  localStorage.setItem(TIME_PREFERENCE_NAME, preference);\n}\n\nfunction getInitialTimeSelection() {\n  return getUserTimePreference() || DEFAULT_TIME_SELECTION;\n}\n\nfunction LogsView() {\n  const dispatch = useDispatch();\n\n  const logLevelOccurrences = useSelector(selectLogLevelOccurrences);\n  const logs = useSelector(selectLogs);\n  const logLevels = useSelector(selectLogLevels);\n  const [selectedTime, setSelectedTime] = useState(() =>\n    getInitialTimeSelection()\n  );\n\n  const [logLevelCharts, setLogLevelCharts] = useState(() =>\n    getLogLevelCharts(\n      numSeconds[selectedTime],\n      MAX_CHART_TICKS,\n      logLevelOccurrences,\n      new Date()\n    )\n  );\n\n  function showLogDetails(log: any) {\n    dispatch(showModal(\"logDetails\", { log }));\n  }\n\n  function setTimeSelection(time: TimePreference) {\n    setSelectedTime(time);\n    setUserTimePreference(time);\n  }\n\n  useEffect(() => {\n    const currentDate = new Date();\n    const newCharts = getLogLevelCharts(\n      numSeconds[selectedTime],\n      MAX_CHART_TICKS,\n      logLevelOccurrences,\n      currentDate\n    );\n    setLogLevelCharts({ ...newCharts });\n  }, [selectedTime, logLevelOccurrences]);\n\n  function showLog(activePoints: any) {\n    const { data } = logLevelCharts;\n    let index = activePoints[0] && activePoints[0]._index;\n    if (index && typeof index !== \"undefined\") {\n      const { lastLog } = data[index];\n      dispatch(showLogAtIndex(lastLog));\n    }\n  }\n\n  const timeSelection = timeOptions[selectedTime];\n\n  return (\n    <Container fluid className=\"main-content-container px-0\">\n      <div className=\"px-4\">\n        <Row noGutters className=\"page-header mb-4\">\n          <PageTitle title=\"Log Stream\" className=\"text-sm-left mb-3\" />\n        </Row>\n        <Row>\n          <Col md=\"10\" className=\"mb-4\">\n            <LogLevelSummaryChart\n              data={logLevelCharts}\n              showLog={showLog}\n              setTimeSelection={setTimeSelection}\n              timeOptions={timeOptions}\n              selectedTime={selectedTime}\n              timeLabels={timeSelection.chartLabels}\n            />\n          </Col>\n          <Col md=\"2\" className=\"mb-4\">\n            <LogLevelPieChart data={logLevels} />\n          </Col>\n        </Row>\n        <LogsTable data={logs} showLogDetails={showLogDetails} />\n      </div>\n    </Container>\n  );\n}\n\nexport { LogsView };\n","import React from \"react\";\nimport { Card } from \"shards-react\";\n\ntype Props = {\n  elapsed: {\n    task_name: string;\n    seconds: string | number;\n  };\n};\n\nexport default function ElapsedCard({ elapsed }: Props) {\n  return (\n    <Card className=\"p-3 h-100\">\n      <h6 className=\"stats-small__label text-uppercase text-center mb-0\">\n        <b>{elapsed.task_name}</b>\n      </h6>\n      <h2 className=\"my-3 mx-auto\">{elapsed.seconds}</h2>\n      <h6 className=\"stats-small__label text-uppercase text-center\">\n        Elapsed Time\n      </h6>\n    </Card>\n  );\n}\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { Card } from \"shards-react\";\n\nimport ChartElement from \"chart.js\";\n\ntype Props = {\n  progress: any;\n};\n\nfunction ProgressCard({ progress }: Props) {\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n  const [chartInstance, setChartInstance] = useState<ChartElement | null>(null);\n\n  useEffect(() => {\n    if (!canvasRef.current) return;\n    const newChartInstance = new ChartElement(canvasRef.current, {\n      type: \"doughnut\",\n      data: {\n        datasets: [\n          {\n            hoverBorderColor: \"#fff\",\n            data: [0, 100],\n            backgroundColor: [\"#32c8cd\", \"#E9ECEF\"],\n          },\n        ],\n        labels: [\"Label 1\", \"Label 2\"],\n      },\n      options: {\n        legend: { display: false },\n        responsive: false,\n        cutoutPercentage: 70,\n        animation: { duration: 0 },\n        tooltips: {\n          enabled: false,\n        },\n      },\n    });\n    setChartInstance(newChartInstance);\n  }, []);\n\n  useEffect(() => {\n    if (!chartInstance) return;\n    const percent = (progress.num_bars / progress.bar_len || 1) * 100;\n    let newData = {\n      datasets: [\n        {\n          hoverBorderColor: \"#fff\",\n          data: [percent, 100 - percent],\n          backgroundColor: [\"#32c8cd\", \"#E9ECEF\"],\n        },\n      ],\n      labels: [\"Label 1\", \"Label 2\"],\n    };\n    chartInstance.data = newData;\n    chartInstance.update();\n  }, [JSON.stringify(progress), chartInstance]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <Card className=\"p-3 h-100\">\n      <h6 className=\"stats-small__label text-uppercase text-center\">\n        <b>Progress</b>\n      </h6>\n      <div className=\"go-stats__chart mx-auto d-flex flex-row\">\n        <div className=\"mr-4 mt-3\">\n          <h6 className=\"stats-small__label text-uppercase text-center\">\n            Request\n          </h6>\n          <h4 className=\"mb-0\">{progress.currentRequest}</h4>\n        </div>\n\n        <canvas\n          ref={canvasRef}\n          style={{ width: \"100px\", height: \"100px\" }}\n          className=\"my-auto\"\n        />\n      </div>\n    </Card>\n  );\n}\n\nexport default ProgressCard;\n","import React, { useRef, useState, useCallback, useEffect } from \"react\";\nimport { Card } from \"shards-react\";\nimport { useTheme } from \"@emotion/react\";\nimport ChartElement, { ChartOptions } from \"chart.js\";\n\ntype Props = {\n  speed: {\n    history: any;\n    current: any;\n    unit: any;\n  };\n};\n\nfunction SpeedCard({ speed }: Props) {\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n  const [chartInstance, setChartInstance] = useState<ChartElement | null>(null);\n  const { history } = speed;\n  const { palette } = useTheme();\n\n  let maxValue = Math.max(...history);\n  let minValue = Math.min(...history);\n\n  const getChartOptions = useCallback((): ChartOptions => {\n    const difference = maxValue - minValue;\n    return {\n      maintainAspectRatio: true,\n      responsive: true,\n      animation: { duration: 0 },\n      legend: {\n        display: false,\n      },\n      tooltips: {\n        enabled: false,\n      },\n      layout: {\n        padding: {\n          bottom: -10,\n          left: -10,\n        },\n      },\n      elements: {\n        point: {\n          radius: 0,\n        },\n        line: {\n          tension: 0.33,\n        },\n      },\n      scales: {\n        xAxes: [\n          {\n            gridLines: {\n              display: false,\n            },\n            ticks: {\n              display: false,\n            },\n          },\n        ],\n        yAxes: [\n          {\n            gridLines: {\n              display: false,\n            },\n            scaleLabel: {\n              padding: 0,\n              display: false,\n            },\n            ticks: {\n              display: false,\n              // Avoid getting the graph line cut of at the top of the canvas.\n              // Chart.js bug link: https://github.com/chartjs/Chart.js/issues/4790\n              suggestedMax: maxValue + difference * 0.1,\n              suggestedMin: minValue - difference * 0.1,\n            },\n          },\n        ],\n      },\n    };\n  }, [maxValue, minValue]);\n\n  const getChartConfig = useCallback(\n    (chartOptions) => {\n      return {\n        type: \"line\",\n        data: {\n          labels: new Array(history.length).fill(null),\n          datasets: [\n            {\n              label: \"Today\",\n              fill: \"start\",\n              borderWidth: 1.5,\n              backgroundColor: \"rgba(0, 153, 153, 0.25)\",\n              borderColor: palette.primary,\n              data: history,\n            },\n          ],\n        },\n        options: chartOptions,\n      };\n    },\n    [history, palette.primary]\n  );\n\n  useEffect(() => {\n    if (!canvasRef.current) return;\n    const chartOptions = getChartOptions();\n    const chartConfig = getChartConfig(chartOptions);\n    const newChartInstance = new ChartElement(canvasRef.current, chartConfig);\n    setChartInstance(newChartInstance);\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    if (!chartInstance) return;\n    let newChartData = {\n      ...chartInstance.data,\n      ...{\n        datasets: [\n          {\n            label: \"Today\",\n            fill: \"start\",\n            borderWidth: 1.5,\n            backgroundColor: \"rgba(0, 153, 153, 0.25)\",\n            borderColor: palette.primary,\n            data: history,\n          },\n        ],\n      },\n    };\n    chartInstance.options = getChartOptions();\n    chartInstance.data = newChartData;\n    chartInstance.update();\n  }, [\n    history,\n    chartInstance,\n    getChartOptions,\n    getChartConfig,\n    palette.primary,\n  ]);\n\n  return (\n    <Card className=\"pt-0 h-100 stats-small\">\n      <div className=\"stats-small__data mx-auto\">\n        <h6 className=\"stats-small__label text-uppercase text-center mb-0 pt-0 mt-0\">\n          <b>Speed</b>\n        </h6>\n        <h2 className=\"my-3 mx-auto\">{speed.current}</h2>\n        <h6 className=\"stats-small__label under text-uppercase text-center\">\n          {speed.unit}/Second\n        </h6>\n      </div>\n      <canvas height=\"100\" ref={canvasRef} className=\"stats-small-1\" />\n    </Card>\n  );\n}\n\nexport default SpeedCard;\n","import React, { useRef, useEffect, useState, useCallback } from \"react\";\nimport ChartElement, {\n  ChartConfiguration,\n  ChartOptions,\n  ChartData,\n} from \"chart.js\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Row,\n  Col,\n  ButtonGroup,\n  Button,\n} from \"shards-react\";\nimport { formatBytes } from \"../../helpers\";\nimport { useTheme } from \"@emotion/react\";\n\nfunction BarChartCard(props: any) {\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n  const [chartInstance, setChartInstance] = useState<ChartElement | null>(null);\n  const [currentTab, setCurrentTab] = useState(\"messages\");\n  const { palette } = useTheme();\n\n  const chartData = props[currentTab];\n\n  const getChartOptions = useCallback((): ChartOptions => {\n    return {\n      animation: { duration: 0 },\n      tooltips: {\n        callbacks: {\n          title: function (tooltipItem: any) {\n            return `Pod: ${tooltipItem[0].xLabel}`;\n          },\n          label: (tooltipItem: any, data: any) => {\n            let label = `${data.datasets[tooltipItem.datasetIndex].label}: ${\n              currentTab === \"bytes\"\n                ? formatBytes(tooltipItem.value)\n                : tooltipItem.value\n            }`;\n            return label;\n          },\n          afterLabel: (tooltipItem: any) => {\n            let text = \"\\nProcess ID: \" + chartData[tooltipItem.index].process;\n            return text;\n          },\n        },\n      },\n      scales: {\n        xAxes: [\n          {\n            stacked: true,\n          },\n        ],\n        yAxes: [\n          {\n            stacked: true,\n            ticks: {\n              callback: (label: number) => {\n                if (currentTab === \"bytes\") return formatBytes(label);\n                return label > 999 ? `${(label / 1000).toFixed(0)}k` : label;\n              },\n            },\n          },\n        ],\n      },\n      maintainAspectRatio: false,\n    };\n  }, [chartData, currentTab]);\n\n  const getChartConfig = useCallback(\n    (chartOptions: ChartOptions): ChartConfiguration => {\n      return {\n        type: \"bar\",\n        options: chartOptions,\n        data: {\n          labels: chartData.map((d: any) => d.node),\n          datasets: [\n            {\n              label: \"msg sent\",\n              fill: \"start\",\n              data: chartData.map((d: any) => d.sent),\n              backgroundColor: palette.primary,\n              borderColor: palette.primary,\n              pointBackgroundColor: palette.background,\n              pointHoverBackgroundColor: palette.primary,\n              borderWidth: 1.5,\n            },\n            {\n              label: \"msg received\",\n              fill: \"start\",\n              data: chartData.map((d: any) => d.received),\n              backgroundColor: palette.success,\n              borderColor: palette.success,\n              pointBackgroundColor: palette.background,\n              pointHoverBackgroundColor: palette.success,\n              borderWidth: 1.5,\n            },\n          ],\n        },\n      };\n    },\n    [chartData, palette.success, palette.primary, palette.background]\n  );\n\n  const getChartData = useCallback(() => {\n    return {\n      labels: chartData.map((d: any) => d.node),\n      datasets: [\n        {\n          label: `${currentTab} sent`,\n          fill: \"start\",\n          data: chartData.map((d: any) => d.sent),\n          backgroundColor: palette.primary,\n          borderColor: palette.primary,\n          pointBackgroundColor: palette.background,\n          pointHoverBackgroundColor: palette.primary,\n          borderWidth: 1.5,\n        },\n        {\n          label: `${currentTab} received`,\n          fill: \"start\",\n          data: chartData.map((d: any) => d.received),\n          backgroundColor: palette.success,\n          borderColor: palette.success,\n          pointBackgroundColor: palette.background,\n          pointHoverBackgroundColor: palette.success,\n          borderWidth: 1.5,\n        },\n      ],\n    };\n  }, [\n    chartData,\n    currentTab,\n    palette.success,\n    palette.primary,\n    palette.background,\n  ]);\n\n  useEffect(() => {\n    if (!canvasRef.current) return;\n    const chartOptions: ChartOptions = getChartOptions();\n    const chartConfig: ChartConfiguration = getChartConfig(chartOptions);\n    const newChartInstance = new ChartElement(canvasRef.current, chartConfig);\n    setChartInstance(newChartInstance);\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    if (!chartInstance) return;\n    const newData: ChartData = getChartData();\n    const newOptions: ChartOptions = getChartOptions();\n    chartInstance.options = newOptions;\n    chartInstance.data = newData;\n    chartInstance.update();\n  }, [chartData, chartInstance, currentTab, getChartData, getChartOptions]);\n\n  return (\n    <Card small className=\"h-100 mb-4\">\n      <CardHeader className=\"border-bottom\">\n        <h6 className=\"m-0\">Network Load</h6>\n      </CardHeader>\n\n      <CardBody className=\"pt-0\">\n        <Row className=\"border-bottom py-2 bg-light\">\n          <Col sm=\"6\" className=\"col d-flex mb-2 mb-sm-0\">\n            <ButtonGroup>\n              <Button\n                theme=\"white\"\n                active={currentTab === \"messages\"}\n                onClick={() => setCurrentTab(\"messages\")}\n              >\n                Messages\n              </Button>\n              <Button\n                theme=\"white\"\n                active={currentTab === \"bytes\"}\n                onClick={() => setCurrentTab(\"bytes\")}\n              >\n                Bytes\n              </Button>\n            </ButtonGroup>\n          </Col>\n        </Row>\n        <div style={{ position: \"relative\", height: 300 }}>\n          <canvas ref={canvasRef} />\n        </div>\n      </CardBody>\n    </Card>\n  );\n}\n\nexport default BarChartCard;\n","import React, { useRef, useState, useCallback, useEffect } from \"react\";\nimport { Card } from \"shards-react\";\n\nimport ChartElement, { ChartOptions } from \"chart.js\";\n\ntype Props = {\n  qps: {\n    history: any;\n    current: any;\n  };\n};\n\nfunction QueriesPerSecondCard({ qps }: Props) {\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n  const [chartInstance, setChartInstance] = useState<ChartElement | null>(null);\n  const { history } = qps;\n\n  let maxValue = Math.max(...history);\n  let minValue = Math.min(...history);\n\n  const getChartOptions = useCallback((): ChartOptions => {\n    const difference = maxValue - minValue;\n    return {\n      maintainAspectRatio: true,\n      responsive: true,\n      animation: { duration: 0 },\n      legend: {\n        display: false,\n      },\n      tooltips: {\n        enabled: false,\n      },\n      elements: {\n        point: {\n          radius: 0,\n        },\n        line: {\n          tension: 0.33,\n        },\n      },\n      layout: {\n        padding: {\n          bottom: -10,\n          left: -10,\n        },\n      },\n      scales: {\n        xAxes: [\n          {\n            gridLines: {\n              display: false,\n            },\n            ticks: {\n              display: false,\n            },\n          },\n        ],\n        yAxes: [\n          {\n            gridLines: {\n              display: false,\n            },\n            scaleLabel: {\n              display: false,\n            },\n            ticks: {\n              display: false,\n              // Avoid getting the graph line cut of at the top of the canvas.\n              // Chart.js bug link: https://github.com/chartjs/Chart.js/issues/4790\n              suggestedMax: maxValue + difference * 0.1,\n              suggestedMin: minValue - difference * 0.1,\n            },\n          },\n        ],\n      },\n    };\n  }, [maxValue, minValue]);\n\n  const getChartConfig = useCallback(\n    (chartOptions) => {\n      return {\n        type: \"line\",\n        data: {\n          labels: new Array(history.length).fill(null),\n          datasets: [\n            {\n              label: \"Today\",\n              fill: \"start\",\n              borderWidth: 1.5,\n              backgroundColor: \"rgba(50, 200, 205, 0.25)\",\n              borderColor: \"#32c8cd\",\n              data: history,\n            },\n          ],\n        },\n        options: chartOptions,\n      };\n    },\n    [history]\n  );\n\n  useEffect(() => {\n    if (!canvasRef.current) return;\n    const chartOptions = getChartOptions();\n    const chartConfig = getChartConfig(chartOptions);\n    const newChartInstance = new ChartElement(canvasRef.current, chartConfig);\n    setChartInstance(newChartInstance);\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    if (!chartInstance) return;\n    let newChartData = {\n      ...chartInstance.data,\n      ...{\n        datasets: [\n          {\n            label: \"Today\",\n            fill: \"start\",\n            borderWidth: 1.5,\n            backgroundColor: \"rgba(50, 200, 205, 0.25)\",\n            borderColor: \"#32c8cd\",\n            data: history,\n          },\n        ],\n      },\n    };\n    chartInstance.options = getChartOptions();\n    chartInstance.data = newChartData;\n    chartInstance.update();\n  }, [history, chartInstance, getChartOptions, getChartConfig]);\n\n  return (\n    <Card className=\"pt-0 h-100 stats-small\">\n      <div className=\"stats-small__data mx-auto\">\n        <h6 className=\"stats-small__label text-uppercase text-center mb-0 pt-0 mt-0\">\n          <b>QPS</b>\n        </h6>\n        <h2 className=\"my-3 mx-auto\">{qps.current}</h2>\n        <h6 className=\"stats-small__label under text-uppercase text-center\">\n          Queries/Second\n        </h6>\n      </div>\n      <canvas height=\"100\" ref={canvasRef} className=\"stats-small-1\" />\n    </Card>\n  );\n}\n\nexport default QueriesPerSecondCard;\n","import { State } from \"../index\";\n\nexport const selectTaskData = (state: State) => state.taskState.taskData;\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { PageTitle } from \"../components/Common/PageTitle\";\nimport ElapsedCard from \"../components/Task/ElapsedCard\";\nimport ProgressCard from \"../components/Task/ProgressCard\";\nimport SpeedCard from \"../components/Task/SpeedCard\";\nimport BarChartCard from \"../components/Task/BarChartCard\";\nimport QueriesPerSecond from \"../components/Task/QueriesPerSecond\";\nimport { useSelector } from \"react-redux\";\nimport { selectTaskData } from \"../redux/task/task.selectors\";\n\nfunction TaskView() {\n  const taskData = useSelector(selectTaskData);\n\n  return (\n    <Container fluid className=\"main-content-container px-0\">\n      <div className=\"px-4\">\n        <Row noGutters className=\"page-header mb-4\">\n          <PageTitle title=\"Task\" className=\"text-sm-left mb-3\" />\n        </Row>\n        <Row>\n          <Col md=\"6\" lg=\"6\" xl=\"3\" className=\"mb-4\">\n            <ElapsedCard elapsed={taskData.elapsed} />\n          </Col>\n          <Col md=\"6\" lg=\"6\" xl=\"3\" className=\"mb-4\">\n            <ProgressCard progress={taskData.progress} />\n          </Col>\n          <Col md=\"6\" lg=\"6\" xl=\"3\" className=\"mb-4\">\n            <QueriesPerSecond qps={taskData.qps} />\n          </Col>\n          <Col md=\"6\" lg=\"6\" xl=\"3\" className=\"mb-4\">\n            <SpeedCard speed={taskData.speed} />\n          </Col>\n        </Row>\n        <BarChartCard\n          messages={taskData.messages}\n          bytes={taskData.bytes}\n          lastUpdate={taskData.lastUpdateChart}\n        />\n      </div>\n    </Container>\n  );\n}\n\nexport default TaskView;\n","import { SettingName } from \"../../redux/settings/settings.types\";\n\ntype LabelName =\n  | \"Host\"\n  | \"Log\"\n  | \"Profile\"\n  | \"YAML\"\n  | \"Shutdown\"\n  | \"Ready\"\n  | \"Port\";\n\ntype Option = {\n  label: LabelName;\n  placeholder: string;\n  value: SettingName;\n};\n\nexport const baseOptions: Option[] = [\n  {\n    label: \"Host\",\n    placeholder: \"0.0.0.0\",\n    value: \"host\",\n  },\n  {\n    label: \"Port\",\n    placeholder: \"5000\",\n    value: \"port\",\n  },\n];\n\nexport const advancedOptions: Option[] = [\n  {\n    label: \"Log\",\n    placeholder: \"/stream/log\",\n    value: \"log\",\n  },\n  {\n    label: \"Profile\",\n    placeholder: \"/stream/profile\",\n    value: \"profile\",\n  },\n  {\n    label: \"YAML\",\n    placeholder: \"/data/yaml\",\n    value: \"yaml\",\n  },\n  {\n    label: \"Shutdown\",\n    placeholder: \"/action/shutdown\",\n    value: \"shutdown\",\n  },\n  {\n    label: \"Ready\",\n    placeholder: \"/status/isready\",\n    value: \"ready\",\n  },\n];\n","import React from \"react\";\nimport { Col, FormInput } from \"shards-react\";\nimport { SettingName } from \"../../redux/settings/settings.types\";\n\ntype Props = {\n  colSpan?: number;\n  label: string;\n  value: SettingName;\n  placeholder: string;\n  onChange: (e: any) => void;\n};\n\nexport default function FormItem({\n  colSpan = 6,\n  label,\n  value,\n  placeholder,\n  onChange,\n}: Props) {\n  return (\n    <Col md={colSpan} className=\"form-group\">\n      <label>{label}</label>\n      <FormInput placeholder={placeholder} value={value} onChange={onChange} />\n    </Col>\n  );\n}\n","import { State } from \"../index\";\n\nexport const selectSettings = (state: State) => state.settingsState.settings;\n","import React, { useState } from \"react\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Form,\n  Row,\n} from \"shards-react\";\nimport { Collapse } from \"react-bootstrap\";\n\nimport { advancedOptions, baseOptions } from \"./options\";\nimport FormItem from \"./FormItem\";\nimport {\n  SettingName,\n  SettingUpdate,\n} from \"../../redux/settings/settings.types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateSettings } from \"../../redux/settings/settings.actions\";\nimport { selectSettings } from \"../../redux/settings/settings.selectors\";\n\nfunction SettingsCard() {\n  const [updates, setUpdates] = useState<SettingUpdate>({});\n  const [expanded, setExpanded] = useState(false);\n\n  const settings = useSelector(selectSettings);\n\n  const dispatch = useDispatch();\n\n  function changeSetting(setting: SettingName, value: string) {\n    const newUpdates: SettingUpdate = { ...updates };\n    newUpdates[setting] = value;\n    setUpdates(newUpdates);\n  }\n\n  function saveChanges() {\n    dispatch(updateSettings(updates));\n  }\n\n  function toggleExpand() {\n    setExpanded(!expanded);\n  }\n\n  return (\n    <Card small className=\"mb-4\">\n      <CardHeader className=\"border-bottom\">\n        <h6 className=\"m-0\">Connection Preferences</h6>\n      </CardHeader>\n      <CardBody>\n        <Form>\n          <Row form>\n            {baseOptions.map(({ label, placeholder, value }) => (\n              <FormItem\n                key={value as string}\n                label={label}\n                placeholder={placeholder}\n                value={\n                  (value in updates\n                    ? updates[value]\n                    : settings[value]) as SettingName\n                }\n                onChange={(e) => changeSetting(value, e.target.value)}\n              />\n            ))}\n          </Row>\n          <Row>\n            <Col xs=\"6\">\n              <strong\n                aria-controls=\"collapsed-form\"\n                aria-expanded={expanded}\n                onClick={toggleExpand}\n                className=\"text-primary d-inline-block mb-3 cursor-pointer\"\n              >\n                Advanced{\" \"}\n                <i className=\"material-icons\">\n                  {expanded ? \"arrow_drop_up\" : \"arrow_drop_down\"}\n                </i>\n              </strong>\n            </Col>\n            <Col xs=\"6\" className=\"text-right\">\n              <Button onClick={saveChanges}>Save Changes</Button>\n            </Col>\n          </Row>\n          <Collapse in={expanded}>\n            <div id=\"collapsed-form\">\n              <strong className=\"text-muted d-block mb-3\">Endpoints</strong>\n              <Row form>\n                {advancedOptions.map(({ label, placeholder, value }) => (\n                  <FormItem\n                    key={value}\n                    label={label}\n                    placeholder={placeholder}\n                    value={\n                      (value in updates\n                        ? updates[value]\n                        : settings[value]) as SettingName\n                    }\n                    onChange={(e) =>\n                      changeSetting(value as SettingName, e.target.value)\n                    }\n                  />\n                ))}\n              </Row>\n            </div>\n          </Collapse>\n        </Form>\n      </CardBody>\n    </Card>\n  );\n}\n\nexport default SettingsCard;\n","import { updateSettingsAction, SettingUpdate } from \"./settings.types\";\nimport { UPDATE_SETTINGS } from \"./settings.constants\";\n\nexport function updateSettings(settings: SettingUpdate): updateSettingsAction {\n  return {\n    type: UPDATE_SETTINGS,\n    payload: settings,\n  };\n}\n","import React from \"react\";\nimport { Container, Row } from \"react-bootstrap\";\nimport { PageTitle } from \"../components/Common/PageTitle\";\nimport SettingsCard from \"../components/Settings/Settings\";\n\nclass SettingsView extends React.Component {\n  render = () => {\n    return (\n      <Container fluid className=\"main-content-container px-4\">\n        <Row noGutters className=\"page-header mb-4\">\n          <PageTitle\n            title=\"Settings\"\n            className=\"text-sm-left mb-3\"\n          />\n        </Row>\n        <SettingsCard />\n      </Container>\n    );\n  };\n}\n\nexport default SettingsView;\n","import React from \"react\"\nimport styled from \"@emotion/styled\"\n\nconst ActionItemContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: space-between;\n  border-radius: 0.75rem;\n  padding: 1.5rem;\n  width: 35%;\n`\n\nconst ActionItemTitle = styled.span`\n  font-weight: 600;\n  font-size: 1.5rem;\n`\n\nconst ActionButton = styled.button`\n  background: ${(props) => props.theme.palette.primary};\n  border-radius: 10px;\n  border: none;\n  padding: 1rem 1.5rem;\n  font-size: 1rem;\n  font-weight: 600;\n  color: ${(props) => props.theme.palette.background};\n`\n\ntype overviewActionType = {\n  title: string\n  description: string\n  buttonLabel: string\n  buttonAction: () => void\n}\n\ntype HubOverviewActionProps = {\n  overviewAction: overviewActionType\n}\n\nconst HubOverviewAction = ({ overviewAction }: HubOverviewActionProps) => {\n  const { title, description, buttonLabel, buttonAction } = overviewAction\n  return (\n    <ActionItemContainer>\n      <>\n        <ActionItemTitle data-name=\"hubOverviewActionTitle\">\n          {title}\n        </ActionItemTitle>\n        <p>{description}</p>\n      </>\n      <ActionButton\n        data-name=\"hubOverviewActionButtonLabel\"\n        onClick={buttonAction}\n      >\n        {buttonLabel}\n      </ActionButton>\n    </ActionItemContainer>\n  )\n}\n\nexport default HubOverviewAction\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport HubOverviewAction from \"./HubOverviewAction\";\n\ntype HubOverviewActionDataType = {\n  title: string;\n  description: string;\n  buttonLabel: string;\n  buttonAction: () => void;\n};\n\nconst HubOverviewActionsContainer = () => {\n  const history = useHistory();\n\n  const hubOverviewActionsData: HubOverviewActionDataType[] = [\n    {\n      title: \"Explore\",\n      description:\n        \"Find out what you can do in Jina hub and how you platform works.\",\n      buttonLabel: \"Read more\",\n      buttonAction: () => history.push(\"/hub/explore\"),\n    },\n    {\n      title: \"Create\",\n      // design is not final. Description will probably change.\n      description: \"Create flow\",\n      buttonLabel: \"Let's Go\",\n      buttonAction: () => history.push(\"/flow\"),\n    },\n  ];\n\n  return (\n    <>\n      {hubOverviewActionsData.map((overviewAction) => (\n        <HubOverviewAction\n          overviewAction={overviewAction}\n          key={overviewAction.title}\n        />\n      ))}\n    </>\n  );\n};\n\nexport default HubOverviewActionsContainer;\n","import React from \"react\";\nimport ImageCard from \"./ImageCard\";\nimport styled from \"@emotion/styled\";\nimport { useSelector } from \"react-redux\";\nimport { Row, Col } from \"react-bootstrap\";\nimport {\n  selectHubImages,\n  selectIsHubImagesLoading,\n} from \"../../redux/hub/hub.selectors\";\nimport SpinningLoader from \"../Common/SpinningLoader\";\n\nconst SubTitle = styled.span`\n  font-weight: 500;\n  font-size: 1.5rem;\n`;\n\nconst HubImagesListPreview = () => {\n  const hubImages = useSelector(selectHubImages).slice(0, 6);\n  const isHubImagesLoading = useSelector(selectIsHubImagesLoading);\n\n  return (\n    <>\n      {isHubImagesLoading ? (\n        <SpinningLoader />\n      ) : (\n        <>\n          <SubTitle data-name=\"hubImagesPreviewSubtitle\">Latest</SubTitle>\n          <Row>\n            {hubImages.map((image, index) => (\n              <Col\n                key={`${image.name}.${image.version}.${image[\"jina-version\"]}`}\n                md=\"4\"\n                className=\"mb-4\"\n              >\n                <ImageCard image={image} index={index} />\n              </Col>\n            ))}\n          </Row>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default HubImagesListPreview;\n","import React, { useEffect } from \"react\";\nimport { Switch, Route, useRouteMatch } from \"react-router-dom\";\nimport { Container, Row } from \"react-bootstrap\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchHubImages } from \"../redux/hub/hub.actions\";\nimport { PageTitle } from \"../components/Common/PageTitle\";\nimport HubOverviewActionsContainer from \"../components/Hub/HubOverviewActionsContainer\";\nimport HubImagesListPreview from \"../components/Hub/HubImagesListPreview\";\nimport HubImagesList from \"../components/Hub/HubImagesList\";\n\nconst HubView = () => {\n  const { path } = useRouteMatch();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchHubImages());\n  }, [dispatch]);\n\n  return (\n    <Container fluid className=\"main-content-container px-0\">\n      <div className=\"px-4\">\n        <Row className=\"page-header\">\n          <PageTitle title=\"Jina Hub\" className=\"text-sm-left mb-3\" />\n        </Row>\n        <Switch>\n          <Route exact path={path}>\n            <Row>\n              <HubOverviewActionsContainer />\n            </Row>\n            <HubImagesListPreview />\n          </Route>\n          <Route path={`${path}/explore`}>\n            <HubImagesList />\n          </Route>\n        </Switch>\n      </div>\n    </Container>\n  );\n};\n\nexport default HubView;\n","import React from \"react\"\nimport styled from \"@emotion/styled\"\nimport { useTheme } from \"@emotion/react\"\nimport { useSelector } from \"react-redux\"\nimport { selectFlows } from \"../../redux/flows/flows.selectors\"\n\ntype ConnectionIndicatorProps = {\n  connected: boolean\n  show: boolean\n}\n\nfunction ConnectionIndicator({ connected, show }: ConnectionIndicatorProps) {\n  if (!show) return null\n  return connected ? (\n    <i className=\"material-icons ml-2 text-success\">wifi</i>\n  ) : (\n    <i className=\"material-icons ml-2 text-warning\">wifi_off</i>\n  )\n}\n\nfunction TitleConnectionIndicator({\n  connected,\n  show,\n}: ConnectionIndicatorProps) {\n  if (!show) return null\n  return connected ? (\n    <i className=\"material-icons text-white ml-1 mr-2\">wifi</i>\n  ) : (\n    <i className=\"material-icons text-warning ml-1 mr-2\">wifi_off</i>\n  )\n}\n\ntype DeleteFlowProps = {\n  deleteFlow: (e: any) => void\n}\n\nfunction DeleteFlowButton({ deleteFlow }: DeleteFlowProps) {\n  const Delete = styled.div`\n    cursor: pointer;\n    font-size: 1.25rem;\n    margin-right: -0.125rem;\n  `\n  return (\n    <Delete>\n      <i onClick={deleteFlow} className=\"material-icons\">\n        delete\n      </i>\n    </Delete>\n  )\n}\n\ntype FlowSelectionProps = {\n  showNewFlowModal: () => void\n  loadFlow: (flowId: string) => void\n  createNewFlow: (e: any) => void\n  deleteFlow: (e: any, flowId: string) => void\n  selectedFlowId: string\n  connected: boolean\n}\n\nexport default function FlowSelection({\n  loadFlow,\n  selectedFlowId,\n  showNewFlowModal,\n  deleteFlow,\n  connected,\n}: FlowSelectionProps) {\n  const flows = useSelector(selectFlows)\n  const { palette } = useTheme()\n\n  const FlowSelectionMenu = styled.div`\n    font-family: \"Montserrat\", serif;\n    min-width: 12rem;\n    margin-right: 3rem;\n  `\n\n  const SelectedFlowHeader = styled.div`\n    font-weight: 600;\n    font-size: 20px;\n    color: ${palette.headerTextColor};\n    margin-bottom: 1rem;\n  `\n\n  type FlowTapProps = {\n    selected: boolean\n  }\n\n  const FlowTap = styled.div`\n    font-weight: ${(props: FlowTapProps) => (props.selected ? \"bold\" : 500)};\n    font-size: 14px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    margin-left: 1rem;\n    margin-bottom: 1rem;\n  `\n\n  const FlowHeader = styled.div`\n    cursor: pointer;\n    font-weight: 600;\n    font-size: 14px;\n    margin-bottom: 1rem;\n    color: ${palette.headerTextColor};\n  `\n\n  const FlowName = styled.span`\n    cursor: pointer;\n  `\n\n  const userFlows = Object.entries(flows).filter(\n    ([id, flow]) => flow.type !== \"example\"\n  )\n\n  const exampleFlows = Object.entries(flows).filter(\n    ([id, flow]) => flow.type === \"example\"\n  )\n\n  const currentFlow = flows[selectedFlowId]\n\n  return (\n    <FlowSelectionMenu>\n      <SelectedFlowHeader>\n        {currentFlow.name}\n        <TitleConnectionIndicator\n          show={currentFlow.type === \"remote\"}\n          connected={connected}\n        />\n      </SelectedFlowHeader>\n\n      <FlowTap selected={false} onClick={showNewFlowModal}>\n        New Flow <i className=\"material-icons plus-icon\">add</i>\n      </FlowTap>\n\n      <FlowHeader>My Flows </FlowHeader>\n\n      {userFlows.map(([flowId, flow], idx) => (\n        <FlowTap selected={currentFlow.name === flow.name} key={idx}>\n          <FlowName\n            onClick={() => {\n              loadFlow(flowId)\n            }}\n          >\n            {flow.name}\n          </FlowName>\n          <ConnectionIndicator\n            show={flow.type === \"remote\"}\n            connected={connected}\n          />\n          {flowId !== \"_userFlow\" && (\n            <DeleteFlowButton deleteFlow={(e: any) => deleteFlow(e, flowId)} />\n          )}\n        </FlowTap>\n      ))}\n      <FlowHeader>Example Flows</FlowHeader>\n      {exampleFlows.map(([flowId, flow], idx) => (\n        <FlowTap\n          selected={currentFlow.name === flow.name}\n          onClick={() => loadFlow(flowId)}\n          key={idx}\n        >\n          {flow.name}\n        </FlowTap>\n      ))}\n    </FlowSelectionMenu>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/Play.bef61d4b.svg\";","export default __webpack_public_path__ + \"static/media/Save.fb5eb30a.svg\";","export default __webpack_public_path__ + \"static/media/Stop.484e40df.svg\";","export default __webpack_public_path__ + \"static/media/Upload.3efa525a.svg\";","export default __webpack_public_path__ + \"static/media/Yaml.010ee2a0.svg\";","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport Play from \"../../assets/icons/Play.svg\";\nimport Save from \"../../assets/icons/Save.svg\";\nimport Stop from \"../../assets/icons/Stop.svg\";\nimport Upload from \"../../assets/icons/Upload.svg\";\nimport Yaml from \"../../assets/icons/Yaml.svg\";\n\ntype Props = {\n  importChart: () => void;\n  copyChart: () => void;\n  exportImage: (format: string) => void;\n  startFlow: () => void;\n  stopFlow: () => void;\n};\n\nconst ButtonGroup = styled.div`\n  height: 3.125rem;\n  background: #009999;\n  border-radius: 8px;\n  display: flex;\n`;\n\nconst Button = styled.button`\n  background: #009999;\n  border: 0;\n  margin-right: 1rem;\n  cursor: pointer;\n  :focus {\n    outline: 0px;\n  }\n`;\n\nconst PlayButton = styled(Button)`\n  margin: 0 2rem;\n`;\n\nexport default function CommandBar({\n  startFlow,\n  stopFlow,\n  importChart,\n  copyChart,\n  exportImage,\n}: Props) {\n  return (\n    <div className=\"command-bar-container\">\n      <div className=\"command-bar\">\n        <ButtonGroup>\n          <PlayButton data-name={\"playButton\"} onClick={startFlow}>\n            <img alt=\"Play\" src={Play} />\n          </PlayButton>\n          <Button data-name={\"stopButton\"} onClick={stopFlow}>\n            <img alt=\"Stop\" src={Stop} />\n          </Button>\n          <Button onClick={() => exportImage(\"png\")}>\n            <img alt=\"Save\" src={Save} />\n          </Button>\n          <Button onClick={importChart}>\n            <img alt=\"Upload\" src={Upload} />\n          </Button>\n          <Button onClick={copyChart}>\n            <img\n              style={{\n                width: \"3rem\",\n                height: \"auto\",\n                marginLeft: \"-0.5rem\",\n                marginTop: \"0.15rem\",\n              }}\n              alt=\"Upload\"\n              src={Yaml}\n            />\n          </Button>\n        </ButtonGroup>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\"\nimport { Handle, Node, Position } from \"react-flow-renderer\"\nimport { showModal } from \"../../redux/global/global.actions\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { selectSelectedFlow } from \"../../redux/flows/flows.selectors\"\nimport styled from \"@emotion/styled\"\n\nexport const ChartNodeElement = styled.div`\n  min-width: 16rem;\n  cursor: move;\n  text-align: center;\n  font-size: 14px;\n  background: #fff;\n  font-weight: 500;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  border-radius: 0.25em;\n  transition: 0.2s;\n  border: 1px solid rgba(0, 153, 153, 0.3);\n`\n\ntype NodePortProps = {\n  type: \"source\" | \"target\"\n}\n\nfunction NodePort({ type }: NodePortProps) {\n  const NodePortTop = styled(Handle)`\n    margin-top: -0.2rem;\n    background-color: white;\n    width: 1rem;\n    height: 1rem;\n    border-radius: 0.5rem;\n    border: 1px solid rgba(0, 153, 153, 0.3); //todo use theming\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    &:after {\n      display: block;\n\n      content: \"\";\n      background-color: #099;\n      color: white;\n      border-radius: 0.25rem;\n      width: 0.5rem;\n      height: 0.5rem;\n    }\n  `\n\n  const NodePortBottom = styled(NodePortTop)`\n    bottom: -0.45rem;\n  `\n  switch (type) {\n    case \"source\":\n      return <NodePortTop type={type} position={Position.Top} />\n    case \"target\":\n      return <NodePortBottom type={type} position={Position.Bottom} />\n  }\n}\n\ntype SidebarProps = {\n  label: string | undefined\n}\ntype ChartNodeProps = Node | SidebarProps\n\nexport default function ChartNode(props: ChartNodeProps) {\n  const flowType = useSelector(selectSelectedFlow).type\n  const dispatch = useDispatch()\n\n  function isNode(prop: ChartNodeProps): prop is Node {\n    return (prop as Node).id !== undefined\n  }\n\n  if (isNode(props)) {\n    const node = props\n    return (\n      <ChartNodeElement\n        onDoubleClick={() => {\n          flowType === \"user-generated\" &&\n            dispatch(showModal(\"podEdit\", { nodeId: node?.id }))\n        }}\n      >\n        {node.id !== \"gateway\" && <NodePort type=\"source\" />}\n        <div id={`chart-node-${node.data.label}`}>\n          <div className=\"node-header\">\n            <div className={`p-1`}>\n              <p className=\"m-1\">\n                <span className=\"text-bold\">\n                  {node.data.label || (\n                    <span className=\"text-warning\">Empty Pod</span>\n                  )}\n                </span>\n              </p>\n            </div>\n          </div>\n        </div>{\" \"}\n        <NodePort type=\"target\" />\n      </ChartNodeElement>\n    )\n  } else\n    return (\n      <ChartNodeElement id={`chart-node-${props.label}`}>\n        <div className=\"node-header\">\n          <div className={`p-1`}>\n            <p className=\"m-1\">\n              <span className=\"text-bold\">\n                {props.label || <span className=\"text-warning\">Empty Pod</span>}\n              </span>\n            </p>\n          </div>\n        </div>\n      </ChartNodeElement>\n    )\n}\n","import * as React from \"react\"\nimport { NodeData } from \"../../redux/flows/flows.types\"\nimport ChartNode from \"./ChartNode\"\n\ntype Props = {\n  label: string\n  data: NodeData\n  idx: number\n}\n\nexport default function SidebarItem({ label, data, idx }: Props) {\n  const onDragStart = (event: React.DragEvent<HTMLDivElement>) => {\n    const dataString = JSON.stringify({ label, ...data })\n    event.dataTransfer.setData(\"application/reactflow\", dataString)\n    event.dataTransfer.effectAllowed = \"move\"\n  }\n\n  const ref: React.RefObject<HTMLInputElement> = React.createRef()\n  return (\n    <div\n      data-name={`SideBarItem-${idx}`}\n      ref={ref}\n      className=\"mb-3 draggable-container\"\n      draggable={true}\n      onDragStart={onDragStart}\n    >\n      <ChartNode label={label} />\n    </div>\n  )\n}\n","const dedaultPods = [\n  {},\n  {\n    name: \"reader\",\n    yaml_path: \"pods/extract.yml\",\n  },\n  {\n    name: \"loader\",\n    yaml_path: \"yaml/craft-load.yml\",\n    parallel: 3,\n    read_only: \"true\",\n  },\n  {\n    name: \"splittor\",\n    yaml_path: \"pods/craft-split.yml\",\n    parallel: 3,\n    read_only: \"true\",\n  },\n  {\n    name: \"encoder\",\n    yaml_path: \"pods/encode.yml\",\n    parallel: 3,\n    timeout_ready: 1200000,\n    read_only: \"true\",\n  },\n  {\n    name: \"chunk_indexer\",\n    yaml_path: \"pods/index-chunk.yml\",\n    parallel: 3,\n    separated_workspace: \"true\",\n  },\n  {\n    name: \"doc_indexer\",\n    yaml_path: \"pods/index-doc.yml\",\n  },\n  {\n    name: \"join_all\",\n    yaml_path: \"_merge\",\n    read_only: \"true\",\n  },\n  {\n    name: \"ranker\",\n    yaml_path: \"MinRanker\",\n  },\n  {\n    name: \"flipper\",\n    yaml_path: \"yaml/craft-flip.yml\",\n    parallel: 3,\n    read_only: \"true\",\n  },\n  {\n    name: \"normalizer\",\n    yaml_path: \"yaml/craft-normalize.yml\",\n    parallel: 3,\n    read_only: \"true\",\n  },\n  {\n    name: \"crafter\",\n    yaml_path: \"pods/craft.yml\",\n    read_only: \"true\",\n  },\n  {\n    name: \"chunk_seg\",\n    yaml_path: \"pods/craft.yml\",\n    parallel: 3,\n  },\n];\n\nexport default dedaultPods;\n","import React from \"react\"\nimport SidebarItem from \"./SidebarItem\"\nimport defaultPods from \"../../data/defaultPods\"\nimport { Button, Card } from \"react-bootstrap\"\nimport { FlowArgument } from \"../../redux/flows/flows.types\"\nimport { Elements } from \"react-flow-renderer\"\n\nfunction ReadOnly({ duplicateFlow }: { duplicateFlow: () => void }) {\n  return (\n    <div className=\"readonly-overlay py-4 px-4 text-center\">\n      <h4 className=\"my-4\">\n        <b>\n          This flow is <span className=\"text-muted\">readonly</span>\n        </b>\n      </h4>\n      <p className=\"my-4\">To edit this flow, please duplicate it.</p>\n      <Button onClick={duplicateFlow}>Duplicate Flow</Button>\n    </div>\n  )\n}\n\nfunction PodMenu() {\n  return (\n    <div className=\"d-flex flex-column h-100\">\n      <h5 className=\"px-3 py-2 mb-0 border-bottom\">\n        <b>Add Pods</b>\n      </h5>\n      <div className=\"p-3 scrollable flex-fill\">\n        {defaultPods.map((pod, idx) => {\n          return (\n            <SidebarItem\n              label={pod.name || \"Empty Pod\"}\n              idx={idx}\n              key={idx}\n              properties={pod}\n            />\n          )\n        })}\n      </div>\n    </div>\n  )\n}\n\ntype FlowChartSidebarProps = {\n  readonly: boolean\n  elements: Elements\n  duplicateFlow: () => void\n  deleteSelection: () => void\n  arguments: FlowArgument[]\n}\n\nfunction FlowChartSidebar({ readonly, duplicateFlow }: FlowChartSidebarProps) {\n  return (\n    <Card className=\"flowchart-sidebar mb-4\">\n      {readonly ? <ReadOnly duplicateFlow={duplicateFlow} /> : <PodMenu />}\n    </Card>\n  )\n}\n\nexport default FlowChartSidebar\n","import ReactFlow, { Elements, isEdge, OnLoadParams } from \"react-flow-renderer\"\nimport React, { MouseEvent, useRef, useState } from \"react\"\nimport { Connection, Edge } from \"react-flow-renderer/dist/types\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport {\n  addLink,\n  addNode,\n  deleteLink,\n  deleteNode,\n  updateNode,\n} from \"../../redux/flows/flows.actions\"\nimport { isNode, Node } from \"react-flow-renderer\"\nimport ChartNode from \"./ChartNode\"\nimport { selectSelectedFlow } from \"../../redux/flows/flows.selectors\"\n\ntype Props = {\n  elements: Elements\n}\n\nconst nodeTypes = {\n  pod: ChartNode,\n  gateway: ChartNode,\n}\n\nexport default function FlowChart(props: Props) {\n  const dispatch = useDispatch()\n  const flow = useSelector(selectSelectedFlow)\n  const [\n    reactFlowInstance,\n    setReactFlowInstance,\n  ] = useState<OnLoadParams | null>(null)\n\n  const reactFlowWrapper = useRef<HTMLElement>(null)\n\n  const onConnect = (params: Edge | Connection) => {\n    if (params.source && params.target)\n      dispatch(addLink(params.source, params.target, null, null))\n  }\n\n  const onElementsRemove = (elements: Elements) => {\n    elements.forEach((element) => {\n      if (isEdge(element)) dispatch(deleteLink(element.id))\n      if (isNode(element)) dispatch(deleteNode(element.id))\n    })\n  }\n\n  const onLoad = (_reactFlowInstance: OnLoadParams) =>\n    setReactFlowInstance(_reactFlowInstance)\n\n  const onDragOver = (event: React.DragEvent<HTMLDivElement>) => {\n    event.preventDefault()\n    event.dataTransfer.dropEffect = \"move\"\n  }\n  const onDrop = (event: React.DragEvent<HTMLDivElement>) => {\n    event.preventDefault()\n    const reactFlowBounds =\n      reactFlowWrapper?.current?.getBoundingClientRect() || new DOMRect()\n    const data = JSON.parse(event.dataTransfer.getData(\"application/reactflow\"))\n    const position = reactFlowInstance?.project({\n      x: event.clientX - reactFlowBounds.left,\n      y: event.clientY - reactFlowBounds.top,\n    }) || { x: 0, y: 0 }\n    dispatch(addNode(data.label, position, data))\n  }\n\n  const onNodeDragStop = (event: MouseEvent, node: Node) => {\n    dispatch(updateNode(node.id, { position: node.position }))\n  }\n\n  return (\n    <div\n      className=\"reactflow-wrapper\"\n      ref={reactFlowWrapper as React.RefObject<HTMLDivElement>}\n      style={{ height: \"100%\", width: \"100%\" }}\n    >\n      <ReactFlow\n        elements={props.elements}\n        onConnect={onConnect}\n        onElementsRemove={onElementsRemove}\n        onLoad={onLoad}\n        onDrop={onDrop}\n        onDragOver={onDragOver}\n        onNodeDragStop={onNodeDragStop}\n        nodeTypes={nodeTypes}\n        nodesDraggable={flow.type !== \"example\"}\n      />\n    </div>\n  )\n}\n","import React, { useCallback, useState } from \"react\"\nimport { Card, Container, Row } from \"shards-react\"\nimport { PageTitle } from \"../components/Common/PageTitle\"\nimport FlowSelection from \"../components/FlowChart/FlowSelection\"\nimport {\n  createNewFlow,\n  deleteFlow,\n  duplicateFlow,\n  loadFlow,\n  startFlow,\n  stopFlow,\n} from \"../redux/flows/flows.actions\"\nimport CommandBar from \"../components/FlowChart/CommandBar\"\n\nimport Sidebar from \"../components/FlowChart/Sidebar\"\nimport styled from \"@emotion/styled\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport {\n  selectFlowArguments,\n  selectSelectedFlow,\n  selectRerender,\n  selectSelectedFlowId,\n} from \"../redux/flows/flows.selectors\"\nimport { selectConnectionStatus } from \"../redux/global/global.selectors\"\nimport { showModal } from \"../redux/global/global.actions\"\nimport logger from \"../logger\"\nimport { copyToClipboard, formatAsYAML } from \"../helpers\"\nimport html2canvas from \"html2canvas\"\nimport FlowChart from \"../components/FlowChart/FlowChart\"\nimport { Flow } from \"../redux/flows/flows.types\"\n\nconst FlowViewContainer = styled.div`\n  display: flex;\n  min-height: 58rem;\n`\n\nexport default function FlowView() {\n  const dispatch = useDispatch()\n  useState(useSelector(selectRerender))\n  const connected = useSelector(selectConnectionStatus)\n  const selectedFlowId = useSelector(selectSelectedFlowId)\n  const flowArguments = useSelector(selectFlowArguments)\n  const flow = useSelector(selectSelectedFlow) as Flow\n  const { flowChart, type: flowType } = flow\n\n  const copyChartAsYAML = useCallback(() => {\n    logger.log(\"copyChartAsYAML | chart:\", flowChart)\n    copyToClipboard(formatAsYAML(flowChart, flowArguments))\n    alert(\"Chart copied to clipboard as YAML\")\n  }, [flowChart, flowArguments])\n\n  const [showOverlay, setShowOverlay] = useState<boolean>(false)\n  //todo fix overlay\n  console.log(showOverlay)\n  const showCaptureOverlay = (showOverlay = true) => {\n    setShowOverlay(showOverlay)\n  }\n\n  const exportImage = (extension = \"png\") => {\n    const chartContainer = document.querySelector(\".chart-container\")\n    const captureOverlay = document.querySelector(\".capture-overlay\")\n    if (!chartContainer) return\n    if (captureOverlay) captureOverlay.classList.add(\"fade-out\")\n\n    showCaptureOverlay()\n    setTimeout(() => showCaptureOverlay(false), 500)\n\n    let canvasParams = {\n      foreignObjectRendering: true,\n      logging: true,\n      x: 0,\n      y: 0,\n      scrollX: 0,\n      scrollY: 0,\n      scale: 5,\n    }\n\n    html2canvas(chartContainer as HTMLElement, canvasParams).then((canvas) => {\n      var image = canvas.toDataURL(`image/${extension}`)\n      var link = document.getElementById(\"download-link\")\n      if (!link) return\n      link.setAttribute(\"download\", `jina-flow-visual.${extension}`)\n      link.setAttribute(\"href\", image)\n      link.click()\n    })\n  }\n\n  const handleDuplicateFlow = () => {\n    const flowYAML = formatAsYAML(flowChart, flowArguments)\n    dispatch(duplicateFlow(flowYAML))\n  }\n\n  return (\n    <Container fluid className=\"main-content-container px-0\">\n      <div className=\"px-4\">\n        <a href=\"/#\" id=\"download-link\" style={{ display: \"none\" }}>\n          download\n        </a>\n        <Row noGutters className=\"page-header mb-4\">\n          <PageTitle title=\"FlowChart Design\" className=\"text-sm-left mb-3\" />\n        </Row>\n\n        <FlowViewContainer>\n          <FlowSelection\n            connected={connected}\n            selectedFlowId={selectedFlowId}\n            showNewFlowModal={() => dispatch(showModal(\"newFlow\"))}\n            createNewFlow={() => dispatch(createNewFlow())}\n            loadFlow={(flowId) => dispatch(loadFlow(flowId))}\n            deleteFlow={(e, flowId) => dispatch(deleteFlow(flowId))}\n          />\n\n          <Card className=\"chart-section-container mr-md-4 mb-4\">\n            <CommandBar\n              startFlow={() => dispatch(startFlow(selectedFlowId))}\n              stopFlow={() => dispatch(stopFlow(selectedFlowId))}\n              copyChart={copyChartAsYAML}\n              importChart={() => dispatch(showModal(\"import\"))}\n              exportImage={exportImage}\n            />\n\n            <FlowChart elements={flowChart.elements} />\n          </Card>\n\n          <Sidebar\n            arguments={flowArguments.pod}\n            duplicateFlow={handleDuplicateFlow}\n            readonly={flowType !== \"user-generated\"}\n            elements={flowChart.elements}\n            deleteSelection={() => {}}\n          />\n        </FlowViewContainer>\n      </div>\n    </Container>\n  )\n}\n","import React from \"react\"\nimport { Redirect } from \"react-router-dom\"\n\n// Layout Types\nimport { IconSidebar } from \"../layouts\"\n\n// Route Views\nimport { LogsView } from \"../views/LogsView\"\nimport TaskView from \"../views/TaskView\"\nimport Settings from \"../views/Settings\"\nimport HubView from \"../views/HubView\"\nimport PackageView from \"../views/PackageView\"\nimport LogIn from \"../views/LogIn\"\n\nimport NotFound from \"../views/NotFound\"\nimport NavigateButton from \"../components/Common/NavigateButton\"\nimport FlowView from \"../views/FlowView\"\n\nexport const dashboardRoutes = [\n  {\n    path: \"/\",\n    exact: true,\n    layout: IconSidebar,\n    component: () => <Redirect to=\"/logs\" />,\n  },\n  {\n    path: \"/logs\",\n    layout: IconSidebar,\n    component: LogsView,\n    props: {\n      usesConnection: true,\n      usesAuth: false,\n    },\n  },\n  {\n    path: \"/flow\",\n    layout: IconSidebar,\n    component: FlowView,\n    props: {\n      usesConnection: true,\n      usesAuth: false,\n    },\n  },\n  {\n    path: \"/task\",\n    layout: IconSidebar,\n    component: TaskView,\n    props: {\n      usesConnection: true,\n      usesAuth: false,\n    },\n  },\n  {\n    path: \"/settings\",\n    layout: IconSidebar,\n    component: Settings,\n    props: {\n      usesConnection: true,\n      usesAuth: false,\n    },\n  },\n  {\n    path: \"/help\",\n    layout: IconSidebar,\n    component: NotFound,\n    props: {\n      usesConnection: false,\n      usesAuth: false,\n    },\n  },\n  {\n    path: \"/home\",\n    layout: IconSidebar,\n    component: NotFound,\n    props: {\n      usesConnection: false,\n      usesAuth: false,\n    },\n  },\n  {\n    path: \"/hub\",\n    layout: IconSidebar,\n    component: HubView,\n    props: {\n      usesConnection: false,\n      usesAuth: true,\n    },\n  },\n  {\n    path: \"/package/:packageId\",\n    layout: IconSidebar,\n    component: PackageView,\n    props: {\n      navigateButton: () => (\n        <NavigateButton label={\"❮  Back\"} path={\"/hub/explore\"} />\n      ),\n    },\n  },\n  {\n    path: \"/login\",\n    layout: IconSidebar,\n    component: LogIn,\n    props: {\n      usesConnection: false,\n      usesAuth: true,\n    },\n  },\n]\n","export const { dashboardRoutes } = require(\"./Dashboard\");\nexport const { hubRoutes } = require(\"./Hub\");\n","import React from \"react\";\nimport GoogleAnalytics from \"react-ga\";\n\nGoogleAnalytics.initialize(process.env.REACT_APP_GAID || \"UA-164627626-1\");\n\nconst withTracker = (WrappedComponent: any, options = {}) => {\n  const trackPage = (page: any) => {\n    if (process.env.NODE_ENV !== \"production\") {\n      return;\n    }\n\n    GoogleAnalytics.set({\n      page,\n      ...options,\n    });\n    GoogleAnalytics.pageview(page);\n  };\n\n  const BASENAME = process.env.REACT_APP_BASENAME || \"\";\n\n  // eslint-disable-next-line\n  const HOC = class extends React.Component<any, any> {\n    componentDidMount() {\n      // eslint-disable-next-line\n      const page = this.props.location.pathname + this.props.location.search;\n      trackPage(`${BASENAME}${page}`);\n    }\n\n    componentDidUpdate(prevProps: any) {\n      const currentPage =\n        prevProps.location.pathname + prevProps.location.search;\n      const nextPage =\n        this.props.location.pathname + this.props.location.search;\n\n      if (currentPage !== nextPage) {\n        trackPage(`${BASENAME}${nextPage}`);\n      }\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  };\n\n  return HOC;\n};\n\nexport default withTracker;\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { FallbackProps } from \"react-error-boundary\";\nimport { PageTitle } from \"../components/Common/PageTitle\";\nimport { Button } from \"shards-react\";\n\nfunction FallbackPage({ error, resetErrorBoundary }: FallbackProps) {\n  return (\n    <Container fluid className=\"main-content-container p-5\">\n      <Row noGutters className=\"page-header mb-4\">\n        <PageTitle\n          title=\"Error\"\n          subtitle=\"This should not have happened\"\n          className=\"text-sm-left my-3\"\n        />\n      </Row>\n      <Row noGutters className=\"page-header mb-4\">\n        <Col xs=\"12\" sm=\"3\">\n          <p>Something went wrong:</p>\n          <pre>\n            <code className=\"text-warning\">{error!.message}</code>\n          </pre>\n        </Col>\n      </Row>\n      <Row noGutters className=\"page-header\">\n        <Col>\n          <Button onClick={resetErrorBoundary}>Try again</Button>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport { FallbackPage };\n","import React from \"react\"\nimport { HashRouter as Router, Route } from \"react-router-dom\"\n\nimport { hubRoutes as routes } from \"../routes\"\nimport withTracker from \"../withTracker\"\n\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport \"../App.css\"\nimport { ErrorBoundary } from \"react-error-boundary\"\nimport { FallbackPage } from \"../views/FallbackPage\"\n\nconst Hub = () => {\n  document.title = \"Jina Hub\"\n  return (\n    <Router basename={\"/\"}>\n      <div>\n        {routes.map((route: any, index: number) => {\n          return (\n            <Route\n              key={index}\n              path={route.path}\n              exact={route.exact}\n              component={withTracker((props: any) => {\n                return (\n                  <route.layout {...props} {...route.props}>\n                    <ErrorBoundary FallbackComponent={FallbackPage}>\n                      <route.component {...props} />\n                    </ErrorBoundary>\n                  </route.layout>\n                )\n              })}\n            />\n          )\n        })}\n      </div>\n    </Router>\n  )\n}\n\nexport { Hub }\n","import { GlobalState, TNavItem } from \"./global.types\";\n\nexport const HANDLE_CONNECTION_STATUS = \"HANDLE_CONNECTION_STATUS\";\nexport const TOGGLE_SIDE_BAR = \"TOGGLE_SIDE_BAR\";\nexport const SHOW_BANNER = \"SHOW_BANNER\";\nexport const HIDE_BANNER = \"HIDE_BANNER\";\nexport const SHOW_ERROR = \"SHOW_ERROR\";\nexport const SHOW_MODAL = \"SHOW_MODAL\";\nexport const CLOSE_MODAL = \"CLOSE_MODAL\";\nexport const CONNECT_JINAD = \"CONNECT_JINAD\";\nexport const FETCH_ARGUMENTS_FROM_API = \"FETCH_ARGUMENTS_FROM_API\";\nexport const FETCH_ARGUMENTS_FROM_DAEMON = \"FETCH_ARGUMENTS_FROM_DAEMON\";\n\nexport const HIDE_BANNER_TIMEOUT = 5000;\n\nconst navItems: TNavItem[] = [\n  {\n    title: \"Home\",\n    to: \"/home\",\n    iconName: \"home\",\n    matches: [\"home\"],\n  },\n  {\n    title: \"Log Stream\",\n    to: \"/logs\",\n    iconName: \"insert_comment\",\n    matches: [\"logs\"],\n  },\n  {\n    title: \"Flow Design\",\n    to: \"/flow\",\n    iconName: \"device_hub\",\n    matches: [\"flow\"],\n  },\n  {\n    title: \"Hub\",\n    to: \"/hub\",\n    iconName: \"store\",\n    matches: [\"hub\", \"package\"],\n  },\n  {\n    title: \"Settings\",\n    to: \"/settings\",\n    iconName: \"settings\",\n    matches: [\"settings\"],\n  },\n  {\n    title: \"Help\",\n    to: \"/help\",\n    iconName: \"help\",\n    matches: [\"help\"],\n  },\n];\n\nexport const initialGlobalState: GlobalState = {\n  user: null,\n  banner: null,\n  connected: false,\n  currentTab: \"logStream\",\n  loading: true,\n  menuVisible: false,\n  modal: null,\n  modalParams: null,\n  navItems,\n  processes: {},\n};\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { ThemeProvider } from \"@emotion/react\"\nimport { Provider } from \"react-redux\"\nimport { theme } from \"./theme\"\nimport * as Sentry from \"@sentry/react\"\nimport { Integrations } from \"@sentry/tracing\"\n\nimport \"bootstrap/dist/css/bootstrap.min.css\"\n// Todo: Remove shards and associated styles when we stop using it\nimport \"./styles/shards-dashboards.scss\"\nimport \"./App.css\"\nimport store from \"./redux\"\n\nlet App\n\nif (process.env.REACT_APP_TARGET === \"hub\") {\n  const { Hub } = require(\"./apps/Hub\")\n  App = Hub\n} else if (process.env.REACT_APP_TARGET === \"styleguide\") {\n  const { Styleguide } = require(\"./apps/Styleguide\")\n  App = Styleguide\n} else {\n  const { Dashboard } = require(\"./apps/Dashboard\")\n  App = Dashboard\n}\n\nSentry.init({\n  dsn:\n    \"https://085edd94ec3e479cb20f2c65f7b8cb82@o525420.ingest.sentry.io/5639443\",\n  integrations: [new Integrations.BrowserTracing()],\n  tracesSampleRate: 1.0,\n})\n\nReactDOM.render(\n  // HOC to make theme available as a prop in all components\n  <ThemeProvider theme={theme}>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n)\n","const PERSIAN_GREEN = \"#009999\";\nconst GOLDEN_TANOI = \"#FFCC66\";\nconst BITTER_SWEET = \"#ff6666\";\nconst SCOOTER_GREEN = \"#32C8CD\";\nconst WHITE = \"#FFFFFF\";\nconst DADGREY = \"#DAD7FE\";\nconst SKY_DIVING_IN_THE_BLUE = \"#007AFF\";\nconst QUICK_SILVER = \"#A6A6A6\";\nconst HONEYBEE = \"#FFCC66\";\nconst BLACK = \"#000000\";\n\nconst theme = {\n  palette: {\n    background: WHITE,\n    headerTextColor: BLACK,\n    primary: PERSIAN_GREEN,\n    secondary: GOLDEN_TANOI,\n    warning: GOLDEN_TANOI,\n    error: BITTER_SWEET,\n    success: SCOOTER_GREEN,\n    info: PERSIAN_GREEN,\n    critical: \"#ff4540\",\n    debug: \"#7E7278\",\n    tagBackground: DADGREY,\n    tagPlatformBackground: HONEYBEE,\n    mutedText: QUICK_SILVER,\n    highlight: SKY_DIVING_IN_THE_BLUE,\n  },\n};\n\nexport { theme };\n","import React from \"react\";\n\nfunction NavbarSpacer() {\n  return (\n    <div className=\"main-navbar__search w-100 d-none d-md-flex d-lg-flex\"></div>\n  );\n}\n\nexport { NavbarSpacer };\n","import React from \"react\";\n// @ts-ignore\nimport { NavItem, NavLink, Badge } from \"shards-react\";\n\ntype Props = {\n  connected?: boolean;\n  reconnect?: () => void;\n};\n\nfunction ConnectionIndicator({ connected, reconnect }: Props) {\n  return (\n    <NavItem\n      className=\"dropdown notifications\"\n      onClick={reconnect}\n    >\n      <NavLink className=\"nav-link-icon text-center\">\n        <div className=\"nav-link-icon__wrapper\">\n          <i className=\"material-icons\">language</i>\n          {connected ? (\n            <Badge pill theme=\"success\" className=\"connection-indicator p-1\">\n              <i className=\"material-icons\">done</i>\n            </Badge>\n          ) : (\n            <Badge pill theme=\"danger\" className=\"connection-indicator p-1\">\n              <i className=\"material-icons\">close</i>\n            </Badge>\n          )}\n        </div>\n      </NavLink>\n    </NavItem>\n  );\n}\n\nexport { ConnectionIndicator };\n","import React from \"react\";\n// @ts-ignore\nimport { NavbarBrand } from \"shards-react\";\n\nfunction NavLogo() {\n  return (\n    <NavbarBrand href=\"#\" style={{ lineHeight: \"25px\" }}>\n      <div className=\"d-table m-auto\">\n        <img\n          id=\"main-logo\"\n          className=\"d-inline-block align-top mr-1 ml-3\"\n          style={{ maxWidth: \"25px\" }}\n          src=\"/icon.png\"\n          alt=\"Jina\"\n        />\n      </div>\n    </NavbarBrand>\n  );\n}\n\nexport { NavLogo };\n","import React from \"react\";\nimport { Container, Navbar, Nav } from \"shards-react\";\nimport { NavbarSpacer } from \"./NavbarSpacer\";\nimport { ConnectionIndicator } from \"./ConnectionIndicator\";\nimport { NavLogo } from \"./NavLogo\";\n\nexport type User = {\n  displayName: string;\n  emails: [{ value: string }];\n  id: string;\n  nodeId: string;\n  photos: [{ value: string }];\n  profileUrl: string;\n  provider: string;\n  username: string;\n  _json: any;\n  _raw: any;\n};\n\ntype Props = {\n  usesAuth: boolean;\n  usesConnection: boolean;\n  connected?: boolean;\n  logOut: () => void;\n  toggleSidebar?: () => void;\n  reconnect?: () => void;\n  user: User | null;\n  hideSidebarToggle?: boolean;\n  showLogo?: boolean;\n  navigateButton?: () => React.ReactNode;\n};\n\nfunction MainNavbar({\n  usesConnection,\n  toggleSidebar,\n  reconnect,\n  connected,\n  showLogo,\n  navigateButton,\n}: Props) {\n  return (\n    <div className=\"main-navbar\">\n      <Container fluid className=\"p-0\">\n        <Navbar\n          type=\"light\"\n          className=\"align-items-stretch flex-md-nowrap p-0 px-2\"\n        >\n          {showLogo && <NavLogo />}\n          {navigateButton && navigateButton()}\n          <NavbarSpacer />\n          <Nav navbar className=\"flex-row\">\n            {usesConnection && (\n              <ConnectionIndicator\n                reconnect={reconnect}\n                connected={connected}\n              />\n            )}\n          </Nav>\n        </Navbar>\n      </Container>\n    </div>\n  );\n}\n\nexport { MainNavbar };\n","import React from \"react\";\nimport { Navbar, NavbarBrand } from \"shards-react\";\n\ntype Props = {\n  toggleSidebar: () => void;\n};\n\nconst SidebarMainNavbar = ({ toggleSidebar }: Props) => {\n  return (\n    <div className=\"main-navbar\">\n      <Navbar\n        className=\"align-items-stretch bg-white flex-md-nowrap p-0\"\n        type=\"light\"\n      >\n        <NavbarBrand\n          className=\"w-100 mr-0\"\n          href=\"#\"\n          style={{ lineHeight: \"25px\" }}\n        >\n          <div className=\"d-table m-auto\">\n            <img\n              id=\"main-logo\"\n              className=\"d-inline-block align-top\"\n              style={{ maxWidth: \"50px\" }}\n              src=\"/jina-light.svg\"\n              alt=\"Jina Dashboard\"\n            />\n          </div>\n        </NavbarBrand>\n        <span\n          className=\"toggle-sidebar d-sm-inline d-md-none d-lg-none\"\n          onClick={toggleSidebar}\n        >\n          <i className=\"material-icons\">&#xE5C4;</i>\n        </span>\n      </Navbar>\n    </div>\n  );\n};\n\nexport default SidebarMainNavbar;\n","import React from \"react\";\nimport { NavLink as RouteNavLink, useLocation } from \"react-router-dom\";\nimport { NavItem, NavLink } from \"shards-react\";\nimport { TNavItem } from \"../../../redux/global/global.types\";\n\ntype Props = {\n  item: TNavItem;\n  toggleSidebar: () => void;\n};\n\nconst SidebarNavItem = ({ item, toggleSidebar }: Props) => {\n  const path = useLocation()?.pathname?.substring(1);\n  let active = false;\n  item.matches.forEach((match) => {\n    if (path === match) active = true;\n  });\n\n  return (\n    <NavItem style={{ position: \"relative\" }}>\n      <NavLink\n        tag={RouteNavLink}\n        to={item.to}\n        active={active}\n        onClick={toggleSidebar}\n      >\n        {item.iconName && (\n          <div className=\"d-inline-block item-icon-wrapper\">\n            <i className=\"material-icons\">{item.iconName}</i>\n          </div>\n        )}\n        {item.title && <span>{item.title}</span>}\n      </NavLink>\n    </NavItem>\n  );\n};\n\nexport default SidebarNavItem;\n","import React from \"react\";\nimport { Nav } from \"shards-react\";\n\nimport SidebarNavItem from \"./SidebarNavItem\";\nimport { TNavItem } from \"../../../redux/global/global.types\";\n\ntype Props = {\n  navItems: TNavItem[];\n  toggleSidebar: () => void;\n};\n\nconst SidebarNavItems = ({ navItems: items, toggleSidebar }: Props) => {\n  return (\n    <div className=\"nav-wrapper\">\n      {typeof items !== \"undefined\" && items.length && (\n        <Nav className=\"nav--no-borders flex-column\">\n          {items.map((item, idx) => (\n            <SidebarNavItem\n              key={idx}\n              item={item}\n              toggleSidebar={toggleSidebar}\n            />\n          ))}\n        </Nav>\n      )}\n    </div>\n  );\n};\n\nexport default SidebarNavItems;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { Col } from \"shards-react\";\n\nimport SidebarMainNavbar from \"./SidebarMainNavbar\";\nimport SidebarNavItems from \"./SidebarNavItems\";\nimport { TNavItem } from \"../../../redux/global/global.types\";\n\ntype Props = {\n  menuVisible: boolean;\n  sidebarNavItems: TNavItem[];\n  toggleSidebar: () => void;\n};\n\nfunction MainSidebar({ menuVisible, sidebarNavItems, toggleSidebar }: Props) {\n  const classes = classNames(\n    \"main-sidebar\",\n    \"px-0\",\n    \"col-12\",\n    menuVisible && \"open\"\n  );\n\n  return (\n    <Col tag=\"aside\" className={classes} lg={{ size: 2 }} md={{ size: 3 }}>\n      <SidebarMainNavbar toggleSidebar={toggleSidebar} />\n      <SidebarNavItems\n        navItems={sidebarNavItems}\n        toggleSidebar={toggleSidebar}\n      />\n    </Col>\n  );\n}\n\nexport default MainSidebar;\n","import React from \"react\";\nimport { Container, Row, Nav } from \"shards-react\";\n\ntype MenuItems = {\n  title: string;\n  to: string;\n};\n\ntype Props = {\n  menuItems: MenuItems[];\n  copyright: string;\n  loggerEnabled: boolean;\n  enableLogger: () => void;\n  disableLogger: () => void;\n  exportLogs: () => void;\n};\n\nconst MainFooter = ({\n  menuItems,\n  copyright,\n  loggerEnabled,\n  enableLogger,\n  disableLogger,\n  exportLogs,\n}: Props) => (\n  <footer className=\"main-footer d-flex p-2 px-3\">\n    <Container fluid>\n      <Row>\n        <Nav>\n          {menuItems.map((item, idx) => (\n            <a key={idx} href={item.to} className=\"nav-link\">\n              {item.title}\n            </a>\n          ))}\n          {loggerEnabled ? (\n            <>\n              <span\n                className=\"nav-link text-warning cursor-pointer\"\n                onClick={disableLogger}\n              >\n                Exit Debug Mode\n              </span>\n              <span\n                className=\"nav-link text-warning cursor-pointer\"\n                onClick={exportLogs}\n              >\n                Export Debug Data\n              </span>\n            </>\n          ) : (\n            <span\n              className=\"nav-link text-warning cursor-pointer\"\n              onClick={enableLogger}\n            >\n              Debug Mode\n            </span>\n          )}\n        </Nav>\n        <span className=\"copyright ml-auto my-auto mr-2\">{copyright}</span>\n      </Row>\n    </Container>\n  </footer>\n);\n\nMainFooter.defaultProps = {\n  contained: false,\n  copyright: \"Copyright © Jina AI Limited\",\n  menuItems: [\n    {\n      title: \"Home\",\n      to: \"https://jina.ai\",\n    },\n    {\n      title: \"Open Source\",\n      to: \"https://opensource.jina.ai\",\n    },\n    {\n      title: \"Learn\",\n      to: \"https://docs.jina.ai\",\n    },\n    {\n      title: \"Community\",\n      to: \"https://twitter.com/JinaAI_\",\n    },\n    {\n      title: \"Jobs\",\n      to: \"https://www.linkedin.com/company/jinaai/jobs/\",\n    },\n    {\n      title: \"Privacy & Terms\",\n      to: \"https://github.com/jina-ai/legal\",\n    },\n  ],\n};\n\nexport default MainFooter;\n","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\n\ntype Props = {\n  acceptCookies: () => void;\n};\n\nfunction CookiesBanner({ acceptCookies }: Props) {\n  return (\n    <div className=\"cookies-banner\">\n      <p className=\"mb-2\">\n        We and third parties use cookies or similar technologies (\"Cookies\") as\n        described below to collect and process personal data, such as your IP\n        address or browser information. You can learn more about how this site\n        uses Cookies by reading our privacy policy linked below. By clicking \"I\n        consent to cookies\", you accept the placement and use of these Cookies\n        for these purposes. You can change your mind and revisit your\n        preferences at any time by accessing the “Cookie Preferences” link in\n        the footer of this site.\n      </p>\n      <Button className=\"ml-auto d-block\" onClick={acceptCookies}>\n        I consent to cookies\n      </Button>\n    </div>\n  );\n}\n\nexport { CookiesBanner };\n","import React from \"react\";\nimport { Toast } from \"react-bootstrap\";\nimport { Banner } from \"../../redux/global/global.types\";\n\ntype Props = {\n  data: Banner;\n};\n\nfunction getIcon(theme: string) {\n  if (theme === \"success\")\n    return <i className=\"material-icons mr-1\">check_circle_outline</i>;\n  else if (theme === \"error\")\n    return <i className=\"material-icons mr-1\">cerror_outline</i>;\n  return <i className=\"material-icons mr-1\">warning</i>;\n}\n\nfunction InfoToast({ data }: Props) {\n  if (!data) return null;\n  const icon = getIcon(data.theme);\n  return (\n    <div\n      data-name=\"connection-notification-online\"\n      className=\"notifications-container\"\n    >\n      <Toast className={`toast-${data.theme} text-white`}>\n        <Toast.Header className=\"text-white\" closeButton={false}>\n          <strong className=\"mr-auto\">\n            {icon}\n            <span className=\"text-uppercase\">{data.theme}</span>\n          </strong>\n        </Toast.Header>\n        <Toast.Body className=\"text-white\">{data.message}</Toast.Body>\n      </Toast>\n    </div>\n  );\n}\n\nexport { InfoToast };\n","import React from \"react\";\nimport { Toast, Button, Row, Col } from \"react-bootstrap\";\n\ntype Props = {\n  reconnect: () => void;\n};\n\nfunction ConnectionToast({ reconnect }: Props) {\n  return (\n    <div\n      className=\"notifications-container\"\n      data-name=\"connection-notification-offline\"\n    >\n      <Toast className=\"bg-warning\">\n        <Toast.Header className=\"bg-warning text-white\" closeButton={false}>\n          <strong className=\"mr-auto\">\n            <i className=\"material-icons mr-1\">warning</i>Could not connect to\n            Jina instance\n          </strong>\n        </Toast.Header>\n        <Toast.Body className=\"text-white\">\n          <Row>\n            <Col xs=\"6\" className=\"pr-2\">\n              <a\n                href=\"https://github.com/jina-ai/dashboard#getting-started\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"mr-2\"\n              >\n                <Button variant=\"light\" className=\"w-100\">\n                  <i className=\"material-icons mr-1\">text_snippet</i>View Docs\n                </Button>\n              </a>\n            </Col>\n            <Col xs=\"6\" className=\"pl-2\">\n              <Button variant=\"primary\" className=\"w-100\" onClick={reconnect}>\n                <i className=\"material-icons mr-1\">refresh</i>Refresh\n              </Button>\n            </Col>\n          </Row>\n        </Toast.Body>\n      </Toast>\n    </div>\n  );\n}\n\nexport { ConnectionToast };\n","import React from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport ReactModal, { Styles } from \"react-modal\";\nconst style: Styles = {\n  overlay: {\n    backgroundColor: \"rgba(38, 50, 56, 0.5)\",\n  },\n  content: {\n    border: \"none\",\n    bottom: \"auto\",\n    maxHeight: \"80%\", // set height\n    left: \"50%\",\n    padding: \"2rem\",\n    position: \"fixed\",\n    right: \"auto\",\n    top: \"50%\", // start from center\n    transform: \"translate(-50%,-50%)\", // adjust top \"up\" based on height\n    width: \"90%\",\n    maxWidth: \"800px\",\n    overflow: \"hidden\",\n  },\n};\n\ntype Props = {\n  open: boolean;\n  closeModal: () => void;\n  importYAML: (yamlString: string) => void;\n};\n\nconst PasteYAML = ({ open, closeModal, importYAML }: Props) => {\n  let inputRef: any;\n  return (\n    <ReactModal\n      ariaHideApp={false}\n      isOpen={open}\n      contentLabel=\"Action Modal\"\n      className=\"modal-content tiny-modal px-4 pt-3 pb-4\"\n      shouldCloseOnOverlayClick={true}\n      style={style}\n      onRequestClose={closeModal}\n      closeTimeoutMS={100}\n    >\n      <div className=\"modal-header p-0\">\n        <h4>\n          <b>Import YAML</b>\n        </h4>\n        <h4>\n          <span className=\"float-right close-icon\">\n            <i className=\"material-icons\" onClick={closeModal}>\n              close\n            </i>\n          </span>\n        </h4>\n      </div>\n      <div className=\"modal-body px-0 pb-0\">\n        <Form.Group>\n          <Form.Label>Custom YAML:</Form.Label>\n          <Form.Control\n            placeholder=\"Paste Here\"\n            ref={(ref: any) => (inputRef = ref)}\n            as=\"textarea\"\n            rows={10}\n          />\n        </Form.Group>\n      </div>\n      <Button\n        className=\"btn-primary\"\n        onClick={() => importYAML(inputRef.value)}\n      >\n        Continue\n      </Button>\n    </ReactModal>\n  );\n};\n\nexport default PasteYAML;\n","import React from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport ReactModal, { Styles } from \"react-modal\";\n\nconst style: Styles = {\n  overlay: {\n    backgroundColor: \"rgba(38, 50, 56, 0.5)\",\n  },\n  content: {\n    border: \"none\",\n    bottom: \"auto\",\n    maxHeight: \"80%\", // set height\n    left: \"50%\",\n    padding: \"2rem\",\n    position: \"fixed\",\n    right: \"auto\",\n    top: \"50%\", // start from center\n    transform: \"translate(-50%,-50%)\", // adjust top \"up\" based on height\n    width: \"90%\",\n    maxWidth: \"800px\",\n    overflow: \"hidden\",\n  },\n};\n\ntype Props = {\n  open: boolean;\n  closeModal: () => void;\n  submitReview: (content: any) => void;\n};\n\nconst WriteReviewModal = ({ open, closeModal, submitReview }: Props) => {\n  let inputRef: any;\n  return (\n    <ReactModal\n      ariaHideApp={false}\n      isOpen={open}\n      contentLabel=\"Action Modal\"\n      className=\"modal-content tiny-modal px-4 pt-3 pb-4\"\n      shouldCloseOnOverlayClick={true}\n      style={style}\n      onRequestClose={closeModal}\n      closeTimeoutMS={100}\n    >\n      <div className=\"modal-header p-0\">\n        <h4>\n          <b>Write a Review</b>\n        </h4>\n        <h4>\n          <span className=\"float-right close-icon\">\n            <i className=\"material-icons\" onClick={closeModal}>\n              close\n            </i>\n          </span>\n        </h4>\n      </div>\n      <div className=\"modal-body px-0 pb-0\">\n        <Form.Group>\n          <Form.Control\n            placeholder=\"Tell the world about your experience\"\n            ref={(ref: any) => (inputRef = ref)}\n            as=\"textarea\"\n            rows={10}\n          />\n        </Form.Group>\n      </div>\n      <Button\n        className=\"btn-primary\"\n        onClick={() => submitReview(inputRef.value)}\n      >\n        Submit\n      </Button>\n    </ReactModal>\n  );\n};\n\nexport default WriteReviewModal;\n","import React from \"react\";\nimport ReactModal, { Styles } from \"react-modal\";\nimport { Row, Col } from \"react-bootstrap\";\n\nconst style: Styles = {\n  overlay: {\n    backgroundColor: \"rgba(38, 50, 56, 0.5)\",\n  },\n  content: {\n    border: \"none\",\n    bottom: \"auto\",\n    maxHeight: \"80%\", // set height\n    left: \"50%\",\n    padding: \"2rem\",\n    position: \"fixed\",\n    right: \"auto\",\n    top: \"50%\", // start from center\n    transform: \"translate(-50%,-50%)\", // adjust top \"up\" based on height\n    width: \"90%\",\n    maxWidth: \"800px\",\n    overflow: \"hidden\",\n  },\n};\n\nconst hiddenKeys = [\"message\", \"unixTime\"];\n\ntype Props = {\n  open: boolean;\n  closeModal: () => void;\n  modalParams: any;\n};\n\nconst LogDetails = ({ open, closeModal, modalParams }: Props) => {\n  const log = modalParams?.log || {};\n  return (\n    <ReactModal\n      ariaHideApp={false}\n      isOpen={open}\n      contentLabel=\"Action Modal\"\n      className=\"modal-content tiny-modal px-4 pt-3 pb-4\"\n      shouldCloseOnOverlayClick={true}\n      style={style}\n      onRequestClose={closeModal}\n      closeTimeoutMS={100}\n    >\n      <div className=\"modal-header p-0\">\n        <h4>\n          <b>Log Details</b>\n        </h4>\n        <h4>\n          <span className=\"float-right close-icon\">\n            <i className=\"material-icons\" onClick={closeModal}>\n              close\n            </i>\n          </span>\n        </h4>\n      </div>\n      <div className=\"modal-body px-0 pb-0 pt-1\">\n        <Row className=\"px-3\">\n          <Col xs=\"3\" className=\"border-bottom pb-1 px-0\">\n            <span className=\"text-bold\">msg</span>\n          </Col>\n          <Col xs=\"9\" className=\"border-bottom pb-1 px-0\">\n            {log.message}\n          </Col>\n        </Row>\n        {Object.entries(log)\n          .filter(([key, value]) => !hiddenKeys.includes(key))\n          .map(([key, value]) =>\n            key === \"message\" ? (\n              \"\"\n            ) : (\n              <Row className=\"px-3\" key={key}>\n                <Col xs=\"3\" className=\"border-bottom pb-1 px-0\">\n                  <span className=\"text-bold\">{key}</span>\n                </Col>\n                <Col xs=\"9\" className=\"border-bottom pb-1 px-0\">\n                  {JSON.stringify(value)}\n                </Col>\n              </Row>\n            )\n          )}\n      </div>\n    </ReactModal>\n  );\n};\n\nexport default LogDetails;\n","import React from \"react\";\nimport ReactModal, { Styles } from \"react-modal\";\nimport styled from \"@emotion/styled\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { closeModal, showModal } from \"../redux/global/global.actions\";\nimport { createNewFlow, duplicateFlow } from \"../redux/flows/flows.actions\";\nimport { selectExampleFlowsKeyEntryPairs } from \"../redux/flows/flows.selectors\";\n\nconst style: Styles = {\n  overlay: {\n    backgroundColor: \"rgba(38, 50, 56, 0.5)\",\n  },\n  content: {\n    backgroundColor: \"#EBE8E8\",\n    border: \"none\",\n    bottom: \"auto\",\n    maxHeight: \"80%\", // set height\n    left: \"50%\",\n    position: \"fixed\",\n    right: \"auto\",\n    top: \"50%\", // start from center\n    transform: \"translate(-50%,-50%)\", // adjust top \"up\" based on height\n    maxWidth: \"44rem\",\n    overflow: \"hidden\",\n  },\n};\n\nconst CloseModal = styled.div`\n  cursor: pointer;\n  margin: 0;\n  padding: 0;\n  font-size: 2rem;\n  color: #ffffff;\n  float: right;\n  line-height: 100%;\n`;\nconst CreateOptionsContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  padding: 0 1rem 0 1rem;\n  margin-bottom: 1rem;\n`;\n\nconst CreateOption = styled.div`\n  cursor: pointer;\n  background-color: #ffffff;\n  width: 12rem;\n  height: 12rem;\n  margin: 0.5rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\nconst CreateOptionAdd = () => {\n  return (\n    <i\n      style={{\n        fontSize: \"6rem\",\n        color: \"#C4C4C4\",\n        marginBottom: \"-1rem\",\n      }}\n      className=\"material-icons\"\n    >\n      add\n    </i>\n  );\n};\n\nconst OptionName = styled.span`\n  color: black;\n  font-size: 18px;\n  font-weight: 600;\n  text-align: center;\n`;\n\ntype Props = {\n  open: boolean;\n};\n\ntype NewFlowAction =\n  | \"close\"\n  | \"create empty\"\n  | \"create from yaml\"\n  | \"create from template\";\n\nconst NewFlow = ({ open }: Props) => {\n  const dispatch = useDispatch();\n\n  const exampleFlowsKeyEntryPairs = useSelector(\n    selectExampleFlowsKeyEntryPairs\n  );\n\n  const handleAction = (action: NewFlowAction, yaml?: string) => {\n    switch (action) {\n      case \"close\":\n        dispatch(closeModal());\n        break;\n      case \"create from yaml\":\n        dispatch(showModal(\"import\"));\n        break;\n      case \"create from template\":\n        if (yaml) dispatch(duplicateFlow(yaml));\n        dispatch(closeModal());\n        break;\n      case \"create empty\":\n        dispatch(createNewFlow());\n        dispatch(closeModal());\n        break;\n    }\n  };\n\n  return (\n    <ReactModal\n      ariaHideApp={false}\n      isOpen={open}\n      contentLabel=\"Action Modal\"\n      className=\"modal-content tiny-modal px-4 pt-3 pb-4\"\n      shouldCloseOnOverlayClick={true}\n      style={style}\n      onRequestClose={() => handleAction(\"close\")}\n      closeTimeoutMS={100}\n    >\n      <div>\n        <CloseModal onClick={() => handleAction(\"close\")}>\n          <i className=\"material-icons\" onClick={closeModal}>\n            close\n          </i>\n        </CloseModal>\n      </div>\n\n      <CreateOptionsContainer>\n        <CreateOption onClick={() => handleAction(\"create empty\")}>\n          <CreateOptionAdd />\n          <OptionName>empty flow</OptionName>\n        </CreateOption>\n\n        <CreateOption onClick={() => handleAction(\"create from yaml\")}>\n          <CreateOptionAdd />\n          <OptionName>from yaml</OptionName>\n        </CreateOption>\n\n        {exampleFlowsKeyEntryPairs.map((exampleFlowsKeyEntryPair) => (\n          <CreateOption\n            onClick={() =>\n              handleAction(\n                \"create from template\",\n                exampleFlowsKeyEntryPair[1].yaml\n              )\n            }\n          >\n            <OptionName>{exampleFlowsKeyEntryPair[1].name}</OptionName>\n          </CreateOption>\n        ))}\n      </CreateOptionsContainer>\n    </ReactModal>\n  );\n};\n\nexport default NewFlow;\n","import styled from \"@emotion/styled\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport {\n  selectFlowArguments,\n  selectSelectedFlow,\n} from \"../redux/flows/flows.selectors\"\nimport React, { useEffect, useState } from \"react\"\nimport { ModalParams } from \"../redux/global/global.types\"\nimport ReactModal, { Styles } from \"react-modal\"\nimport {\n  deleteNode,\n  rerender,\n  updateNode,\n  updateNodeProperties,\n} from \"../redux/flows/flows.actions\"\nimport { Button } from \"react-bootstrap\"\nimport { NodeDataUpdate } from \"../redux/flows/flows.types\"\n\nconst style: Styles = {\n  overlay: {\n    backgroundColor: \"rgba(38, 50, 56, 0.5)\",\n  },\n  content: {\n    border: \"none\",\n    bottom: \"auto\",\n    left: \"50%\",\n    position: \"fixed\",\n    right: \"auto\",\n    top: \"50%\", // start from center\n    transform: \"translate(-50%,-50%)\", // adjust top \"up\" based on height\n    maxWidth: \"30rem\",\n    overflow: \"hidden\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n}\n\nconst PodEditContainer = styled.div`\n  width: 25rem;\n  margin-right: -1rem;\n`\n\nconst Header1 = styled.header`\n  font-weight: 600;\n  font-size: 30px;\n  color: #009999;\n  margin-bottom: 0.5rem;\n`\n\nconst Header2 = styled.header`\n  font-weight: 600;\n  font-size: 20px;\n  color: #009999;\n  margin-bottom: 0.5rem;\n`\n\nconst PropertyTable = styled.div`\n  width: 104%;\n  margin-bottom: 1rem;\n  border: 0;\n  overflow: hidden;\n  overflow-y: scroll;\n  height: 20rem;\n  border-radius: 0.25em;\n\n  ::-webkit-scrollbar {\n    width: 1rem;\n  }\n\n  ::-webkit-scrollbar * {\n    background: transparent;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background: #099 !important;\n    border-radius: 1rem;\n  }\n`\nconst Input = styled.input`\n  width: 97%;\n  background: #f1f3f4;\n  border-radius: 5px;\n  padding: 0.5em;\n  border: 0;\n  margin-bottom: 0.5rem;\n`\n\nconst DeleteButton = styled(Button)`\n  width: 97%;\n`\n\ntype Props = {\n  open: boolean\n  closeModal: () => void\n  modalParams: ModalParams\n}\n\nfunction PodEditComponent({ open, closeModal, modalParams }: Props) {\n  const nodeId = modalParams?.nodeId || \"\"\n  const flowChart = useSelector(selectSelectedFlow)\n  const flowArguments = useSelector(selectFlowArguments)\n  const node = flowChart.flowChart.elements.find(\n    (element) => element.id === nodeId\n  )\n  const [searchQuery, setSearchQuery] = useState(\"\")\n  const [filteredArguments, setFilteredArguments] = useState(flowArguments.pod)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    const results = flowArguments.pod.filter((argument: any) =>\n      argument.name.toLowerCase().includes(searchQuery.toLowerCase())\n    )\n    setFilteredArguments(results)\n  }, [searchQuery, flowArguments])\n\n  const _updateLabel = (label: string) => {\n    if (node?.id) {\n      const nodeUpdate = { data: { label } }\n      dispatch(updateNode(node.id, nodeUpdate))\n      dispatch(rerender())\n    }\n  }\n  const _updateNodeProp = (name: string, value: string) => {\n    if (node?.id) {\n      const nodePropertiesUpdate: NodeDataUpdate = { [name]: value }\n      dispatch(updateNodeProperties(node.id, nodePropertiesUpdate))\n    }\n  }\n  const _deleteNode = () => {\n    if (node?.id) {\n      dispatch(deleteNode(node.id))\n      closeModal()\n      dispatch(rerender())\n    }\n  }\n\n  const label = node?.data?.label || node?.data?.name || \"Empty Pod\"\n  console.log(\"node\")\n  console.log(node)\n\n  return (\n    <ReactModal\n      ariaHideApp={false}\n      isOpen={open}\n      contentLabel=\"Action Modal\"\n      className=\"modal-content tiny-modal px-4 pt-3 pb-4\"\n      shouldCloseOnOverlayClick={true}\n      onRequestClose={closeModal}\n      closeTimeoutMS={100}\n      style={style}\n    >\n      <PodEditContainer>\n        <Header1>pods name</Header1>\n\n        <Input\n          value={label}\n          onChange={(e: { target: { value: string } }) =>\n            _updateLabel(e.target.value)\n          }\n          className=\"pod-name-input\"\n        />\n\n        <Header1>properties</Header1>\n\n        <Input\n          placeholder=\"search properties...\"\n          value={searchQuery}\n          onChange={(e) => setSearchQuery(e.target.value)}\n        />\n        <PropertyTable>\n          {filteredArguments.map((argument) => {\n            const { name, type } = argument\n            return (\n              <>\n                <Header2>{name}</Header2>\n                <Input\n                  placeholder={type}\n                  type={type === \"integer\" ? \"number\" : \"text\"}\n                  value={node?.data ? node?.data[name] : \"\"}\n                  onChange={(e) => _updateNodeProp(name, e.target.value)}\n                  className=\"property-value-input\"\n                />\n              </>\n            )\n          })}\n        </PropertyTable>\n\n        <DeleteButton variant=\"danger\" onClick={_deleteNode}>\n          Delete Pod\n        </DeleteButton>\n      </PodEditContainer>\n    </ReactModal>\n  )\n}\n\nexport default PodEditComponent\n","import React, { useState } from \"react\";\nimport { Container, Row, Col } from \"shards-react\";\n\nimport { MainNavbar } from \"../components/Layout/MainNavbar/MainNavbar\";\nimport MainSidebar from \"../components/Layout/MainSidebar/MainSidebar\";\nimport MainFooter from \"../components/Layout/MainFooter\";\nimport { CookiesBanner } from \"../components/Common/CookiesBanner\";\nimport { InfoToast } from \"../components/Common/InfoToast\";\nimport { ConnectionToast } from \"../components/Common/ConnectionToast\";\n\nimport PasteYAML from \"../modals/PasteYAML\";\nimport WriteReview from \"../modals/WriteReview\";\nimport LogDetails from \"../modals/LogDetails\";\n\nimport logger from \"../logger\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  selectBanner,\n  selectConnectionStatus,\n  selectLoading,\n  selectMenuState,\n  selectModal,\n  selectModalParams,\n  selectSidebarItems,\n  selectUser,\n} from \"../redux/global/global.selectors\";\nimport store from \"../redux\";\nimport NewFlow from \"../modals/NewFlow\";\nimport PodEdit from \"../modals/PodEdit\";\nimport {\n  showBanner,\n  toggleSidebar,\n  closeModal,\n  connectJinaD,\n} from \"../redux/global/global.actions\";\nimport { importFlow } from \"../redux/flows/flows.actions\";\n\ntype IconSideBarLayoutProps = {\n  children: React.ReactNode;\n  usesAuth: boolean;\n  usesConnection: boolean;\n  navigateButton?: () => React.ReactNode;\n};\n\nconst IconSidebarLayout = (props: IconSideBarLayoutProps) => {\n  const modal = useSelector(selectModal);\n  const modalParams = useSelector(selectModalParams);\n  const loading = useSelector(selectLoading);\n  const banner = useSelector(selectBanner);\n  const connected = useSelector(selectConnectionStatus);\n  const loggerEnabled = logger.isEnabled();\n  const menuVisible = useSelector(selectMenuState);\n  const sidebarNavItems = useSelector(selectSidebarItems);\n  const user = useSelector(selectUser);\n  const [acceptedCookies, setAcceptedCookies] = useState<boolean>(\n    localStorage.getItem(\"accepted-cookies\") === \"true\"\n  );\n\n  const dispatch = useDispatch();\n  const acceptCookies = () => {\n    localStorage.setItem(\"accepted-cookies\", String(true));\n    setAcceptedCookies(true);\n  };\n\n  const _closeModal = () => {\n    dispatch(closeModal());\n  };\n\n  const importYAML = (yamlString: string) => {\n    dispatch(importFlow(yamlString));\n    _closeModal();\n  };\n\n  const submitReview = () => {\n    if (modalParams) {\n    }\n  };\n\n  const reconnect = () => {\n    dispatch(connectJinaD());\n  };\n\n  const logOut = () => {};\n\n  const _toggleSidebar = () => {\n    dispatch(toggleSidebar());\n  };\n\n  const enableLogger = () => {\n    logger.enable();\n    const storeCopy = store.getState();\n    logger.log(\"Store Snapshot\", storeCopy);\n    dispatch(\n      showBanner(\n        'Debug Mode Enabled. Click \"Export Debug Data\" to download Debug JSON.',\n        \"warning\"\n      )\n    );\n  };\n\n  const disableLogger = () => {\n    logger.disable();\n    dispatch(showBanner(\"Debug Mode Disabled.\", \"warning\"));\n  };\n\n  const exportLogs = () => {\n    const storeCopy = store.getState();\n    logger.log(\"Store Snapshot\", storeCopy);\n    logger.exportLogs();\n  };\n\n  const { children, usesAuth, usesConnection, navigateButton } = props;\n  return (\n    <Container fluid className=\"icon-sidebar-nav\">\n      <Row>\n        <MainSidebar\n          sidebarNavItems={sidebarNavItems}\n          menuVisible={menuVisible}\n          toggleSidebar={_toggleSidebar}\n        />\n        <Col className=\"main-content col\" tag=\"main\">\n          <MainNavbar\n            user={user}\n            usesAuth={usesAuth}\n            usesConnection={usesConnection}\n            logOut={logOut}\n            toggleSidebar={_toggleSidebar}\n            reconnect={reconnect}\n            connected={connected}\n            navigateButton={navigateButton}\n          />\n          <InfoToast data={banner} />\n          {usesConnection && !loading && !connected && (\n            <ConnectionToast reconnect={reconnect} />\n          )}\n          {children}\n          {!acceptedCookies && <CookiesBanner acceptCookies={acceptCookies} />}\n          <MainFooter\n            loggerEnabled={loggerEnabled}\n            enableLogger={enableLogger}\n            disableLogger={disableLogger}\n            exportLogs={exportLogs}\n          />\n        </Col>\n      </Row>\n      <LogDetails\n        open={modal === \"logDetails\"}\n        closeModal={_closeModal}\n        modalParams={modalParams}\n      />\n      <PasteYAML\n        open={modal === \"import\"}\n        closeModal={_closeModal}\n        importYAML={importYAML}\n      />\n      <NewFlow open={modal === \"newFlow\"} />\n      <WriteReview\n        open={modal === \"review\"}\n        closeModal={_closeModal}\n        submitReview={submitReview}\n      />\n      {modal === \"podEdit\" && (\n        <PodEdit\n          open={modal === \"podEdit\"}\n          closeModal={_closeModal}\n          modalParams={modalParams}\n        />\n      )}\n    </Container>\n  );\n};\n\nexport default IconSidebarLayout;\n","import React, { useState } from \"react\";\nimport { Container, Row, Col } from \"shards-react\";\n\nimport { MainNavbar, User } from \"../components/Layout/MainNavbar/MainNavbar\";\nimport MainFooter from \"../components/Layout/MainFooter\";\nimport { CookiesBanner } from \"../components/Common/CookiesBanner\";\nimport { InfoToast } from \"../components/Common/InfoToast\";\n\nimport WriteReview from \"../modals/WriteReview\";\n\nimport logger from \"../logger\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport store from \"../redux\";\nimport { showBanner } from \"../redux/global/global.actions\";\nimport { selectBanner, selectModal } from \"../redux/global/global.selectors\";\n\ntype HubLayoutProps = {\n  children: React.ReactNode;\n  usesAuth: boolean;\n  usesConnection: boolean;\n  navigateButton?: () => React.ReactNode;\n};\n\nconst HubLayout = (props: HubLayoutProps) => {\n  const modal = useSelector(selectModal);\n  const banner = useSelector(selectBanner);\n  const loggerEnabled = logger.isEnabled();\n  const user: User = {\n    displayName: \"dummyUser\",\n    emails: [{ value: \"dummyUser@dummy.com\" }],\n    id: \"idDummy\",\n    nodeId: \"idDummy_node\",\n    photos: [{ value: \"dummyPhoto\" }],\n    profileUrl: \"dummyUrl\",\n    provider: \"dummyProvider\",\n    username: \"dummyUsername\",\n    _json: \"dummyJSON\",\n    _raw: \"dummyRaw\",\n  };\n  const [acceptedCookies, setAcceptedCookies] = useState<boolean>(\n    localStorage.getItem(\"accepted-cookies\") === \"true\"\n  );\n\n  const dispatch = useDispatch();\n  const acceptCookies = () => {\n    localStorage.setItem(\"accepted-cookies\", String(true));\n    setAcceptedCookies(true);\n  };\n\n  const closeModal = () => {\n    dispatch(closeModal());\n  };\n\n  const submitReview = (content: any) => {};\n\n  const logOut = () => {};\n\n  const enableLogger = () => {\n    logger.enable();\n    const storeCopy = store.getState();\n    logger.log(\"Store Snapshot\", storeCopy);\n    dispatch(\n      showBanner(\n        'Debug Mode Enabled. Click \"Export Debug Data\" to download Debug JSON.',\n        \"warning\"\n      )\n    );\n  };\n\n  const disableLogger = () => {\n    logger.disable();\n    dispatch(showBanner(\"Debug Mode Disabled.\", \"warning\"));\n  };\n\n  const exportLogs = () => {};\n\n  const { children, usesAuth, usesConnection, navigateButton } = props;\n  return (\n    <Container>\n      <Row>\n        <Col className=\"main-content col\" tag=\"main\">\n          <MainNavbar\n            usesAuth={usesAuth}\n            usesConnection={usesConnection}\n            logOut={logOut}\n            hideSidebarToggle={true}\n            showLogo\n            user={user}\n            navigateButton={navigateButton}\n          />\n          <InfoToast data={banner} />\n          {children}\n          {!acceptedCookies && <CookiesBanner acceptCookies={acceptCookies} />}\n          <MainFooter\n            loggerEnabled={loggerEnabled}\n            enableLogger={enableLogger}\n            disableLogger={disableLogger}\n            exportLogs={exportLogs}\n          />\n        </Col>\n      </Row>\n      <WriteReview\n        open={modal === \"review\"}\n        closeModal={closeModal}\n        submitReview={submitReview}\n      />\n    </Container>\n  );\n};\n\nexport default HubLayout;\n","import { State } from \"../index\"\n\nexport const selectSelectedFlow = (state: State) =>\n  state.flowState.flows[state.flowState.selectedFlowId]\n\nexport const selectRerender = (state: State) => state.flowState.rerender\n\nexport const selectTooltipConfig = (state: State) =>\n  state.flowState.tooltipConfig\n\nexport const selectFlows = (state: State) => state.flowState.flows\n\nexport const selectFlowArguments = (state: State) =>\n  state.flowState.flowArguments\n\nexport const selectExampleFlowsKeyEntryPairs = (state: State) => {\n  return Object.entries(state.flowState.flows).filter(\n    (flowKeyEntryPair) => flowKeyEntryPair[1].type === \"example\"\n  )\n}\n\nexport const selectSelectedFlowId = (state: State) =>\n  state.flowState.selectedFlowId\n","const exampleFlows = {\n  pokedex: {\n    name: \"Pokedex Query\",\n    type: \"example\",\n    yaml: `!Flow\n    with:\n      read_only: true\n      rest_api: true\n      port_expose: $JINA_PORT\n      board:\n        canvas:\n          gateway:\n            x: 250\n            y: 150\n          chunk_seg:\n            x: 250\n            y: 268\n          tf_encode:\n            x: 250\n            y: 420\n          chunk_idx:\n            x: 250\n            y: 600\n          ranker:\n            x: 250\n            y: 836\n          doc_idx:\n            x: 249\n            y: 985\n    pods:\n      gateway: {}\n      chunk_seg:\n        uses: pods/craft.yml\n        parallel: $PARALLEL\n        needs: gateway\n      tf_encode:\n        uses: pods/encode.yml\n        parallel: $PARALLEL\n        timeout_ready: 600000\n        needs: chunk_seg\n      chunk_idx:\n        uses: pods/chunk.yml\n        separated_workspace: true\n        polling: all\n        uses_reducing: _merge_all\n        timeout_ready: 100000\n        needs: tf_encode\n      ranker:\n        uses: BiMatchRanker\n        needs: chunk_idx\n      doc_idx:\n        uses: pods/doc.yml\n        needs: ranker\n    \n    `,\n  },\n  flower: {\n    name: \"Flower Search Query\",\n    type: \"example\",\n    yaml: `!Flow\n    with:\n      read_only: true\n      port_expose: $JINA_PORT\n      board:\n        canvas:\n          gateway:\n            x: 250\n            y: 150\n          loader:\n            x: 250\n            y: 257\n          flipper:\n            x: 252\n            y: 407\n          normalizer:\n            x: 239\n            y: 563\n          encoder:\n            x: 252\n            y: 712\n          chunk_indexer:\n            x: 250\n            y: 872\n          ranker:\n            x: 252\n            y: 1066\n          doc_indexer:\n            x: 253\n            y: 1199\n    pods:\n      gateway: {}\n      loader:\n        uses: yaml/craft-load.yml\n        read_only: true\n        needs: gateway\n      flipper:\n        uses: yaml/craft-flip.yml\n        read_only: true\n        needs: loader\n      normalizer:\n        uses: yaml/craft-normalize.yml\n        read_only: true\n        needs: flipper\n      encoder:\n        uses: $ENCODER\n        timeout_ready: 600000\n        read_only: true\n        needs: normalizer\n      chunk_indexer:\n        uses: yaml/index-chunk.yml\n        separated_workspace: true\n        polling: all\n        uses_reducing: _merge_all\n        needs: encoder\n      ranker:\n        uses: MinRanker\n        needs: chunk_indexer\n      doc_indexer:\n        uses: yaml/index-doc.yml\n        needs: ranker  \n    `,\n  },\n  southpark: {\n    name: \"Southpark Query\",\n    type: \"example\",\n    yaml: `!Flow\n    with:\n      read_only: true\n      port_expose: $JINA_PORT\n      board:\n        canvas:\n          gateway:\n            x: 254\n            y: 147\n          splittor:\n            x: 254\n            y: 270\n          encoder:\n            x: 254\n            y: 448\n          chunk_indexer:\n            x: 251\n            y: 645\n          ranker:\n            x: 255\n            y: 862\n          doc_indexer:\n            x: 256\n            y: 1002\n    pods:\n      gateway: {}\n      splittor:\n        uses: pods/craft-split.yml\n        parallel: $PARALLEL\n        read_only: true\n        needs: gateway\n      encoder:\n        uses: pods/encode.yml\n        parallel: $PARALLEL\n        timeout_ready: 60000\n        read_only: true\n        needs: splittor\n      chunk_indexer:\n        uses: pods/index-chunk.yml\n        separated_workspace: true\n        polling: all\n        reducing_uses: _merge_all\n        needs: encoder\n      ranker:\n        uses: MinRanker\n        needs: chunk_indexer\n      doc_indexer:\n        uses: pods/index-doc.yml\n        needs: ranker\n    `,\n  },\n  blankFlow: {\n    name: \"Test Flow\",\n    type: \"example\",\n    yaml: `!Flow\n    with:\n      rest_api: true\n      port_expose: 5555\n    pods:\n      pod1:\n        read_only: true\n      pod2:\n        read_only: true\n      pod3:\n        read_only: true`,\n  },\n};\n\nexport default exampleFlows;\n","import _ from \"lodash\"\nimport exampleFlows from \"../../data/exampleFlows\"\nimport { formatForFlowchart, parseYAML } from \"../../helpers\"\nimport {\n  ADD_LINK,\n  CREATE_NEW_FLOW,\n  ADD_NODE,\n  DELETE_FLOW,\n  DELETE_LINK,\n  DELETE_NODE,\n  DUPLICATE_FLOW,\n  IMPORT_FLOW,\n  initialFlowChart,\n  LOAD_FLOW,\n  RERENDER,\n  SET_FLOW_ARGUMENTS,\n  UPDATE_NODE,\n  UPDATE_SELECTED_FLOW,\n  UPDATE_NODE_DATA,\n} from \"./flows.constants\"\nimport {\n  Flow,\n  FlowActionTypes,\n  Flows,\n  FlowState,\n  NodeData,\n} from \"./flows.types\"\nimport { nanoid } from \"nanoid\"\nimport produce from \"immer\"\nimport { isEdge, isNode } from \"react-flow-renderer\"\nimport { isNodeConnection } from \"../../helpers/typeCheckers\"\nimport { createLink, createNode } from \"../../helpers/flow-chart\"\nimport { Connection } from \"react-flow-renderer/dist/types\"\n\nexport const saveFlowsToStorage = (state: FlowState) => {\n  let toSave: { [id: string]: Flow } = {}\n  const { flows } = state\n  Object.entries(flows).forEach(([id, flow]: [string, Flow]) => {\n    if (flow.type === \"user-generated\") toSave[id] = flow\n  })\n  localStorage.setItem(\"userFlows\", JSON.stringify(toSave))\n}\n\nfunction getUserFlows(): Flows {\n  const storedFlows = localStorage.getItem(\"userFlows\")\n  const userFlows = storedFlows ? JSON.parse(storedFlows) : null\n  return _.isEmpty(userFlows)\n    ? {\n        _userFlow: {\n          name: \"Custom Flow 1\",\n          type: \"user-generated\",\n          flowChart: initialFlowChart,\n        },\n      }\n    : userFlows\n}\n\nfunction getExampleFlows() {\n  const flows: Flows = {}\n\n  Object.entries(exampleFlows).forEach(([id, flow]) => {\n    const parsed = parseYAML(flow.yaml)\n    if (parsed?.data) {\n      const formatted = formatForFlowchart(parsed.data)\n      flows[id] = {\n        ...flow,\n        isConnected: false,\n        flowChart: formatted,\n      }\n    }\n  })\n  return flows\n}\n\nconst initialState: FlowState = {\n  rerender: false,\n  selectedFlowId: \"_userFlow\",\n  flows: {\n    ...getUserFlows(),\n    ...getExampleFlows(),\n  },\n  flowArguments: {\n    version: \"0.0\",\n    flow: [],\n    pea: [],\n    pod: [],\n  },\n  tooltipConfig: {\n    tooltipsGlobal: {\n      showTooltip: true,\n      toogleOffWhenClicked: \"global\",\n      text: \"Hold Shift and click to select multiple nodes\",\n    },\n  },\n}\n\nconst flowReducer = produce((draft: FlowState, action: FlowActionTypes) => {\n  switch (action.type) {\n    case CREATE_NEW_FLOW: {\n      draft = _createNewFlow(draft)\n      break\n    }\n    case DUPLICATE_FLOW: {\n      draft = _createNewFlow(draft, action.payload)\n      break\n    }\n    case IMPORT_FLOW: {\n      draft = _createNewFlow(draft, action.payload)\n      break\n    }\n    case DELETE_FLOW:\n      {\n        const flowId = action.payload as string\n        draft.flows = _.omit(draft.flows, flowId)\n\n        const nonExampleFlows = Object.entries(draft.flows).filter(\n          ([id, flow]: [string, Flow]) => flow.type !== \"example\"\n        )\n\n        if (draft.selectedFlowId === flowId && nonExampleFlows.length) {\n          const idFirstNonExampleFlow = nonExampleFlows[0][0]\n          draft.selectedFlowId = idFirstNonExampleFlow\n        } else if (!nonExampleFlows.length) {\n          draft.flows._userFlow = {\n            name: \"Custom Flow 1\",\n            type: \"user-generated\",\n            isConnected: false,\n            flowChart: initialFlowChart,\n          }\n          draft.selectedFlowId = \"_userFlow\"\n        }\n      }\n      break\n    case UPDATE_SELECTED_FLOW: {\n      const flowUpdate = action.payload\n      if (draft.selectedFlowId) {\n        const selectedFlow = draft.flows[draft.selectedFlowId]\n        draft.flows[draft.selectedFlowId] = {\n          ...selectedFlow,\n          ...flowUpdate,\n        }\n      }\n      break\n    }\n    case SET_FLOW_ARGUMENTS: {\n      draft.flowArguments = action.payload\n      break\n    }\n    case LOAD_FLOW:\n      draft.selectedFlowId = action.payload\n      break\n    case UPDATE_NODE: {\n      const { nodeUpdate, nodeId } = action.payload\n      const selectedFlowId = draft.selectedFlowId\n      const oldNodeIndex = draft.flows[\n        selectedFlowId\n      ].flowChart.elements.findIndex((element) => element.id === nodeId)\n\n      if (oldNodeIndex >= 0) {\n        const oldNode =\n          draft.flows[selectedFlowId].flowChart.elements[oldNodeIndex]\n\n        const newNode = {\n          ...oldNode,\n          ...nodeUpdate,\n        }\n\n        draft.flows[selectedFlowId].flowChart.elements[oldNodeIndex] = newNode\n      }\n      break\n    }\n    case UPDATE_NODE_DATA: {\n      const { nodePropertiesUpdate, nodeId } = action.payload\n      const selectedFlowId = draft.selectedFlowId\n      const oldNodeIndex = draft.flows[\n        selectedFlowId\n      ].flowChart.elements.findIndex((element) => element.id === nodeId)\n\n      if (oldNodeIndex >= 0) {\n        const oldNode =\n          draft.flows[selectedFlowId].flowChart.elements[oldNodeIndex]\n\n        const newData: NodeData = {\n          ...oldNode.data,\n          ...nodePropertiesUpdate,\n        }\n\n        draft.flows[selectedFlowId].flowChart.elements[\n          oldNodeIndex\n        ].data = newData\n      }\n\n      break\n    }\n    case ADD_NODE:\n      const { data, id, position } = action.payload\n      const newNode = createNode(id, data, position)\n      draft.flows[draft.selectedFlowId].flowChart.elements.push(newNode)\n      break\n    case DELETE_NODE:\n      const nodeId = action.payload\n      const selectedFlow = draft.flows[draft.selectedFlowId]\n      const withoutLinksAndNode = selectedFlow.flowChart.elements.filter(\n        (element) => {\n          if (isNode(element)) return element.id !== nodeId\n\n          if (isEdge(element))\n            return element.source !== nodeId && element.target !== nodeId\n\n          return true\n        }\n      )\n\n      draft.flows[draft.selectedFlowId].flowChart.elements = withoutLinksAndNode\n      break\n    case ADD_LINK:\n      const { source, target } = action.payload\n      const newLink = createLink(source, target)\n      draft.flows[draft.selectedFlowId].flowChart.elements.push(newLink)\n      break\n    case DELETE_LINK:\n      if (isNodeConnection(action.payload)) {\n        const { source, target } = action.payload as Connection\n        draft.flows[draft.selectedFlowId].flowChart.elements = draft.flows[\n          draft.selectedFlowId\n        ].flowChart.elements.filter(\n          (element) =>\n            !(\n              isEdge(element) &&\n              (element.source === source || element.target === target)\n            )\n        )\n      } else {\n        const linkId = action.payload\n        draft.flows[draft.selectedFlowId].flowChart.elements = draft.flows[\n          draft.selectedFlowId\n        ].flowChart.elements.filter((element) => linkId !== element.id)\n      }\n      break\n    //todo check if this can be deleted with the flow chart lib\n    case RERENDER:\n      draft.rerender = !draft.rerender\n      break\n  }\n\n  action.type !== RERENDER && saveFlowsToStorage(draft)\n}, initialState)\n\nfunction _createNewFlow(draft: FlowState, customYAML?: string): FlowState {\n  const prefixString = \"Custom Flow\"\n\n  let userFlows = Object.values(draft.flows).filter((flow: any) =>\n    flow.name.startsWith(prefixString)\n  )\n\n  const userFlowNumbers = userFlows\n    .map(\n      (userFlow: Flow) =>\n        parseInt(userFlow.name.substring(prefixString.length)) || 0\n    )\n    .sort((a, b) => a - b)\n\n  const largestNumber = userFlowNumbers[userFlowNumbers.length - 1] || 0\n\n  const id = nanoid()\n\n  let flowChart = initialFlowChart\n\n  if (customYAML) {\n    const parsed = parseYAML(customYAML)\n    if (parsed?.data) flowChart = formatForFlowchart(parsed.data)\n  }\n\n  draft.flows[id] = {\n    isConnected: false,\n    name: `${prefixString} ${largestNumber + 1}`,\n    type: \"user-generated\",\n    flowChart,\n  }\n  draft.selectedFlowId = id\n  return draft\n}\n\nexport default flowReducer\n","import { NodeConnection, DeleteLinkProps } from \"../redux/flows/flows.types\"\n\nexport function isNodeConnection(\n  deleteLinkProps: DeleteLinkProps\n): deleteLinkProps is NodeConnection {\n  return (deleteLinkProps as NodeConnection).source !== undefined\n}\n","import { HubState, HubActionTypes } from \"./hub.types\"\nimport {\n  FETCH_HUB_IMAGES,\n  FETCH_HUB_IMAGES_SUCCESS,\n  FETCH_HUB_IMAGES_FAILURE,\n  initialHubState,\n} from \"./hub.constants\"\nimport produce from \"immer\"\n\nconst hubReducer = produce((draft: HubState, action: HubActionTypes) => {\n  switch (action.type) {\n    case FETCH_HUB_IMAGES:\n      draft.loading = true\n      break\n    case FETCH_HUB_IMAGES_SUCCESS:\n      draft.loading = false\n      draft.images = action.payload.images\n      break\n    case FETCH_HUB_IMAGES_FAILURE:\n      draft.loading = false\n      draft.error = action.payload.error\n      break\n  }\n}, initialHubState)\n\nexport default hubReducer\n","import { intialSettings, UPDATE_SETTINGS } from \"./settings.constants\"\nimport {\n  SettingName,\n  Settings,\n  SettingsActionTypes,\n  SettingsState,\n} from \"./settings.types\"\nimport logger from \"../../logger\"\nimport produce from \"immer\"\n\nconst settingsReducer = produce(\n  (draft: SettingsState, action: SettingsActionTypes) => {\n    switch (action.type) {\n      case UPDATE_SETTINGS:\n        draft.settings = {\n          ...draft.settings,\n          ...action.payload,\n        }\n        logger.log(\"saveSettings - settings\", draft.settings)\n        _saveSettingsInStore(draft.settings)\n    }\n  },\n  intialSettings\n)\n\nfunction _saveSettingsInStore(settings: Settings) {\n  Object.keys(settings).forEach((key) => {\n    localStorage.setItem(\n      `preferences-${key}`,\n      settings[key as SettingName] as string\n    )\n  })\n}\n\nexport default settingsReducer\n","import {\n  HANDLE_NEW_LOG,\n  getInitialLogLevel,\n  intialLogStreamState,\n  SHOW_LOG_INDEX,\n} from \"./logStream.constants\"\nimport { LogStreamActionTypes, LogStreamState, RawLog } from \"./logStream.types\"\nimport logger from \"../../logger\"\nimport { transformLog } from \"../../helpers\"\nimport produce from \"immer\"\n\nconst logStreamReducer = produce(\n  (draft: LogStreamState, action: LogStreamActionTypes) => {\n    switch (action.type) {\n      case SHOW_LOG_INDEX:\n        draft.logIndex = action.payload\n        break\n      case HANDLE_NEW_LOG:\n        _handleNewLog()\n    }\n\n    function _handleNewLog() {\n      const rawLog = action.payload as RawLog\n      logger.log(\"_handleNewLog\")\n      const log = transformLog(rawLog, draft.logs.length)\n\n      const { name, level, unixTime } = log\n      draft.logs.push(log)\n\n      const newLogSourceValue = draft.logSources[name]\n        ? draft.logSources[name] + 1\n        : 1\n      draft.logSources[name] = newLogSourceValue\n\n      const newLogLevelValue = draft.logLevels[level]\n        ? draft.logLevels[level] + 1\n        : 1\n      draft.logLevels[level] = newLogLevelValue\n\n      const newLogLevelOccurrence = draft.logLevelOccurrences[unixTime]\n        ? { ...draft.logLevelOccurrences[unixTime] }\n        : getInitialLogLevel()\n      draft.logLevelOccurrences[unixTime] = newLogLevelOccurrence\n      draft.logLevelOccurrences[unixTime].levels[level]++\n      draft.logLevelOccurrences[unixTime].lastLog = log.idx\n    }\n  },\n  intialLogStreamState\n)\n\nexport default logStreamReducer\n","import {\n  CLOSE_MODAL,\n  HANDLE_CONNECTION_STATUS,\n  HIDE_BANNER,\n  initialGlobalState,\n  SHOW_BANNER,\n  SHOW_ERROR,\n  SHOW_MODAL,\n  TOGGLE_SIDE_BAR,\n} from \"./global.constants\"\nimport logger from \"../../logger\"\nimport { HANDLE_NEW_LOG } from \"../logStream/logStream.constants\"\nimport produce from \"immer\"\nimport { GlobalActionTypes, GlobalState } from \"./global.types\"\n\nconst globalReducer = produce(\n  (draft: GlobalState, action: GlobalActionTypes) => {\n    switch (action.type) {\n      case HANDLE_CONNECTION_STATUS:\n        logger.log(\n          \"handleLogConnectionStatus - status\",\n          action.payload.connected\n        )\n        logger.log(\n          \"handleLogConnectionStatus - message\",\n          action.payload.message\n        )\n        draft.loading = false\n        draft.connected = action.payload.connected\n        break\n      case TOGGLE_SIDE_BAR:\n        draft.menuVisible = !draft.menuVisible\n        break\n      case SHOW_BANNER:\n        draft.banner = {\n          message: action.payload.message,\n          theme: action.payload.theme,\n        }\n        break\n      case HIDE_BANNER:\n        draft.banner = null\n        break\n      case SHOW_ERROR:\n        draft.banner = {\n          message: action.payload.message,\n          theme: \"error\",\n        }\n        break\n      case SHOW_MODAL:\n        draft.modal = action.payload.modal\n        draft.modalParams = action.payload.modalParams\n        break\n      case CLOSE_MODAL:\n        draft.modal = null\n        draft.modalParams = null\n        break\n      case HANDLE_NEW_LOG:\n        draft.processes[action.payload.process] = action.payload.name\n        break\n    }\n  },\n  initialGlobalState\n)\n\nexport default globalReducer\n","import { TaskState } from \"./task.types\";\n\nexport const HANDLE_NEW_TASK_EVENT = \"HANDLE_TASK\";\n\nexport const initialTaskState: TaskState = {\n  taskData: {\n    qps: {\n      current: \"0\",\n      history: new Array(30).fill(0),\n    },\n    elapsed: {\n      task_name: \"No Current Task\",\n      seconds: \"0s\",\n    },\n    progress: {\n      currentRequest: 0,\n      bar_len: 0,\n      num_bars: 0,\n    },\n    speed: {\n      current: \"0\",\n      unit: \"units\",\n      history: new Array(30).fill(0),\n    },\n    lastUpdateChart: new Date(),\n    messages: [],\n    bytes: [],\n  },\n};\n","import { TaskActions, TaskEvent, TaskState } from \"./task.types\"\nimport { HANDLE_NEW_TASK_EVENT, initialTaskState } from \"./task.constants\"\nimport { Processes } from \"../global/global.types\"\nimport { formatSeconds } from \"../../helpers\"\nimport produce from \"immer\"\n\nconst taskReducer = produce((draft: TaskState, action: TaskActions) => {\n  switch (action.type) {\n    case HANDLE_NEW_TASK_EVENT:\n      return _handleNewTaskEvent()\n  }\n\n  function _handleNewTaskEvent() {\n    const {\n      taskEvent,\n      processes,\n    }: { taskEvent: TaskEvent; processes: Processes } = action.payload\n\n    const event = { ...taskEvent }\n\n    const {\n      task_name,\n      process,\n      bar_len,\n      num_bars,\n      elapsed,\n      speed,\n      speed_unit,\n      bytes_recv,\n      bytes_sent,\n      msg_recv,\n      msg_sent,\n      num_reqs,\n      qps,\n    } = event\n\n    if (bar_len && num_bars) {\n      draft.taskData.progress.currentRequest = num_reqs\n      draft.taskData.progress.bar_len = bar_len\n      draft.taskData.progress.num_bars = num_bars\n    }\n\n    if (msg_recv && msg_sent) {\n      let index = draft.taskData.messages\n        .map((obj: any) => obj.process)\n        .indexOf(process)\n\n      let msgData = {\n        process,\n        sent: msg_sent,\n        received: msg_recv,\n        node: processes[process],\n      }\n\n      let bytesData = {\n        process,\n        sent: bytes_sent,\n        received: bytes_recv,\n        node: processes[process],\n      }\n\n      if (index < 0) {\n        draft.taskData.messages.push(msgData)\n        draft.taskData.bytes.push(bytesData)\n      } else {\n        draft.taskData.messages[index] = msgData\n        draft.taskData.bytes[index] = bytesData\n      }\n\n      draft.taskData.messages = draft.taskData.messages\n        .sort((a: any, b: any) => b.sent + b.received - (a.sent + a.received))\n        .slice(0, 20)\n\n      draft.taskData.bytes = draft.taskData.bytes\n        .sort((a: any, b: any) => b.sent + b.received - (a.sent + a.received))\n        .slice(0, 20)\n    }\n\n    draft.taskData.lastUpdateChart = new Date()\n\n    if (qps) {\n      draft.taskData.qps.current = parseFloat(qps).toFixed(1)\n      draft.taskData.qps.history.push(parseFloat(qps).toFixed(3))\n      draft.taskData.qps.history.shift()\n    }\n\n    if (speed && speed_unit) {\n      draft.taskData.speed.unit = speed_unit\n      draft.taskData.speed.current = parseFloat(speed).toFixed(1)\n      draft.taskData.speed.history.push(parseFloat(speed).toFixed(3))\n      draft.taskData.speed.history.shift()\n    }\n\n    if (elapsed) {\n      draft.taskData.elapsed.seconds = formatSeconds(parseInt(elapsed))\n      draft.taskData.elapsed.task_name = `Task: ${task_name}`\n    }\n  }\n}, initialTaskState)\n\nexport default taskReducer\n","import { combineReducers, createStore, applyMiddleware, Action } from \"redux\";\nimport flowReducer from \"./flows/flows.reducer\";\nimport { FlowState } from \"./flows/flows.types\";\nimport { HubState } from \"./hub/hub.types\";\nimport hubReducer from \"./hub/hub.reducer\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { SettingsState } from \"./settings/settings.types\";\nimport settingsReducer from \"./settings/settings.reducer\";\nimport { LogStreamState } from \"./logStream/logStream.types\";\nimport logStreamReducer from \"./logStream/logStream.reducer\";\nimport { GlobalState } from \"./global/global.types\";\nimport globalReducer from \"./global/global.reducer\";\nimport thunk, { ThunkAction } from \"redux-thunk\";\nimport { handleConnectionStatus } from \"./global/global.actions\";\nimport taskReducer from \"./task/task.reducer\";\nimport { TaskState } from \"./task/task.types\";\nimport jinadClient from \"../services/jinad\";\n\nexport type State = {\n  flowState: FlowState;\n  hubState: HubState;\n  settingsState: SettingsState;\n  logStreamState: LogStreamState;\n  globalState: GlobalState;\n  taskState: TaskState;\n};\n\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  State,\n  unknown,\n  Action<string>\n>;\n\nconst rootReducer = combineReducers({\n  flowState: flowReducer,\n  hubState: hubReducer,\n  settingsState: settingsReducer,\n  logStreamState: logStreamReducer,\n  globalState: globalReducer,\n  taskState: taskReducer,\n});\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nfunction _handleLogConnectionStatus({\n  connected,\n  message,\n}: {\n  connected: boolean;\n  message: string;\n}) {\n  store.dispatch<any>(handleConnectionStatus(connected, message));\n}\n\njinadClient.connect(\n  store.getState().settingsState.settings,\n  _handleLogConnectionStatus\n);\n\nexport default store;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { Col } from \"react-bootstrap\";\n\ntype Props = {\n  title: string;\n  subtitle?: string;\n  className: string;\n};\n\nfunction PageTitle({ title, subtitle, className }: Props) {\n  const classes = classNames(\n    className,\n    \"text-center\",\n    \"text-md-left\",\n    \"mb-sm-0\"\n  );\n\n  return (\n    <Col xs=\"12\" sm=\"3\" className={classes}>\n      <h3 className=\"page-title\" data-name=\"title\">\n        {title}\n      </h3>\n      <p className=\"page-subtitle mt-2 mb-0\">{subtitle}</p>\n    </Col>\n  );\n}\n\nexport { PageTitle };\n","import { State } from \"../index\";\n\nexport const selectProcess = (state: State) => state.globalState.processes;\n\nexport const selectMenuState = (state: State) => state.globalState.menuVisible;\n\nexport const selectSidebarItems = (state: State) => state.globalState.navItems;\n\nexport const selectCurrentTab = (state: State) => state.globalState.currentTab;\n\nexport const selectUser = (state: State) => state.globalState.user;\n\nexport const selectBanner = (state: State) => state.globalState.banner;\n\nexport const selectModal = (state: State) => state.globalState.modal;\n\nexport const selectModalParams = (state: State) =>\n  state.globalState.modalParams;\n\nexport const selectConnectionStatus = (state: State) =>\n  state.globalState.connected;\n\nexport const selectLoading = (state: State) => state.globalState.loading;\n","import axios from \"axios\"\nimport { timeout } from \"../helpers/utils\"\nimport logger from \"../logger\"\nimport {\n  FlowArgument,\n  FlowArguments,\n  FlowArgumentType,\n} from \"../redux/flows/flows.types\"\nimport { RawLog } from \"../redux/logStream/logStream.types\"\nimport { FLOW_RETRIES, FLOW_RETRY_TIMEOUT, TIMEOUT } from \"./config\"\nimport { DaemonArgumentsResponse } from \"./services.types\"\n\nexport let jinadInstance = axios.create()\n\ntype Settings = {\n  host: string\n  port: string | number\n  log: string\n  profile: string\n  yaml: string\n  ready: string\n  shutdown: string\n}\n\ntype ConnectionCallback = (data: {\n  connected: boolean\n  message: string\n}) => void\n\ntype LogHandler = (log: RawLog) => void\n\ntype Args = { [key: string]: string | number | boolean }\n\nconst jinadClient = {\n  connect: async (settings: Settings, callback: ConnectionCallback) => {\n    logger.log(\"api - connect - settings\", settings)\n    const baseURL = `${settings.host}:${settings.port}`\n\n    jinadInstance = axios.create({ baseURL, timeout: TIMEOUT })\n\n    let result\n    try {\n      result = await jinadInstance.get(\"/\")\n      if (result.status === 200) {\n        logger.log(\"api - connect successfully connected to jinad\")\n        return callback({\n          connected: true,\n          message: `Successfully connected to Jina at ${baseURL}`,\n        })\n      }\n    } catch (e) {\n      logger.log(\"api - connect could not connect to jinad:\", e)\n    }\n    return callback({ connected: false, message: \"failed to connect\" })\n  },\n  getJinaFlowArguments: async (): Promise<FlowArguments> => {\n    const statusResult = await jinadInstance.get(\"/status\")\n    const version = statusResult.data.jina.jina\n\n    const flowResult = await jinadInstance.get(\"/flows/arguments\")\n    const flow = parseDaemonFlowMethodOptions(flowResult.data)\n\n    const podResult = await jinadInstance.get(\"/pods/arguments\")\n    const pod = parseDaemonFlowMethodOptions(podResult.data)\n\n    const peaResult = await jinadInstance.get(\"/peas/arguments\")\n    const pea = parseDaemonFlowMethodOptions(peaResult.data)\n\n    return { version, flow, pod, pea }\n  },\n  getDaemonStatus: async () => {\n    try {\n      const result = await jinadInstance.get(\"/status\")\n      if (result.status === 200)\n        return { status: \"success\", daemonStatus: result.data }\n      return { status: \"error\", message: result.data }\n    } catch (e) {\n      return { status: \"error\", message: e }\n    }\n  },\n  getWorkspaces: async () => {\n    try {\n      const result = await jinadInstance.get(\"/workspaces\")\n      if (result.status === 200)\n        return { status: \"success\", workspaces: result.data }\n      return { status: \"error\", message: result.data }\n    } catch (e) {\n      return { status: \"error\", message: e }\n    }\n  },\n  createWorkspace: async (files: (string | Blob)[]) => {\n    const formData = new FormData()\n    files.forEach((file: string | Blob) => {\n      if (typeof file === \"string\") formData.append(\"files\", new Blob([file]))\n      else formData.append(\"files\", file)\n    })\n    const options = {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n      },\n    }\n    try {\n      const result = await jinadInstance.post(\"/workspaces\", formData, options)\n      if (result.status === 201)\n        return { status: \"success\", workspace: result.data }\n      return { status: \"error\", message: result.data }\n    } catch (e) {\n      return { status: \"error\", message: e }\n    }\n  },\n  deleteWorkspace: async (workspace_id: string) => {\n    try {\n      const result = await jinadInstance.delete(`/workspaces/${workspace_id}`)\n      if (result.status === 200)\n        return { status: \"success\", message: result.data }\n    } catch (e) {\n      logger.log(`api - deleteWorkspace ${workspace_id} error: `, e)\n    }\n    return { status: \"error\" }\n  },\n  deleteAllWorkspaces: async () => {\n    try {\n      const result = await jinadInstance.delete(`/workspaces/all`)\n      if (result.status === 200)\n        return { status: \"success\", message: result.data }\n    } catch (e) {\n      logger.log(`api - deleteAllWorkspaces error: `, e)\n    }\n    return { status: \"error\" }\n  },\n  getArgumentsForFlow: async () => {\n    try {\n      const result = await jinadInstance.get(\"/flows/arguments\")\n      if (result.status === 200)\n        return { status: \"success\", arguments: result.data }\n      return { status: \"error\", message: result.data }\n    } catch (e) {\n      return { status: \"error\", message: e }\n    }\n  },\n  getFlow: async (flow_id: string) => {\n    try {\n      const result = await jinadInstance.get(`/flows/${flow_id}`)\n      if (result.status === 200) return { status: \"success\", flow: result.data }\n      return {\n        status: \"error\",\n        message: result.data,\n      }\n    } catch (e) {\n      logger.log(\"api - getFlow error getting flow: \", e)\n    }\n    return {\n      status: \"error\",\n      message: `Could not get flow\\nFlowId:${flow_id}`,\n    }\n  },\n  startFlow: async (yaml: string, workspace_id?: string) => {\n    logger.log(\"yamlString:\", yaml)\n    const formData = new FormData()\n    formData.append(\"flow\", new Blob([yaml]))\n    if (workspace_id) formData.append(\"workspace_id\", workspace_id)\n    const options = {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n      },\n    }\n    try {\n      const result = await jinadInstance.post(`/flows`, formData, options)\n      if (result.status === 201) {\n        const flow_id = result.data\n        const message = `Successfuly started flow\\nid: ${flow_id}`\n        return { status: \"success\", message, flow_id }\n      }\n      return { status: \"error\", message: result.data }\n    } catch (e) {\n      logger.log(\"api - startFlow error: \", e)\n      return { status: \"error\", message: e.message }\n    }\n  },\n  terminateFlow: async (flow_id: string) => {\n    try {\n      const result = await jinadInstance.delete(`/flows/${flow_id}`)\n      logger.log(\"terminate result\", result)\n      if (result.status === 200) {\n        const message = `Successfuly terminated flow ${flow_id}`\n        return { status: \"success\", message, flow: result.data }\n      }\n      return { status: \"error\", message: result.data }\n    } catch (e) {\n      logger.log(\"api - terminateFlow error: \", e)\n      return { status: \"error\", message: e.message }\n    }\n  },\n  terminateAllFlows: async () => {\n    try {\n      const result = await jinadInstance.delete(\"/flows/all\")\n      if (result.status === 200)\n        return { status: \"success\", message: result.data }\n    } catch (e) {\n      logger.log(\"api - terminateAllFlows error: \", e)\n    }\n    return { status: \"error\" }\n  },\n  getLogs: async (workspace_id: string, flow_id: string) => {\n    try {\n      const result = await jinadInstance.get(`/logs/${workspace_id}/${flow_id}`)\n      if (result.status === 200) {\n        const logs = result.data\n          .split(\"\\n\")\n          .filter((line: string) => line !== \"\")\n          .map(JSON.parse)\n        return { status: \"success\", logs }\n      }\n    } catch (e) {\n      logger.log(\"api - getLogs error: \", e)\n    }\n    return {\n      status: \"error\",\n      message: `Could not get logs for flow.\\nFlowId:${flow_id}`,\n    }\n  },\n  waitForFlow: async (\n    workspace_id: string,\n    flow_id: string,\n    numRetries: number = FLOW_RETRIES,\n    retryTimeout: number = FLOW_RETRY_TIMEOUT\n  ) => {\n    for (let i = 0; i < numRetries; ++i) {\n      logger.log(`checking for flow logs [${i + 1}]`)\n      try {\n        const result = await jinadInstance.get(\n          `/logs/${workspace_id}/${flow_id}`\n        )\n        if (result.status === 200) {\n          return {\n            status: \"success\",\n            message: `Successfuly stablished logstream.\\nFlowId:${flow_id}`,\n          }\n        }\n      } catch (e) {\n        logger.log(`no flow logs yet [${i + 1}]`)\n      }\n      await timeout(retryTimeout)\n    }\n    return {\n      status: \"error\",\n      message: `Could not establish log stream for flow.\\nFlowId:${flow_id}`,\n    }\n  },\n  listenForLogs: async (\n    workspace_id: string,\n    flow_id: string,\n    settings: Settings,\n    callback: ConnectionCallback,\n    handleLog: LogHandler\n  ) => {\n    let origin = settings.host\n      .replace(\"http://\", \"ws://\")\n      .replace(\"https://\", \"wss://\")\n    const baseURL = `${origin}:${settings.port}/logstream/${workspace_id}/${flow_id}`\n    logger.log(\"api - listenForLogs - baseURl:\", baseURL)\n    let socket: WebSocket\n    try {\n      socket = new WebSocket(baseURL)\n    } catch (e) {\n      return callback({ connected: false, message: e })\n    }\n\n    socket.addEventListener(\"open\", () => {\n      callback({ connected: true, message: \"Successfully Connected\" })\n      socket.send(JSON.stringify({ from: 0 }))\n    })\n    socket.addEventListener(\"message\", function (event) {\n      logger.log(\"api - logstream - message received: \", event)\n      const log: RawLog = JSON.parse(event.data)\n      handleLog(log)\n    })\n    socket.addEventListener(\"close\", function (event) {\n      callback({ connected: false, message: \"Connection closed\" })\n    })\n    socket.addEventListener(\"error\", function (event) {\n      callback({ connected: false, message: \"Socket error\" })\n    })\n  },\n  getArgumentsForPod: async () => {\n    try {\n      const result = await jinadInstance.get(\"/pods/arguments\")\n      if (result.status === 200)\n        return { status: \"success\", arguments: result.data }\n      return { status: \"error\", message: result.data }\n    } catch (e) {\n      return { status: \"error\", message: e }\n    }\n  },\n  getPod: async (podId: string) => {\n    try {\n      const result = await jinadInstance.get(`/pods/${podId}`)\n      if (result.status === 200) return { status: \"success\", pod: result.data }\n    } catch (e) {\n      logger.log(`api - getPod ${podId} error: `, e)\n    }\n    return { status: \"error\" }\n  },\n  startPod: async (podArgs: Args) => {\n    try {\n      const result = await jinadInstance.post(`/pods`, podArgs)\n      if (result.status === 201) return { status: \"success\", pod: result.data }\n      return { status: \"error\", message: result.data }\n    } catch (e) {\n      return { status: \"error\", message: e }\n    }\n  },\n  terminatePod: async (podId: string) => {\n    try {\n      const result = await jinadInstance.delete(`/pods/${podId}`)\n      if (result.status === 200)\n        return { status: \"success\", message: result.data }\n    } catch (e) {\n      logger.log(`api - terminatePod ${podId} error: `, e)\n    }\n    return { status: \"error\" }\n  },\n  terminateAllPods: async () => {\n    try {\n      const result = await jinadInstance.delete(`/pods/all`)\n      if (result.status === 200)\n        return { status: \"success\", message: result.data }\n    } catch (e) {\n      logger.log(`api - terminateAllPods error: `, e)\n    }\n    return { status: \"error\" }\n  },\n  getArgumentsForPea: async () => {\n    try {\n      const result = await jinadInstance.get(\"/peas/arguments\")\n      if (result.status === 200)\n        return { status: \"success\", arguments: result.data }\n      return { status: \"error\", message: result.data }\n    } catch (e) {\n      return { status: \"error\", message: e }\n    }\n  },\n  getPea: async (peaId: string) => {\n    try {\n      const result = await jinadInstance.get(`/peas/${peaId}`)\n      if (result.status === 200) return { status: \"success\", pea: result.data }\n    } catch (e) {\n      logger.log(`api - getPea error getting pea ${peaId}: `, e)\n    }\n    return { status: \"error\" }\n  },\n  startPea: async (peaArgs: Args) => {\n    try {\n      const result = await jinadInstance.post(`/peas`, peaArgs)\n      if (result.status === 201) return { status: \"success\", pea: result.data }\n      return { status: \"error\", message: result.data }\n    } catch (e) {\n      return { status: \"error\", message: e }\n    }\n  },\n  terminatePea: async (peaId: string) => {\n    try {\n      const result = await jinadInstance.delete(`/peas/${peaId}`)\n      if (result.status === 200)\n        return { status: \"success\", message: result.data }\n    } catch (e) {\n      logger.log(`api - terminatePea ${peaId} error: `, e)\n    }\n    return { status: \"error\" }\n  },\n  terminateAllPeas: async () => {\n    try {\n      const result = await jinadInstance.delete(\"/peas/all\")\n      if (result.status === 200)\n        return { status: \"success\", message: result.data }\n    } catch (e) {\n      logger.log(`api - terminateAllPeas error: `, e)\n    }\n    return { status: \"error\" }\n  },\n}\n\nconst typeMap: { [key: string]: FlowArgumentType } = {\n  string: \"string\",\n  boolean: \"boolean\",\n  integer: \"integer\",\n  array: \"string\",\n}\n\nexport const parseDaemonFlowMethodOptions = (\n  data: DaemonArgumentsResponse\n): FlowArgument[] => {\n  return Object.entries(data).map(\n    ([name, { description, default: defaultValue, type: itemType }]) => {\n      const type = typeMap[itemType]\n      if (typeof defaultValue === \"undefined\" || defaultValue === null)\n        return { name, description, type }\n      return { name, description, defaultValue, type }\n    }\n  )\n}\n\nexport default jinadClient\n","export const TIMEOUT = 30000\nexport const FLOW_RETRIES = 10\nexport const FLOW_RETRY_TIMEOUT = 3000\n","import { LogStreamState } from \"./logStream.types\";\nimport { RawLogLevel } from \"./logStream.types\";\n\nexport const SHOW_LOG_INDEX = \"SHOW_LOG_INDEX\";\nexport const HANDLE_NEW_LOG = \"HANDLE_NEW_LOG\";\n\nexport const intialLogStreamState: LogStreamState = {\n  logIndex: 0,\n  logLevelOccurrences: {},\n  logs: [],\n  logLevels: {\n    INFO: 0,\n    SUCCESS: 0,\n    WARNING: 0,\n    ERROR: 0,\n    CRITICAL: 0,\n    DEBUG: 0,\n  },\n  logSources: {},\n};\n\nexport const getInitialLogLevel = (): RawLogLevel => ({\n  lastLog: 0,\n  levels: {\n    INFO: 0,\n    SUCCESS: 0,\n    WARNING: 0,\n    ERROR: 0,\n    CRITICAL: 0,\n    DEBUG: 0,\n  },\n});\n","// @ts-nocheck\nimport * as YAML from \"yaml\"\nimport { getInitialLogLevel } from \"../redux/logStream/logStream.constants\"\nimport _ from \"lodash\"\nimport { Level, LogLevelOccurrences } from \"../redux/logStream/logStream.types\"\nimport {\n  FlowArgument,\n  FlowArguments,\n  FlowChart,\n} from \"../redux/flows/flows.types\"\nimport { Edge, Node } from \"react-flow-renderer/dist/types\"\nimport { isEdge, isNode } from \"react-flow-renderer\"\n\nconst customProperties = [\"depth\", \"label\"] //todo generate this dynamically with proper typing\n\nexport const parseYAML = (yamlSTR: string) => {\n  //todo removing the !tag is kind a bootleg solution. We should look into the parsing\n  //todo type this properly\n  let yamlStrWithoutTag = /^!/.test(yamlSTR)\n    ? yamlSTR.split(\"\\n\").slice(1).join(\"\\n\")\n    : yamlSTR\n\n  try {\n    const data = YAML.parse(yamlStrWithoutTag)\n    if (typeof data !== \"object\" || data === null)\n      throw new Error(\"Invalid YAML\")\n    Object.keys(data.pods).forEach((podId) => {\n      if (data.pods[podId].needs && !Array.isArray(data.pods[podId].needs)) {\n        data.pods[podId].needs = [data.pods[podId].needs]\n      }\n    })\n\n    return { data }\n  } catch (error) {\n    alert(\"Error Parsing YAML:\\n\" + error.message)\n  }\n}\n\nexport const decodePropValue = (\n  argName,\n  propValue,\n  possibleArguments: FlowArgument[]\n) => {\n  const argument = possibleArguments.find((arg) => arg.name === argName)\n  if (!argument) return propValue\n  if (argument.type === \"boolean\") return String(propValue) === \"true\"\n  return propValue\n}\n\nconst unpackIfLengthOne = (arr) =>\n  Array.isArray(arr) && arr.length === 1 ? arr[0] : arr\n\nexport const formatAsYAML = (\n  chart: FlowChart,\n  flowArguments: FlowArguments\n) => {\n  const { with: chartWith, elements } = chart\n\n  let nodes: Node[] = []\n  let links: Edge[] = []\n\n  elements.forEach((element) => {\n    if (isEdge(element)) links.push(element)\n    if (isNode(element)) nodes.push(element)\n  })\n\n  const { pod: podArguments } = flowArguments\n\n  const childParentsMap = links.reduce((acc, curr) => {\n    const parent = curr.source\n    const child = curr.target\n\n    if (!acc[child]) {\n      acc[child] = []\n    }\n    acc[child].push(parent)\n    return acc\n  }, {})\n\n  const pods = nodes\n    .filter((node) => node.data.label !== \"gateway\")\n    .reduce((acc, node) => {\n      const key = node.data.label\n\n      const podProperties = Object.entries(node.data).reduce(\n        (acc, [argName, propValue]) => {\n          if (customProperties.includes(argName)) return acc\n          acc[argName] = decodePropValue(argName, propValue, podArguments)\n          return acc\n        },\n        {}\n      )\n      if (childParentsMap[key]) {\n        podProperties.needs = unpackIfLengthOne(childParentsMap[key])\n      }\n\n      acc[key] = { ...podProperties }\n      return acc\n    }, {})\n\n  const canvas = nodes.reduce((acc, node) => {\n    const {\n      position: { x, y },\n    } = node\n    const key = node.data.label || node.data.name\n    acc[key] = { x: parseInt(x), y: parseInt(y) }\n    return acc\n  }, {})\n\n  const output = { with: { ...chartWith, board: { canvas } }, pods }\n  return `!Flow\\n${YAML.stringify(output)}`\n}\n\nexport const formatSeconds = (numSeconds: number): string => {\n  let minute = 60\n  let hour = 60 * minute\n\n  return numSeconds < minute\n    ? `${Math.floor(numSeconds)}s`\n    : numSeconds < hour\n    ? `${Math.floor(numSeconds / minute)}m ${Math.floor(numSeconds % minute)}s`\n    : `${Math.floor(numSeconds / hour)}h ${Math.floor(\n        (numSeconds % hour) / minute\n      )}m ${Math.floor(numSeconds % minute)}s`\n}\n\nexport const formatBytes = (numBytes: number): string => {\n  return numBytes < 1024\n    ? `${numBytes} Bytes`\n    : numBytes < 1024 ** 2\n    ? `${(numBytes / 1024).toFixed(1)} KB`\n    : numBytes < 1024 ** 3\n    ? `${(numBytes / 1024 ** 2).toFixed(1)} MB`\n    : `${(numBytes / 1024 ** 3).toFixed(1)} GB`\n}\n\nexport function getLogLevelCharts(\n  numSeconds: number = 60,\n  MAX_CHART_TICKS: number,\n  logLevelOccurrences: LogLevelOccurrences,\n  currentDate: Date\n) {\n  const emptyItem = getInitialLogLevel()\n  const step = numSeconds / MAX_CHART_TICKS\n  const data = []\n  const currentInterval = Math.ceil(currentDate / 1000 / step) * step\n  const now = Math.floor(currentDate / 1000)\n  for (let i = currentInterval - numSeconds; i < currentInterval; i += step) {\n    let item = _.cloneDeep(emptyItem)\n    for (let j = i; j < i + step; ++j) {\n      const occurrence = logLevelOccurrences[j]\n      if (!occurrence) continue\n      item.lastLog = occurrence.lastLog\n      Object.entries(occurrence.levels).forEach((logEntry) => {\n        const level = logEntry[0] as Level\n        const amount = logEntry[1] as number\n        item.levels[level] = item.levels[level] + amount\n      })\n    }\n    data.push(item)\n  }\n  return { data, numSeconds, numTicks: MAX_CHART_TICKS, lastTimestamp: now }\n}\n","import { State } from \"../index\";\n\n// Todo: Ideally, we shouldn't remove keywords. This should be fixed with providing correct data\nconst tagsToHide = [\n  \"Some keywords to describe the executor\",\n  \"separated by commas\",\n];\n\nexport const selectHubImages = (state: State) =>\n  state.hubState.images.map((image) => {\n    const keywords = image.keywords;\n    return {\n      ...image,\n      keywords: keywords.filter((keyword) => !tagsToHide.includes(keyword)),\n    };\n  });\n\nexport const selectIsHubImagesLoading = (state: State) =>\n  state.hubState.loading;\n","import { HubState} from \"./hub.types\";\n\nexport const FETCH_HUB_IMAGES = \"FETCH_HUB_IMAGES\";\nexport const FETCH_HUB_IMAGES_SUCCESS = \"FETCH_HUB_IMAGES_SUCCESS\";\nexport const FETCH_HUB_IMAGES_FAILURE= \"FETCH_HUB_IMAGES_FAILURE\";\n\nexport const HIDE_BANNER_TIMEOUT = 5000;\n\nexport const initialHubState: HubState = {\n  images: [],\n  loading: false,\n  error: null\n};\n","/** @jsx jsx */\nimport styled from \"@emotion/styled\";\nimport { jsx, keyframes } from \"@emotion/react\";\n\nconst rotate = keyframes`\n  100%{\n    transform:rotatez(-720deg);\n  }\n`;\nconst Spinner = styled.div`\n  border-radius: 50%;\n  border: 8px solid white;\n  border-color: ${(props) => {\n    let { primary, background } = props.theme.palette;\n    return `${primary} ${background} ${primary} ${background}`;\n  }};\n`;\nconst InnerSpinner = styled(Spinner)`\n  position: absolute;\n  height: 32px;\n  width: 32px;\n  animation: ${rotate} 1s infinite ease-in;\n`;\nconst rotateAndHide = keyframes`\n  50%{\n    border-color: transparent;\n  }\n  100%{\n    transform:rotatez(360deg);\n  }\n`;\nconst OuterSpinner = styled(Spinner)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 48px;\n  width: 48px;\n  background: transparent;\n  border-radius: 50%;\n  animation: ${rotateAndHide} 1s infinite ease-in-out;\n`;\nconst SpinnerContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nconst SpinningLoader = () => (\n  <SpinnerContainer>\n    <OuterSpinner>\n      <InnerSpinner />\n    </OuterSpinner>\n  </SpinnerContainer>\n);\n\nexport default SpinningLoader;\n","import {\n  FETCH_HUB_IMAGES,\n  FETCH_HUB_IMAGES_SUCCESS,\n  FETCH_HUB_IMAGES_FAILURE,\n} from \"./hub.constants\";\nimport {\n  HubActionTypes,\n  HubImage,\n  FetchHubImagesSuccessAction,\n  FetchHubImagesFailureAction,\n} from \"./hub.types\";\nimport { Dispatch } from \"redux\";\nimport { getHubImages } from \"../../services/hubApi\";\nimport { FilterParams } from \"../../components/Hub/HubFilters\";\nimport { AppThunk } from \"..\";\n\nconst defaultParams = { kind: [], keywords: [] };\n\nexport const fetchHubImages = (\n  filters: FilterParams = defaultParams\n): AppThunk<Promise<void>> => async (dispatch: Dispatch<HubActionTypes>) => {\n  try {\n    dispatch({\n      type: FETCH_HUB_IMAGES,\n    });\n\n    const images = await getHubImages(filters);\n\n    dispatch(fetchHubImagesSuccess(images));\n  } catch (e) {\n    dispatch(fetchHubImagesFailure(e));\n  }\n};\n\nconst fetchHubImagesSuccess = (\n  images: HubImage[]\n): FetchHubImagesSuccessAction => {\n  return {\n    type: FETCH_HUB_IMAGES_SUCCESS,\n    payload: { images },\n  };\n};\n\nconst fetchHubImagesFailure = (error: Error): FetchHubImagesFailureAction => {\n  return {\n    type: FETCH_HUB_IMAGES_FAILURE,\n    payload: { error },\n  };\n};\n","import React from \"react\";\nimport { Row, Col, Card } from \"react-bootstrap\";\nimport styled from \"@emotion/styled\";\nimport { Link } from \"react-router-dom\";\n\ntype HubImagePreview = {\n  name: string;\n  author: string;\n  description: string;\n  keywords: string[];\n};\n\ntype Props = {\n  image: HubImagePreview;\n  index: number;\n};\n\nexport const Tag = styled.div`\n  background: ${(props) => props.theme.palette.tagBackground};\n  border-radius: 6px;\n  display: inline-block;\n  padding: 0.25rem;\n  margin-right: 1rem;\n  margin-bottom: 1rem;\n  white-space: nowrap;\n`;\nconst Title = styled.div`\n  font-size: 1.25em;\n  font-weight: 700;\n  line-height: normal;\n`;\n\nconst SubTitle = styled.div`\n  font-weight: 600;\n  opacity: 0.5;\n`;\n\nconst ImageLink = styled(Link)`\n  color: unset;\n  &:hover {\n    text-decoration: none;\n  }\n`;\n\nexport default function ImageCard({ image, index }: Props) {\n  let { name, author, keywords, description } = image;\n\n  return (\n    <ImageLink to={`/package/${index}`}>\n      <Card className=\"clickable mb-4 h-100 image-card\" data-name=\"hubImage\">\n        <Card.Body className=\"pb-0 mb-0 pt-3\">\n          <Row>\n            <Col xs=\"12\" className=\"px-0\">\n              <Title className=\"mb-2\">{name}</Title>\n              {keywords.map((keyword) => (\n                <Tag data-name=\"hubImageTags\" key={keyword}>\n                  {keyword}\n                </Tag>\n              ))}\n              <SubTitle className=\"mb-2\">{author}</SubTitle>\n            </Col>\n            <Col sm=\"12\" className=\"px-0 pb-0\">\n              <div className=\"description-container\">\n                <div className=\"description-overlay\" />\n                <div className=\"app-description\">{description}</div>\n              </div>\n            </Col>\n          </Row>\n        </Card.Body>\n      </Card>\n    </ImageLink>\n  );\n}\n"],"sourceRoot":""}