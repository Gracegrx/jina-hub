{"version":3,"sources":["components/Common/ExpandingSearchbar.tsx","components/Hub/StarRating.tsx","views/LogIn.tsx","components/Hub/BuildHistory.tsx","components/Hub/ImageDetails.tsx","components/Hub/Readme.tsx","components/Hub/CopyCommand.tsx","components/Hub/ReviewCard.tsx","components/Hub/ImageReviews.tsx","views/PackageView.tsx","components/Hub/ImageCard.tsx","views/HubView.tsx","logger.ts","flux/index.ts","helpers.ts","flux/dispatcher.ts","settings.ts","components/Layout/MainNavbar/NavbarSpacer.tsx","components/Layout/MainNavbar/NavbarToggle.tsx","components/Layout/MainNavbar/ConnectionIndicator.tsx","components/Layout/MainNavbar/UserActions.tsx","components/Layout/MainNavbar/NavLogo.tsx","components/Layout/MainNavbar/MainNavbar.tsx","components/Layout/MainSidebar/SidebarMainNavbar.tsx","components/Layout/MainSidebar/SidebarNavItem.tsx","components/Layout/MainSidebar/SidebarNavItems.tsx","components/Layout/MainSidebar/MainSidebar.tsx","components/Layout/MainFooter.tsx","components/Common/CookiesBanner.tsx","components/Common/InfoToast.tsx","components/Common/ConnectionToast.tsx","modals/PasteYAML.tsx","modals/WriteReview.tsx","modals/LogDetails.tsx","layouts/IconSidebar.tsx","layouts/HubLayout.tsx","components/Common/PageTitle.tsx","flux/constants.ts","flux/tranformLog.ts","components/Common/MultiFilterSelect.tsx","routes/Hub.tsx","components/FlowChart/CommandBar.tsx","components/FlowChart/ChartNode.tsx","components/FlowChart/SidebarItem.tsx","components/FlowChart/Sidebar.tsx","components/FlowChart/NodePort.tsx","components/FlowChart/FlowSelection.tsx","components/FlowChart/Tooltip.tsx","data/tooltipConfig.ts","views/FlowView.tsx","components/LogStream/BarChartBase.tsx","components/LogStream/LogLevelSummaryChart.tsx","components/LogStream/PieChartBase.tsx","components/LogStream/LogLevelPieChart.tsx","components/LogStream/LogItem.tsx","components/LogStream/LogsTableHeader.tsx","components/LogStream/LogGroup.tsx","components/LogStream/LogsTable.tsx","views/LogsView.tsx","components/Task/ElapsedCard.tsx","components/Task/ProgressCard.tsx","components/Task/SpeedCard.tsx","components/Task/BarChartCard.tsx","components/Task/QueriesPerSecond.tsx","views/TaskView.tsx","components/Settings/options.ts","components/Settings/FormItem.tsx","components/Settings/Settings.tsx","views/Settings.tsx","routes/Dashboard.tsx","routes/index.ts","withTracker.tsx","views/FallbackPage.tsx","apps/Hub.tsx","flux/api.ts","data/exampleFlows.ts","flux/store.ts","data/sidebar-nav-items.ts","index.tsx","theme.ts","flux/config.ts","components/Common/HelpCard.tsx","views/NotFound.tsx"],"names":["ExpandingSearchbar","value","onChange","placeholder","variant","className","Prepend","Text","Control","type","e","target","Append","onClick","getStars","amount","rate","i","handleRatingClick","index","stars","integer","Math","floor","remainder","push","key","j","length","StarRating","rating","userRated","totalRatings","Login","componentDidMount","hash","window","location","href","indexOf","code","substring","hubURL","render","fluid","noGutters","lg","md","src","style","maxWidth","alt","id","React","Component","BuildHistory","buildHistory","image","map","build","idx","formattedCreated","Date","created","toLocaleString","buildSize","size","toFixed","os","architecture","ImageDetails","name","version","author","description","documentation","rel","source","license","vendor","url","ReadMe","readme","dangerouslySetInnerHTML","__html","CopyCommand","copyCode","imageVar","repoTags","language","atomOneLight","ReviewCard","review","username","content","ImageReviews","reviews","newReview","PackageView","props","getImageData","componentWillUnmount","Store","removeListener","a","getHubImage","state","imageId","imageData","setState","loading","Dispatcher","dispatch","actionType","Constants","POST_RATING","payload","copyToClipboard","SHOW_BANNER","SHOW_MODAL","modal","modalParams","readmeHTML","totalStars","Container","Row","PageTitle","title","Col","windowHash","windowParams","URLSearchParams","get","on","ImageCard","official","to","Card","Body","xs","sm","Footer","width","categoryOptions","label","sortOptions","HubView","getHubImages","images","sortBy","sortType","search","setCategory","category","updateSearch","searchQuery","SEARCH_HUB","q","sort","MultiFilterSelect","options","onFilterChange","option","isSearchable","Object","keys","handleErrorMessage","msg","line","logger","log","pushLog","data","logs","arg","logsEnabled","args","arguments","console","isEnabled","enable","_navigator","navigator","addEventListener","disable","removeEventListener","setFormat","format","logsFormat","exportLogs","JSON","stringify","filename","blob","Blob","saveAs","require","transformLog","YAML","settings","propertyList","toBlob","serializeLogsToCSVBlob","reduce","acc","formattedTimestamp","process","levelname","lineno","module","funcName","pathname","serializeLogsToCSV","serializeLogsToJSONBlob","fileContent","serializeLogsToJSON","serializeLogsToTextBlob","serializeLogsToText","propertyTypes","str","temp","document","createElement","body","appendChild","select","execCommand","removeChild","parseYAML","yamlSTR","parse","error","alert","formatForFlowchart","pods","canvas","formatted","offset","x","y","nodes","links","selected","hovered","scale","with","prevNode","gateway","newPods","forEach","pod","node","ports","needs","send_to","position","properties","parents","Array","isArray","nodeFrom","linkId","link","color","from","nodeId","portId","parseInt","depthPopulation","offsetX","nodeOffset","offsetY","depth","getNodeDepth","currentId","currentDepth","longestDepth","parent","prop","formatAsYAML","chart","chartWith","needsByPodLabel","values","curr","nodeLabelsByPortId","getNodeLabelsByPortId","outPort","neededBy","inPort","arr","podProperties","entries","propValue","propName","decodePropValue","output","board","formatSeconds","numSeconds","formatBytes","numBytes","DispatcherBase","NavbarSpacer","NavbarToggle","toggleSidebar","ConnectionIndicator","connected","reconnect","pill","theme","UserActions","user","logOut","userActionsVisible","toggleUserActions","tag","Dropdown","caret","toggle","NavLink","_json","avatar_url","DropdownMenu","right","small","open","Link","NavLogo","lineHeight","MainNavbar","usesAuth","usesConnection","hideSidebarToggle","showLogo","useState","setUserActionsVisible","navbar","isVisible","item","hasSubItems","items","path","active","matches","match","startsWith","RouteNavLink","htmlBefore","htmlAfter","top","subItem","navItems","nav","SidebarNavItem","MainSidebar","menuVisible","sidebarNavItems","classes","classNames","SidebarMainNavbar","SidebarNavItems","MainFooter","menuItems","copyright","loggerEnabled","enableLogger","disableLogger","defaultProps","contained","CookiesBanner","acceptCookies","Button","InfoToast","icon","Toast","Header","closeButton","message","ConnectionToast","overlay","backgroundColor","border","bottom","maxHeight","left","padding","transform","overflow","inputRef","closeModal","importYAML","ariaHideApp","isOpen","contentLabel","shouldCloseOnOverlayClick","onRequestClose","closeTimeoutMS","Form","Group","Label","ref","as","rows","submitReview","hiddenKeys","filter","includes","IconSidebarLayout","getData","getUser","getModal","getModalParams","isLoading","banner","getBanner","getConnectionStatus","getMenuState","getSidebarItems","localStorage","setItem","String","acceptedCookies","CLOSE_MODAL","yamlString","IMPORT_CUSTOM_YAML","POST_REVIEW","RECONNECT","LOG_OUT","TOGGLE_SIDEBAR","storeCopy","getStoreCopy","children","LogDetails","PasteYAML","WriteReview","getItem","HubLayout","subtitle","SET_CURRENT_TAB","SELECT_NODE","SHOW_LOG_AT_INDEX","SAVE_SETTINGS","LOAD_FLOW","SHOW_POD_IN_FLOW","CREATE_NEW_FLOW","UPDATE_FLOW","DUPLICATE_FLOW","DELETE_FLOW","createdDate","fromUnixTime","nanoid","unixTime","timestamp","customStyles","dropdownIndicator","styles","indicatorSeparator","opacity","container","provided","selectProps","cursor","control","background","isMulti","clearAfter","rest","undefined","val","readOnly","hubRoutes","exact","layout","component","NotFound","LogIn","ChartNode","importChart","copyChart","exportImage","ButtonGroup","disabled","list","isSpecial","isGateway","labelText","Badge","replicas","SidebarItem","draggable","onDragStart","event","dataTransfer","setData","REACT_FLOW_CHART","ReadOnly","duplicateFlow","EditLink","updateLink","deleteSelection","nodeFromId","nodeToId","choices","FormControl","choice","EditNode","updateLabel","updateNewValue","updateExistingValue","availableProperties","setSearchQuery","filteredProperties","setFilteredProperties","useEffect","results","property","toLowerCase","spellCheck","searchString","newProperties","PodMenu","defaultPods","FlowChartSidebar","readonly","updateNode","selectedId","selectedType","setNode","selectedNode","parseNode","newNode","_","cloneDeep","NodePort","data-html2canvas-ignore","SelectionIndicator","show","TitleConnectionIndicator","DeleteFlowButton","deleteFlow","EditFlowsButton","isEditing","toggleEditing","FlowSelection","flows","loadFlow","selectedFlowId","createNewFlow","setIsEditing","userFlows","exampleFlows","currentFlow","Toggle","Menu","Item","currentIsEditing","flowId","flow","Tooltip","tooltip","tooltipConfig","tooltipsGlobal","showTooltip","toogleOffWhenClicked","text","syncEvents","FlowView","chartContainer","querySelector","preventDefault","extension","captureOverlay","classList","add","showCaptureOverlay","setTimeout","canvasParams","foreignObjectRendering","logging","scrollX","scrollY","html2canvas","then","toDataURL","getElementById","setAttribute","click","showOverlay","getFlowchart","flowType","getSelectedFlowId","getFlows","newChart","updateFlow","fromId","toId","actionCallbacks","onDeleteKey","syncFlow","selectNode","copyChartAsYAML","validateLink","fromNodeId","toNodeId","fromPortId","toPortId","showImportModal","stopPropagation","yaml","display","Components","TooltipComponent","NodeInner","CustomNode","Port","CustomPort","callbacks","config","Sidebar","chartWithTooltips","getAvailableProperties","actions","obj","action","newChartTransformer","_levels","INFO","borderColor","SUCCESS","WARNING","ERROR","CRITICAL","DEBUG","getParsedDatasets","level","levelData","tick","levels","barPercentage","categoryPercentage","fill","getLabels","labels","ChartBase","height","numTicks","canvasRef","useRef","chartInstance","setChartInstance","onClickChart","activePoints","getElementsAtEvent","getXAxisLabel","getYAxisLabel","Number","isInteger","ChartLegend","current","chartOptions","animation","duration","events","maintainAspectRatio","responsive","legend","tooltips","enabled","elements","point","radius","hitRadius","scales","xAxes","stacked","ticks","maxRotation","callback","gridLines","zeroLineColor","yAxes","scaleLabel","borderDash","drawBorder","suggestedMin","autoSkip","maxTicksLimit","chartConfig","datasets","newChartInstance","ChartElement","chartData","update","LogLevelSummaryChart","memo","showLog","prevProps","nextProps","lastTimestamp","PieChartBase","getColor","names","borderWidth","boxWidth","mode","LogLevelPieChart","LogItem","columns","showLogDetails","logData","logName","levelInitial","firstCol","secondCol","thirdCol","css","textOverflow","whiteSpace","paddingRight","marginRight","areEqual","LogsTableHeader","_icons","success","pending","warning","failed","CountSummary","numItems","StatusIcon","status","find","k","getStatusFromLevels","ExpandController","expanded","LogGroup","group","setExpanded","prev","Collapse","in","timeout","saveOptions","viewOptions","table","getInitialView","preference","getUserViewPreference","_lastNumLogs","_searchIndex","FlexSearch","create","doc","field","saveLogData","generateFileName","itemKey","arrayLikeToArray","arrayLike","toOption","LogsList","listRef","scrolledToBottom","setScrolledToBottom","scrollToItem","onScroll","scrollOffset","itemCount","itemSize","itemData","GroupedLogs","groupedData","grouping","LogsTable","currentView","setCurrentView","selectedSources","setSelectedSources","selectedLevels","setSelectedLevels","searchResults","setSearchResults","setSearchString","useCallback","newData","slice","setView","view","unfiltered","sources","Set","resultData","result","filters","podNames","split","podName","countBy","levelItem","chartUpdateInterval","logsUpdateInterval","ElapsedCard","elapsed","task_name","seconds","ProgressCard","progress","hoverBorderColor","cutoutPercentage","percent","num_bars","bar_len","currentRequest","SpeedCard","speed","history","maxValue","max","minValue","min","getChartOptions","difference","tension","suggestedMax","getChartConfig","newChartData","unit","BarChartCard","currentTab","setCurrentTab","tooltipItem","xLabel","datasetIndex","afterLabel","d","sent","pointBackgroundColor","pointHoverBackgroundColor","received","getChartData","newOptions","QueriesPerSecondCard","qps","TaskView","taskData","getTaskData","xl","QueriesPerSecond","messages","bytes","lastUpdate","lastUpdateChart","baseOptions","advancedOptions","FormItem","colSpan","SettingsCard","getSettings","original","setOriginal","updates","setUpdates","updateSetting","setting","newUpdates","form","aria-controls","aria-expanded","SettingsView","Settings","dashboardRoutes","IconSidebar","hasNewLogs","getLogs","setLogs","getLogLevelOccurences","logLevelOccurrences","setLogLevelOccurrences","getLogLevelCharts","logLevelCharts","setLogLevelCharts","updateChart","newCharts","checkForNewLogs","newLogs","newOccurrences","updateLogs","onNewLogs","setInterval","clearInterval","_index","showLogInTable","lastLog","GoogleAnalytics","initialize","REACT_APP_GAID","withTracker","WrappedComponent","trackPage","page","set","pageview","BASENAME","REACT_APP_BASENAME","HOC","this","currentPage","nextPage","FallbackPage","resetErrorBoundary","Hub","basename","routes","route","FallbackComponent","onReset","init","logStream","taskStream","hub","axios","baseURL","withCredentials","headers","Accept","connect","connectionUpdate","logUpdate","taskUpdate","logString","host","port","close","EventSource","onopen","onmessage","m","onerror","taskString","profile","getProfile","getYAML","connectionString","getImages","getImage","postRating","post","postReview","searchHub","pokedex","flower","southpark","CHART_LEVELS","getExampleFlows","parsed","getUserFlows","storedFlows","isEmpty","_userFlow","getInitialLevelOccurences","occurences","getInitialStore","shutdown","ready","selectedFlow","logSources","logLevels","logLevelOccurences","logIndex","summaryCharts","processes","_updateTaskInterval","_bannerTimeout","_store","hostname","registerActions","showModal","showBanner","importCustomYAML","showLogAtIndex","saveSettings","showPodByLabel","clearIntervals","initFlowChart","initLogStream","initHub","initUser","emit","api","connectedFlow","handleLogConnectionStatus","handleNewLog","handleNewTaskEvent","speed_unit","bytes_recv","bytes_sent","msg_recv","msg_sent","num_reqs","msgData","bytesData","b","parseFloat","shift","flowchart","customYAML","newFlow","saveFlowsToStorage","flowNumbers","f","largestNumber","omit","nonExampleFlows","toSave","showError","reload","clearTimeout","hideBanner","getCurrentTab","getLogSources","getLogLevels","getSummaryCharts","emptyItem","step","now","occurence","getActivePanel","getIndexedLog","register","peakLogs","peakStore","EventEmitter","App","palette","default","primary","main","secondary","info","ReactDOM","HelpCard"],"mappings":"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","file":"static/js/main.57477be3.chunk.js","sourcesContent":["import React from \"react\";\nimport { Form, InputGroup } from \"react-bootstrap\";\n\ntype Props = {\n  value: string | number;\n  placeholder?:string;\n  variant?:string;\n  onChange: (newValue: string) => void;\n};\n\nfunction ExpandingSearchbar({ value, onChange,placeholder,variant }: Props) {\n  return (\n    <div className={`expanding-searchbar expanding-searchbar-${variant||\"default\"}`}>\n      <InputGroup>\n        <InputGroup.Prepend className=\"ml-auto\">\n          <InputGroup.Text>\n            <i className=\"material-icons\">search</i>\n          </InputGroup.Text>\n        </InputGroup.Prepend>\n        <Form.Control\n          type=\"text\"\n          placeholder={placeholder}\n          value={value}\n          onChange={(e: any) => onChange(e.target.value)}\n        />\n        <InputGroup.Append>\n          <InputGroup.Text>\n            <i className={`cursor-pointer text-muted material-icons mr-3 ${!value?'d-invisible':\"\"}`} onClick={()=>onChange(\"\")}>cancel</i>\n          </InputGroup.Text>\n        </InputGroup.Append>\n      </InputGroup>\n    </div>\n  );\n}\n\nexport { ExpandingSearchbar };\n","import React from \"react\";\n\ntype RatingFunction = (stars: number) => void;\ntype StarRatingProps = {\n  rating: any;\n  totalRatings:number;\n  userRated?: boolean;\n  rate?: RatingFunction;\n};\n\nconst StarRating = ({ rating, userRated, rate,totalRatings }: StarRatingProps) => {\n  const stars = getStars(rating, rate);\n  return (\n    <div\n      className={`d-inline-block app-rating mb-3 ${rating ? \"existing\" : \"\"} ${\n        userRated ? \"userRated\" : \"\"\n      } text-muted`}\n    >\n      <span className=\"text-faded\">{userRated ? \"You Rated: \" : \"\"}</span>\n      {stars}\n      {\n        totalRatings&&<span className=\"rating-num ml-1\">({totalRatings})</span>\n      }\n    </div>\n  );\n};\n\nexport const getStars = (\n  amount: number,\n  rate: RatingFunction | undefined\n): JSX.Element[] => {\n  const handleRatingClick = (index: number) => rate && rate(index);\n  let stars = [];\n  let integer = Math.floor(amount);\n  let remainder = amount - integer;\n  let i;\n  for (i = 0; i < integer; ++i) {\n    let index = i;\n    stars.push(\n      <i\n        key={i}\n        className=\"material-icons\"\n        onClick={() => handleRatingClick(index)}\n      >\n        star\n      </i>\n    );\n  }\n  if (remainder >= 0.8) {\n    let index = i;\n    stars.push(\n      <i\n        key={i++}\n        className=\"material-icons\"\n        onClick={() => handleRatingClick(index)}\n      >\n        star\n      </i>\n    );\n  } else if (remainder >= 0.25) {\n    let index = i;\n    stars.push(\n      <i\n        key={i++}\n        className=\"material-icons\"\n        onClick={() => handleRatingClick(index)}\n      >\n        star_half\n      </i>\n    );\n  }\n  for (let j = stars.length; j < 5; ++j) {\n    let index = i;\n    stars.push(\n      <i\n        key={i++}\n        className=\"material-icons\"\n        onClick={() => handleRatingClick(index)}\n      >\n        star_outline\n      </i>\n    );\n  }\n  return stars;\n};\n\nexport default StarRating;\n","/* eslint jsx-a11y/anchor-is-valid: 0 */\n\nimport { hubURL } from \"../flux/config\";\n\nimport React from \"react\";\nimport { Container, Row, Col, Card, CardBody } from \"shards-react\";\n\nclass Login extends React.Component {\n  componentDidMount = () => {\n    let hash = window.location.href;\n    if (hash.indexOf(\"code\") > 0) {\n      let code = hash.substring(hash.indexOf(\"code\") + 5, hash.length);\n      window.location = `${hubURL}/auth/github/callback?code=${code}` as any;\n    }\n  };\n  render = () => {\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        <Row noGutters className=\"h-100\">\n          <Col lg=\"3\" md=\"5\" className=\"auth-form mx-auto\">\n            <Card>\n              <CardBody>\n                <img\n                  className=\"auth-form__logo d-table mx-auto mb-3\"\n                  src=\"/jina-light.svg\"\n                  style={{ maxWidth: \"100px\" }}\n                  alt=\"Jina\"\n                />\n                <h5 className=\"auth-form__title text-center mb-4\">Log in</h5>\n                <a\n                  href={`${hubURL}/auth/github`}\n                  id=\"github-button\"\n                  className=\"btn btn-block btn-social btn-github\"\n                >\n                  <i className=\"fab fa-github\"></i> Sign in with GitHub\n                </a>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    );\n  };\n}\n\nexport default Login;\n","import React from \"react\";\nimport { Card, CardHeader, CardBody } from \"shards-react\";\n\ntype Build = {\n  created: string;\n  size: number;\n  os: string;\n  architecture: string;\n};\n\ntype Props = {\n  image: {\n    buildHistory?: Build[];\n    [key: string]: any;\n  };\n};\n\nexport default function BuildHistory({ image }: Props) {\n  const { buildHistory } = image;\n  return (\n    <Card className=\"readme-container mb-4\">\n      <CardHeader className=\"border-bottom d-flex flex-row\">\n        <h6 className=\"m-0 d-inline-block\">Build History</h6>\n      </CardHeader>\n      <CardBody className=\"p-0 build-history\">\n        {buildHistory &&\n          buildHistory.map((build, idx) => {\n            const formattedCreated = new Date(build.created).toLocaleString();\n            const buildSize = (build.size / 1e6).toFixed(2);\n            return (\n              <div key={idx} className=\"user-activity__item pr-3 py-3\">\n                <div className=\"user-activity__item__icon mt-2\">\n                  <i className=\"material-icons\">build</i>\n                </div>\n                <div className=\"user-activity__item__content\">\n                  <span className=\"text-light\">{formattedCreated}</span>\n                  <p>\n                    [{build.os}/{build.architecture}] {buildSize} MB\n                  </p>\n                </div>\n              </div>\n            );\n          })}\n      </CardBody>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Card, CardHeader, CardBody, Row, Col } from \"shards-react\";\nimport { HubImage } from \"./types\";\n\ntype Props = {\n  image: HubImage;\n};\n\nexport default function ImageDetails({ image }: Props) {\n  return (\n    <Card className=\"readme-container mb-4\">\n      <CardHeader className=\"border-bottom d-flex flex-row\">\n        <h6 className=\"m-0 d-inline-block\">Image Details</h6>\n      </CardHeader>\n      <CardBody className=\"pt-0 pb-2\">\n        <Row className=\"border-bottom py-2\">\n          <Col>Name</Col>\n          <Col>{image.name}</Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Version</Col>\n          <Col>{image.version}</Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Author</Col>\n          <Col>{image.author}</Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Description</Col>\n          <Col>{image.description}</Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Documentation</Col>\n          <Col>\n            <a\n              href={image.documentation}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {image.documentation}\n            </a>\n          </Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Source</Col>\n          <Col>\n            <a href={image.source} target=\"_blank\" rel=\"noopener noreferrer\">\n              {image.source}\n            </a>\n          </Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>License</Col>\n          <Col>{image.license}</Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Vendor</Col>\n          <Col>{image.vendor}</Col>\n        </Row>\n        <Row className=\"py-2\">\n          <Col>URL</Col>\n          <Col>\n            <a href={image.url} target=\"_blank\" rel=\"noopener noreferrer\">\n              {image.url}\n            </a>\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Card, CardHeader, CardBody } from \"shards-react\";\n\ntype Props = {\n  readme: string;\n  documentation: string;\n};\n\nexport default function ReadMe({ readme, documentation }: Props) {\n  return (\n    <Card className=\"readme-container mb-4\">\n      <CardHeader className=\"border-bottom d-flex flex-row\">\n        <h6 className=\"m-0 d-inline-block\">README.MD</h6>\n        <div className=\"flex-fill d-inline-block\" />\n        <a\n          href={documentation}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"cursor-pointer text-primary\"\n        >\n          <i className=\"fab fa-github\"></i> View on GitHub\n        </a>\n      </CardHeader>\n      <CardBody>\n        {readme ? (\n          <div\n            className=\"markup\"\n            dangerouslySetInnerHTML={{ __html: readme }}\n          />\n        ) : (\n          <h2 className=\"text-muted text-center py-4\">No Readme Found</h2>\n        )}\n      </CardBody>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Card, CardHeader, CardBody } from \"shards-react\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { atomOneLight } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport { HubImage } from \"./types\";\n\ntype Props = {\n  image: HubImage;\n  copyCode: (code: string) => void;\n};\n\nexport default function CopyCommand({ image, copyCode }: Props) {\n  const imageVar = image.repoTags[image.repoTags.length - 1];\n  let code = [\n    `from jina.flow import Flow\\nf = Flow().add(name='my-pod', image='${imageVar}')`,\n    `from jina.flow import Flow\\n# assuming you have a running gateway on 192.168.0.123:45678\\nf = Flow().add(name='my-pod', image='${imageVar}', yaml_path='my.yml')`,\n    `from jina.flow import Flow\\n# assuming you have a running gateway on 192.168.0.123:45678\\nf = Flow().add(name='my-pod', image='${imageVar}', host='192.168.0.123', port_grpc=45678)`,\n    `!Flow\\npods:\\n  my_pod1:\\n    image: \"${imageVar}\"`,\n    `jina pod --image ${imageVar}`,\n    `docker run -p 55555:55555 -p 55556:55556 ${imageVar} --port-in 55555 --port-out 55556`,\n    `docker run -v $(pwd)/my.yml:/my.yml ${imageVar} --yaml-path /my.yml`,\n  ];\n  return (\n    <Card className=\"mb-4\">\n      <CardHeader className=\"p-3 border-bottom d-flex flex-row\">\n        <h6 className=\"m-0 d-inline-block\">Usage</h6>\n      </CardHeader>\n      <CardBody className=\"py-2 px-3 pt-4 code-usage\">\n        <p className=\"mb-1\">Use this image in Flow API</p>\n        <SyntaxHighlighter\n          language=\"python\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[0])}\n        >\n          {code[0]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">\n          Use this image in Flow API and override YAML\n        </p>\n        <SyntaxHighlighter\n          language=\"python\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[1])}\n        >\n          {code[1]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">Use this image remotely in Flow API</p>\n        <SyntaxHighlighter\n          language=\"python\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[2])}\n        >\n          {code[2]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">Use this image in Flow YAML</p>\n        <SyntaxHighlighter\n          language=\"yaml\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[3])}\n        >\n          {code[3]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">Use this image in Jina CLI</p>\n        <SyntaxHighlighter\n          language=\"bash\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[4])}\n        >\n          {code[4]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">Use this image in Docker CLI</p>\n        <SyntaxHighlighter\n          language=\"bash\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[5])}\n        >\n          {code[5]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">\n          Use this image in Docker CLI and override YAML\n        </p>\n        <SyntaxHighlighter\n          language=\"bash\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[6])}\n        >\n          {code[6]}\n        </SyntaxHighlighter>\n      </CardBody>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Card, CardHeader, CardBody } from \"shards-react\";\nimport { Review } from \"./types\";\n\ntype Props = {\n  review: Review;\n};\n\nexport default function ReviewCard({ review }: Props) {\n  return (\n    <Card className=\"readme-container mb-4\">\n      <CardHeader className=\"border-bottom d-flex flex-row\">\n        <h6 className=\"m-0 d-inline-block\">{review.username}</h6>\n        <div className=\"flex-fill d-inline-block\" />\n      </CardHeader>\n      <CardBody className=\"py-3\">{review.content}</CardBody>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Button } from \"shards-react\";\nimport ReviewCard from \"./ReviewCard\";\nimport { Review } from \"./types\";\n\ntype Props = {\n  reviews: Review[];\n  newReview: () => void;\n};\n\nexport default function ImageReviews({ reviews, newReview }: Props) {\n  return (\n    <div>\n      <div className=\"border-bottom d-flex flex-row mb-4\">\n        <h3 className=\"flex-fill\">Reviews</h3>\n        <div>\n          <Button onClick={newReview}>\n            <i className=\"material-icons mr-2\">add_comment</i>New Review\n          </Button>\n        </div>\n      </div>\n      {reviews.length > 0 ? (\n        reviews.map((review, idx) => <ReviewCard key={idx} review={review} />)\n      ) : (\n        <h2 className=\"text-muted text-center py-4\">No Reviews</h2>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { Dispatcher, Constants, Store } from \"../flux\";\nimport BuildHistory from \"../components/Hub/BuildHistory\";\nimport { PageTitle } from \"../components/Common/PageTitle\";\nimport Details from \"../components/Hub/ImageDetails\";\nimport Readme from \"../components/Hub/Readme\";\nimport CopyCommand from \"../components/Hub/CopyCommand\";\nimport StarRating from \"../components/Hub/StarRating\";\nimport ImageReviews from \"../components/Hub/ImageReviews\";\nimport { copyToClipboard } from \"../helpers\";\n\nclass PackageView extends React.Component<any, any> {\n  constructor(props: any) {\n    super(props);\n    let windowHash = window.location.hash;\n    const windowParams = windowHash.substring(\n      windowHash.indexOf(\"?\"),\n      windowHash.length\n    );\n    const params = new URLSearchParams(windowParams);\n    const imageId = params.get(\"id\");\n    this.state = {\n      imageId,\n      loading: false,\n      imageData: {\n        reviews: [],\n        repoTags: [],\n      },\n    };\n    Store.on(\"update-hub\", this.getImageData);\n  }\n\n  componentDidMount = () => {\n    this.getImageData();\n  };\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-hub\", this.getImageData);\n  };\n\n  getImageData = async () => {\n    const imageData = (await Store.getHubImage(this.state.imageId)) || {};\n    this.setState({ imageData, loading: false });\n  };\n\n  rate = (stars: any) => {\n    const { imageId } = this.state;\n    Dispatcher.dispatch({\n      actionType: Constants.POST_RATING,\n      payload: { imageId, stars },\n    });\n  };\n\n  copyCode = (content: any) => {\n    copyToClipboard(content);\n    Dispatcher.dispatch({\n      actionType: Constants.SHOW_BANNER,\n      payload: [\"Content copied to clipboard\", \"success\"],\n    });\n  };\n\n  newReview = () => {\n    const imageId = this.state.imageData.id;\n    const modal = \"review\";\n    Dispatcher.dispatch({\n      actionType: Constants.SHOW_MODAL,\n      payload: { modal, modalParams: { imageId } },\n    });\n  };\n\n  render = () => {\n    const { imageData, loading } = this.state;\n    const {\n      name,\n      readmeHTML,\n      documentation,\n      totalStars,\n      totalRatings,\n      userRated,\n      reviews,\n    } = imageData;\n    let rating;\n    if (totalStars && totalRatings) {\n      rating = totalStars / totalRatings;\n    }\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        {loading ? (\n          <div className=\"error\">\n            <div className=\"loader\" />\n          </div>\n        ) : (\n          <div className=\"px-4\">\n            <Row noGutters className=\"page-header mb-4\">\n              <PageTitle\n                title={name}\n                className=\"text-sm-left mb-3\"\n              />\n              <Col md=\"6\" />\n              <Col md=\"3\" className=\"py-sm-2 text-right\">\n                <h3>\n                  <StarRating\n                    rating={userRated || rating}\n                    totalRatings={totalRatings}\n                    rate={this.rate}\n                    userRated={userRated}\n                  />\n                </h3>\n              </Col>\n            </Row>\n            <Row>\n              <Col md=\"6\">\n                <CopyCommand image={imageData} copyCode={this.copyCode} />\n                <Details image={imageData} />\n                <BuildHistory image={imageData} />\n              </Col>\n              <Col md=\"6\">\n                <Readme readme={readmeHTML} documentation={documentation} />\n                <ImageReviews reviews={reviews} newReview={this.newReview} />\n              </Col>\n            </Row>\n          </div>\n        )}\n      </Container>\n    );\n  };\n}\n\nexport default PackageView;\n","import React from \"react\";\nimport { Row, Col, Card } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport StarRating from \"./StarRating\";\nimport { HubImage } from \"./types\";\n\ntype Props = {\n  image: HubImage;\n};\n\nexport default function ImageCard({ image }: Props) {\n  let {\n    name,\n    id,\n    official,\n    author,\n    description,\n    totalStars,\n    totalRatings,\n  } = image;\n\n  let rating;\n  if (image.totalStars && image.totalRatings) {\n    rating = totalStars / totalRatings;\n  }\n\n  return (\n    <Link className=\"unstyled-link\" to={`/package?id=${id}`}>\n      <Card className=\"clickable mb-4 h-100 image-card\">\n        <Card.Body className=\"pb-0 mb-0 pt-3\">\n          <Row>\n            <Col xs=\"12\" className=\"px-0\">\n              <div className=\"app-category mb-2\">search</div>\n              <div className=\"app-title mb-2\">{name}</div>\n              <div className=\"app-subtitle mb-2\">{author}</div>\n            </Col>\n            <Col sm=\"12\" className=\"px-0 pb-0\">\n              <div className=\"description-container\">\n                <div className=\"description-overlay\" />\n                <div className=\"app-description\">{description}</div>\n              </div>\n            </Col>\n          </Row>\n        </Card.Body>\n        <Card.Footer className=\"pt-0 px-3 pb-3\">\n          {totalRatings ? (\n            <StarRating rating={rating} totalRatings={totalRatings} />\n          ) : (\n            <span className=\"text-muted\">no ratings</span>\n          )}\n          {official && (\n            <span className=\"float-right\">\n              <img src=\"/jina-j.png\" alt=\"Official Package\" width={30} />\n            </span>\n          )}\n        </Card.Footer>\n      </Card>\n    </Link>\n  );\n}\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { Dispatcher, Constants, Store } from \"../flux\";\nimport { PageTitle } from \"../components/Common/PageTitle\";\nimport { MultiFilterSelect } from \"../components/Common/MultiFilterSelect\";\nimport { ExpandingSearchbar } from \"../components/Common/ExpandingSearchbar\";\nimport ImageCard from \"../components/Hub/ImageCard\";\n\nconst categoryOptions = [\n  { value: \"all\", label: \"All Categories\" },\n  { value: \"search\", label: \"Search\" },\n  { value: \"configurations\", label: \"Configurations\" },\n];\n\nconst sortOptions = [\n  { value: \"suggested\", label: \"Suggested\" },\n  { value: \"highestRating\", label: \"Highest Rated\" },\n  { value: \"newest\", label: \"Newest\" },\n];\n\nclass HubView extends React.Component<any, any> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      images: Store.getHubImages(),\n      sortType: \"suggested\",\n      category: \"all\",\n      searchQuery: \"\",\n    };\n\n    Store.on(\"update-hub\", this.getHubImages);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-hub\", this.getHubImages);\n  };\n\n  getHubImages = () => {\n    const images = Store.getHubImages();\n    this.setState({ images });\n  };\n\n  sortBy = (sortType: string) => {\n    this.setState({ sortType }, this.search);\n  };\n\n  setCategory = (category: string) => {\n    this.setState({ category }, this.search);\n  };\n\n  updateSearch = (searchQuery: string) => {\n    this.setState({ searchQuery }, this.search);\n  };\n\n  search = () => {\n    const { category, searchQuery, sortType } = this.state;\n    Dispatcher.dispatch({\n      actionType: Constants.SEARCH_HUB,\n      payload: { category, q: searchQuery, sort: sortType },\n    });\n  };\n\n  render = () => {\n    const { images, searchQuery } = this.state;\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        <div className=\"px-4\">\n          <Row className=\"page-header\">\n            <PageTitle title=\"Jina Hub\" className=\"text-sm-left mb-3\" />\n          </Row>\n          <Row className=\"mb-4\">\n            <Col md=\"8\">\n              <MultiFilterSelect\n                options={categoryOptions}\n                onFilterChange={(option: any[]) =>\n                  this.setCategory(option[0].value)\n                }\n                className=\"hub-select mb-2 mr-0 mb-md-0 mr-md-2\"\n                placeholder=\"All Categories\"\n                isSearchable={false}\n              />\n              <MultiFilterSelect\n                options={sortOptions}\n                onFilterChange={(option: any[]) => this.sortBy(option[0].value)}\n                className=\"hub-select mb-2 mr-0 mb-md-0 mr-md-2\"\n                placeholder=\"Suggested\"\n                isSearchable={false}\n              />\n            </Col>\n            <Col md=\"4\">\n              <ExpandingSearchbar\n                variant=\"gray\"\n                placeholder=\"search hub...\"\n                value={searchQuery}\n                onChange={this.updateSearch}\n              />\n            </Col>\n          </Row>\n          <Row>\n            {Object.keys(images).map((imageId) => (\n              <Col key={imageId} md=\"3\" className=\"mb-4\">\n                <ImageCard image={(images as any)[imageId]} />\n              </Col>\n            ))}\n          </Row>\n        </div>\n      </Container>\n    );\n  };\n}\n\nexport default HubView;\n","import { saveAs } from \"file-saver\";\n\nfunction handleErrorMessage(msg: any, url: any, line: any) {\n  // @ts-ignore\n  logger.log(\"window.onerror - ERROR\", msg, url, `line: ${line}`);\n}\n\nfunction pushLog(data: any) {\n  (window as any).logs.push(data);\n}\n\nfunction clearLogs() {\n  (window as any).logs = [];\n}\n\nconst logger = {\n  log: function (...arg: any) {\n    if (!(window as any).logsEnabled) return;\n    let args = [...(arguments as any)];\n    console.log(...args);\n    pushLog(args);\n  },\n  isEnabled: function () {\n    return (window as any).logsEnabled;\n  },\n  enable: function () {\n    const _navigator: any = {};\n    for (let i in window.navigator)\n      _navigator[i] = (window as any).navigator[i];\n    clearLogs();\n    pushLog(_navigator);\n    window.addEventListener(\"error\", handleErrorMessage as any);\n    (window as any).logsEnabled = true;\n  },\n  disable: function () {\n    window.removeEventListener(\"error\", handleErrorMessage as any);\n    (window as any).logsEnabled = false;\n  },\n  setFormat: function (format = \"json\") {\n    (window as any).logsFormat = format;\n  },\n  exportLogs: function () {\n    const format = (window as any).logsFormat || \"json\";\n    const logs = (window as any).logs;\n    let content = \"[\\n\";\n    for (let i = 0; i < logs.length; ++i) {\n      let args = logs[i];\n      content += JSON.stringify(args) + `${i < logs.length - 1 ? \",\" : \"\"}\\n`;\n    }\n    content += \"]\";\n\n    let filename = `jina-dashboard-debug-output-${new Date()}.${format}`;\n    let blob = new Blob([content], { type: \"text,plain;charset=utf-8\" });\n    saveAs(blob, filename);\n  },\n};\n\nexport default logger;\n","const { Dispatcher } = require(\"./dispatcher\");\nconst { Store } = require(\"./store\");\nconst { Constants } = require(\"./constants\");\nconst { transformLog } = require(\"./tranformLog\");\n\nexport { Dispatcher, Store, Constants, transformLog };\n","// @ts-nocheck\nimport { ProcessedLog } from \"./flux/tranformLog\";\n\ntype PodPropertyType = \"str\" | \"int\" | \"bool\" | \"SocketType\" | \"ReplicaType\";\ntype PodProperty = {\n  name: string;\n  type: PodPropertyType;\n};\ntype PropertyMap = { [key: string]: PodPropertyType };\n\nconst YAML = require(\"yaml\");\nconst settings = require(\"./settings\");\nconst propertyList: PodProperty[] = require(\"./data/podProperties.json\");\n\nfunction toBlob(content: string) {\n  return new Blob([content], { type: \"text,plain;charset=utf-8\" });\n}\nfunction serializeLogsToCSV(logs: ProcessedLog[]): string {\n  const columns =\n    \"created,formatted timestamp,name,process,level name,message,filename,line number,module,funcname,pathname\\n\";\n  const fileContent = logs.reduce((acc, log) => {\n    acc += `${log.created},\"${log.formattedTimestamp}\",${log.name},${log.process},${log.levelname},\"${log.msg}\",${log.filename},${log.lineno},${log.module},${log.funcName},${log.pathname}\\n`;\n    return acc;\n  }, columns);\n  return fileContent;\n}\n\nfunction serializeLogsToJSON(logs: ProcessedLog[]): string {\n  const fileContent = logs.reduce((acc, log, i) => {\n    acc += JSON.stringify(log) + `${i < logs.length - 1 ? \",\" : \"\"}\\n`;\n    return acc;\n  }, \"\\n\");\n  return `[${fileContent}]`;\n}\n\nfunction serializeLogsToText(logs: ProcessedLog[]): string {\n  const fileContent = logs.reduce((acc, log) => {\n    acc += `${log.formattedTimestamp} ${log.name}@${log.process} [${log.levelname}]: ${log.msg}\\n`;\n    return acc;\n  }, \"\");\n  return fileContent;\n}\n\nconst serializeLogsToCSVBlob = (logs: ProcessedLog[]) =>\n  toBlob(serializeLogsToCSV(logs));\nconst serializeLogsToJSONBlob = (logs: ProcessedLog[]) =>\n  toBlob(serializeLogsToJSON(logs));\nconst serializeLogsToTextBlob = (logs: ProcessedLog[]) =>\n  toBlob(serializeLogsToText(logs));\n\nconst propertyTypes: PropertyMap = {};\npropertyList.forEach((prop) => (propertyTypes[prop.name] = prop.type));\n\nexport function copyToClipboard(str: string) {\n  const temp = document.createElement(\"textarea\");\n  temp.value = str;\n  document.body.appendChild(temp);\n  temp.select();\n  document.execCommand(\"copy\");\n  document.body.removeChild(temp);\n  return;\n}\nexport function parseYAML(yamlSTR: string) {\n  try {\n    const data = YAML.parse(yamlSTR);\n    return { data };\n  } catch (error) {\n    alert(\"Error Parsing YAML:\\n\" + error);\n    return { error };\n  }\n}\nexport function formatForFlowchart(pods, canvas) {\n  const formatted = {\n    offset: {\n      x: 0,\n      y: 0,\n    },\n    nodes: {},\n    links: {},\n    selected: {},\n    hovered: {},\n    scale: 1,\n    with: {},\n  };\n\n  let nodes = {};\n  let links = {};\n\n  let prevNode = false;\n\n  if (!pods.gateway) {\n    let newPods = {};\n    newPods = {\n      gateway: null,\n      ...pods,\n    };\n    pods = newPods;\n  }\n\n  Object.keys(pods).forEach((id) => {\n    const pod = pods[id] || {};\n    let node = {\n      id,\n      label: id,\n      ports: {},\n      needs: {},\n      send_to: {},\n      position: {},\n      properties: { ...pod },\n    };\n\n    if (node.properties.needs) delete node.properties.needs;\n\n    node.ports[\"inPort\"] = { id: \"inPort\", type: \"input\" };\n    node.ports[\"outPort\"] = { id: \"outPort\", type: \"output\" };\n\n    if (prevNode && !pod.needs && id !== \"gateway\") pod.needs = prevNode;\n\n    if (pod.needs) {\n      let parents = Array.isArray(pod.needs) ? pod.needs : [pod.needs];\n\n      for (let i = 0; i < parents.length; ++i) {\n        let nodeFrom = parents[i];\n        node.needs[nodeFrom] = true;\n\n        let linkId = `${nodeFrom}-to-${id}`;\n        let link = {\n          color: \"red\",\n          id: linkId,\n          from: { nodeId: nodeFrom, portId: \"outPort\" },\n          to: { nodeId: id, portId: \"inPort\" },\n        };\n        links[linkId] = link;\n      }\n    }\n\n    if (canvas && canvas[id]) {\n      const { x, y } = canvas[id];\n      node.position = { x: parseInt(x), y: parseInt(y) };\n    }\n\n    nodes[id] = node;\n    prevNode = id;\n  });\n\n  const depthPopulation = {}; //how many nodes at each depth\n  const offsetX = settings.nodeOffset.x;\n  const offsetY = settings.nodeOffset.y;\n\n  //fallback: if no position encoded on canvas portion of YAML, infer the position using depth and order\n  Object.keys(nodes).forEach((id) => {\n    let depth = getNodeDepth(nodes, id, 0);\n    nodes[id].depth = depth;\n\n    if (depthPopulation[depth] >= 0) depthPopulation[depth]++;\n    else depthPopulation[depth] = 0;\n\n    if (!nodes[id].position.x)\n      nodes[id].position = {\n        y: depth * offsetY + offsetY,\n        x: depthPopulation[depth] * offsetX + offsetX,\n      };\n  });\n\n  formatted.nodes = nodes;\n  formatted.links = links;\n\n  return formatted;\n}\nconst getNodeLabelsByPortId = ({ from, to }, nodes) => ({\n  [from.portId]: nodes[from.nodeId].label || nodes[from.nodeId].properties.name,\n  [to.portId]: nodes[to.nodeId].label || nodes[to.nodeId].properties.name,\n});\nconst decodePropValue = (propName, propValue) =>\n  propertyTypes[propName] === \"bool\" ? propValue === \"true\" : propValue;\nconst unpackIfLengthOne = (arr) =>\n  Array.isArray(arr) && arr.length === 1 ? arr[0] : arr;\n\nexport function formatAsYAML(chart) {\n  const { with: chartWith, nodes, links } = chart;\n\n  const needsByPodLabel = Object.values(links).reduce((acc, curr) => {\n    const nodeLabelsByPortId = getNodeLabelsByPortId(curr, nodes);\n    const needs = nodeLabelsByPortId.outPort;\n    const neededBy = nodeLabelsByPortId.inPort;\n\n    if (!acc[neededBy]) {\n      acc[neededBy] = [];\n    }\n    acc[neededBy].push(needs);\n    return acc;\n  }, {});\n\n  const pods = Object.values(nodes).reduce((acc, node) => {\n    const { label } = node;\n    if (!label) return acc;\n\n    const podProperties = Object.entries(node.properties).reduce(\n      (acc, [key, propValue]) => {\n        acc[key] = decodePropValue(key, propValue);\n        return acc;\n      },\n      {}\n    );\n    if (needsByPodLabel[label]) {\n      podProperties.needs = unpackIfLengthOne(needsByPodLabel[label]);\n    }\n\n    acc[label] = { ...podProperties };\n    return acc;\n  }, {});\n\n  const canvas = Object.values(nodes).reduce((acc, node) => {\n    const {\n      position: { x, y },\n    } = node;\n    acc[node.label] = { x, y };\n    return acc;\n  }, {});\n\n  const output = { with: { ...chartWith, board: { canvas } }, pods };\n  return `!Flow\\n${YAML.stringify(output)}`;\n}\n\nexport function formatSeconds(numSeconds: number): string {\n  let minute = 60;\n  let hour = 60 * minute;\n\n  return numSeconds < minute\n    ? `${Math.floor(numSeconds)}s`\n    : numSeconds < hour\n    ? `${Math.floor(numSeconds / minute)}m ${Math.floor(numSeconds % minute)}s`\n    : `${Math.floor(numSeconds / hour)}h ${Math.floor(\n        (numSeconds % hour) / minute\n      )}m ${Math.floor(numSeconds % minute)}s`;\n}\n\nexport function formatBytes(numBytes: number): string {\n  return numBytes < 1024\n    ? `${numBytes} Bytes`\n    : numBytes < 1024 ** 2\n    ? `${(numBytes / 1024).toFixed(1)} KB`\n    : numBytes < 1024 ** 3\n    ? `${(numBytes / 1024 ** 2).toFixed(1)} MB`\n    : `${(numBytes / 1024 ** 3).toFixed(1)} GB`;\n}\n\nfunction getNodeDepth(nodes, currentId, currentDepth): number {\n  let parents = Object.keys(nodes[currentId].needs);\n  let longestDepth = 0;\n\n  for (let i = 0; i < parents.length; ++i) {\n    let parent = parents[i];\n    let depth;\n    if (nodes[parent].depth) depth = nodes[parent].depth + 1;\n    else depth = getNodeDepth(nodes, parent, 1);\n    if (depth > longestDepth) longestDepth = depth;\n  }\n\n  return currentDepth + longestDepth;\n}\n\nexport {\n  serializeLogsToCSVBlob,\n  serializeLogsToTextBlob,\n  serializeLogsToJSONBlob,\n};\n","const { Dispatcher: DispatcherBase } = require(\"flux\");\n\nexport const Dispatcher = new DispatcherBase();\n","export const nodeOffset = {\n  x: 250,\n  y: 150,\n};\n","import React from \"react\";\n\nfunction NavbarSpacer() {\n  return (\n    <div className=\"main-navbar__search w-100 d-none d-md-flex d-lg-flex\"></div>\n  );\n}\n\nexport { NavbarSpacer };\n","import React from \"react\";\n\ntype Props = {\n  toggleSidebar?: () => void;\n};\n\nfunction NavbarToggle({ toggleSidebar }: Props) {\n  return (\n    <nav className=\"nav cursor-pointer\">\n      <span\n        onClick={toggleSidebar}\n        className=\"nav-link nav-link-icon toggle-sidebar d-sm-inline d-md-inline d-lg-none text-center\"\n      >\n        <i className=\"material-icons\">&#xE5D2;</i>\n      </span>\n    </nav>\n  );\n}\n\nexport { NavbarToggle };\n","import React from \"react\";\n// @ts-ignore\nimport { NavItem, NavLink, Badge } from \"shards-react\";\n\ntype Props = {\n  connected?: boolean;\n  reconnect?: () => void;\n};\n\nfunction ConnectionIndicator({ connected, reconnect }: Props) {\n  return (\n    <NavItem\n      className=\"dropdown notifications\"\n      onClick={reconnect}\n    >\n      <NavLink className=\"nav-link-icon text-center\">\n        <div className=\"nav-link-icon__wrapper\">\n          <i className=\"material-icons\">language</i>\n          {connected ? (\n            <Badge pill theme=\"success\" className=\"connection-indicator p-1\">\n              <i className=\"material-icons\">done</i>\n            </Badge>\n          ) : (\n            <Badge pill theme=\"danger\" className=\"connection-indicator p-1\">\n              <i className=\"material-icons\">close</i>\n            </Badge>\n          )}\n        </div>\n      </NavLink>\n    </NavItem>\n  );\n}\n\nexport { ConnectionIndicator };\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Collapse,\n  NavItem,\n  NavLink,\n  Button,\n  // @ts-ignore\n} from \"shards-react\";\n\ntype User = {\n  displayName: string;\n  emails: [{ value: string }];\n  id: string;\n  nodeId: string;\n  photos: [{ value: string }];\n  profileUrl: string;\n  provider: string;\n  username: string;\n  _json: any;\n  _raw: any;\n};\n\ntype Props = {\n  userActionsVisible: boolean;\n  user: User | null;\n  logOut: () => void;\n  toggleUserActions: () => void;\n};\n\nfunction UserActions({\n  user,\n  logOut,\n  userActionsVisible,\n  toggleUserActions,\n}: Props) {\n  return (\n    <NavItem tag={Dropdown} caret toggle={toggleUserActions}>\n      {user ? (\n        <DropdownToggle caret tag={NavLink} className=\"text-nowrap px-3\">\n          <img\n            className=\"user-avatar rounded-circle mr-2\"\n            src={user._json.avatar_url}\n            alt=\"User Avatar\"\n          />{\" \"}\n          <span className=\"d-none d-md-inline-block\">{user.username}</span>\n        </DropdownToggle>\n      ) : (\n        <Link to=\"/login\" className=\"nav-link px-3\">\n          <Button className=\"text-nowrap mb-0 mt-1\">Log in</Button>\n        </Link>\n      )}\n\n      <Collapse tag={DropdownMenu} right small open={userActionsVisible}>\n        <DropdownItem\n          tag={Link}\n          to=\"/\"\n          className=\"text-danger\"\n          onClick={logOut}\n        >\n          <i className=\"material-icons text-danger\">&#xE879;</i> Logout\n        </DropdownItem>\n      </Collapse>\n    </NavItem>\n  );\n}\n\nexport { UserActions };\n","import React from \"react\";\n// @ts-ignore\nimport { NavbarBrand } from \"shards-react\";\n\nfunction NavLogo() {\n  return (\n    <NavbarBrand href=\"#\" style={{ lineHeight: \"25px\" }}>\n      <div className=\"d-table m-auto\">\n        <img\n          id=\"main-logo\"\n          className=\"d-inline-block align-top mr-1 ml-3\"\n          style={{ maxWidth: \"25px\" }}\n          src=\"/icon.png\"\n          alt=\"Jina\"\n        />\n      </div>\n    </NavbarBrand>\n  );\n}\n\nexport { NavLogo };\n","import React, { useState } from \"react\";\n// @ts-ignore\nimport { Container, Navbar, Nav } from \"shards-react\";\n\nimport { NavbarSpacer } from \"./NavbarSpacer\";\nimport { NavbarToggle } from \"./NavbarToggle\";\nimport { ConnectionIndicator } from \"./ConnectionIndicator\";\nimport { UserActions } from \"./UserActions\";\nimport {NavLogo} from './NavLogo';\n\ntype User = {\n  displayName: string;\n  emails: [{ value: string }];\n  id: string;\n  nodeId: string;\n  photos: [{ value: string }];\n  profileUrl: string;\n  provider: string;\n  username: string;\n  _json: any;\n  _raw: any;\n};\n\ntype Props = {\n  usesAuth: boolean;\n  usesConnection: boolean;\n  connected?: boolean;\n  logOut: () => void;\n  toggleSidebar?: () => void;\n  reconnect?: () => void;\n  user: User | null;\n  hideSidebarToggle?:boolean;\n  showLogo?:boolean;\n};\n\nfunction MainNavbar({\n  usesAuth,\n  usesConnection,\n  logOut,\n  toggleSidebar,\n  reconnect,\n  connected,\n  user,\n  hideSidebarToggle,\n  showLogo\n}: Props) {\n  const [userActionsVisible, setUserActionsVisible] = useState(false);\n  function toggleUserActions() {\n    setUserActionsVisible((isVisible) => !isVisible);\n  }\n  return (\n    <div className=\"main-navbar\">\n      <Container fluid className=\"p-0\">\n        <Navbar type=\"light\" className=\"align-items-stretch flex-md-nowrap p-0 px-2\">\n          {\n            showLogo && <NavLogo/>\n          }\n          <NavbarSpacer />\n          <Nav navbar className=\"flex-row\">\n            {usesConnection && (\n              <ConnectionIndicator\n                reconnect={reconnect}\n                connected={connected}\n              />\n            )}\n            {usesAuth && (\n              <UserActions\n                user={user}\n                userActionsVisible={userActionsVisible}\n                toggleUserActions={toggleUserActions}\n                logOut={logOut}\n              />\n            )}\n          </Nav>\n          {\n            !hideSidebarToggle&&\n            <NavbarToggle toggleSidebar={toggleSidebar} />\n          }\n        </Navbar>\n      </Container>\n    </div>\n  );\n}\n\nexport { MainNavbar };\n","import React from \"react\";\nimport { Navbar, NavbarBrand } from \"shards-react\";\n\ntype Props = {\n  toggleSidebar: () => void;\n};\n\nexport default ({ toggleSidebar }: Props) => {\n  return (\n    <div className=\"main-navbar\">\n      <Navbar\n        className=\"align-items-stretch bg-white flex-md-nowrap p-0\"\n        type=\"light\"\n      >\n        <NavbarBrand\n          className=\"w-100 mr-0\"\n          href=\"#\"\n          style={{ lineHeight: \"25px\" }}\n        >\n          <div className=\"d-table m-auto\">\n            <img\n              id=\"main-logo\"\n              className=\"d-inline-block align-top\"\n              style={{ maxWidth: \"50px\" }}\n              src=\"/jina-light.svg\"\n              alt=\"Jina Dashboard\"\n            />\n          </div>\n        </NavbarBrand>\n        <span\n          className=\"toggle-sidebar d-sm-inline d-md-none d-lg-none\"\n          onClick={toggleSidebar}\n        >\n          <i className=\"material-icons\">&#xE5C4;</i>\n        </span>\n      </Navbar>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { NavLink as RouteNavLink } from \"react-router-dom\";\nimport {\n  NavItem,\n  NavLink,\n  DropdownMenu,\n  DropdownItem,\n  Collapse,\n} from \"shards-react\";\n\ntype SubItem = {\n  title: string;\n  to: string;\n};\n\ntype NavItem = {\n  title: string;\n  to: string;\n  open: boolean;\n  htmlBefore: string;\n  htmlAfter: string;\n  matches: string[];\n  items?: SubItem[];\n};\n\ntype Props = {\n  item: NavItem;\n  toggleSidebar: () => void;\n};\n\nexport default ({ item, toggleSidebar }: Props) => {\n  const hasSubItems = item.items && item.items.length;\n  const path = window.location.hash.substring(2, window.location.hash.length);\n  let active = false;\n  item.matches.forEach((match) => {\n    if (path.startsWith(match)) active = true;\n  });\n\n  return (\n    <NavItem style={{ position: \"relative\" }}>\n      <NavLink\n        className={hasSubItems && \"dropdown-toggle\"}\n        tag={hasSubItems ? \"a\" : RouteNavLink}\n        to={hasSubItems ? \"#\" : item.to}\n        active={active}\n        onClick={toggleSidebar}\n      >\n        {item.htmlBefore && (\n          <div\n            className=\"d-inline-block item-icon-wrapper\"\n            dangerouslySetInnerHTML={{ __html: item.htmlBefore }}\n          />\n        )}\n        {item.title && <span>{item.title}</span>}\n        {item.htmlAfter && (\n          <div\n            className=\"d-inline-block item-icon-wrapper\"\n            dangerouslySetInnerHTML={{ __html: item.htmlAfter }}\n          />\n        )}\n      </NavLink>\n      {item.items && (\n        <Collapse tag={DropdownMenu} small open={item.open} style={{ top: 0 }}>\n          {item.items.map((subItem, idx) => (\n            <DropdownItem key={idx} tag={RouteNavLink} to={subItem.to}>\n              {subItem.title}\n            </DropdownItem>\n          ))}\n        </Collapse>\n      )}\n    </NavItem>\n  );\n};\n","import React from \"react\";\nimport { Nav } from \"shards-react\";\n\nimport SidebarNavItem from \"./SidebarNavItem\";\n\ntype Props = {\n  navItems: {\n    title: string;\n    items: [];\n  }[];\n  toggleSidebar: () => void;\n};\n\nexport default ({ navItems: items, toggleSidebar }: Props) => {\n  return (\n    <div className=\"nav-wrapper\">\n      {items.map((nav, idx) => (\n        <div key={idx}>\n          <h6 className=\"main-sidebar__nav-title\">{nav.title}</h6>\n          {typeof nav.items !== \"undefined\" && nav.items.length && (\n            <Nav className=\"nav--no-borders flex-column\">\n              {nav.items.map((item, idx) => (\n                <SidebarNavItem\n                  key={idx}\n                  item={item}\n                  toggleSidebar={toggleSidebar}\n                />\n              ))}\n            </Nav>\n          )}\n        </div>\n      ))}\n    </div>\n  );\n};\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { Col } from \"shards-react\";\n\nimport SidebarMainNavbar from \"./SidebarMainNavbar\";\nimport SidebarNavItems from \"./SidebarNavItems\";\n\ntype Props = {\n  menuVisible: boolean;\n  sidebarNavItems: any;\n  toggleSidebar: () => void;\n};\n\nfunction MainSidebar({ menuVisible, sidebarNavItems, toggleSidebar }: Props) {\n  const classes = classNames(\n    \"main-sidebar\",\n    \"px-0\",\n    \"col-12\",\n    menuVisible && \"open\"\n  );\n\n  return (\n    <Col tag=\"aside\" className={classes} lg={{ size: 2 }} md={{ size: 3 }}>\n      <SidebarMainNavbar toggleSidebar={toggleSidebar} />\n      <SidebarNavItems\n        navItems={sidebarNavItems}\n        toggleSidebar={toggleSidebar}\n      />\n    </Col>\n  );\n}\n\nexport default MainSidebar;\n","import React from \"react\";\nimport { Container, Row, Nav } from \"shards-react\";\n\ntype MenuItems = {\n  title: string;\n  to: string;\n};\n\ntype Props = {\n  menuItems: MenuItems[];\n  copyright: string;\n  loggerEnabled: boolean;\n  enableLogger: () => void;\n  disableLogger: () => void;\n  exportLogs: () => void;\n};\n\nconst MainFooter = ({\n  menuItems,\n  copyright,\n  loggerEnabled,\n  enableLogger,\n  disableLogger,\n  exportLogs,\n}: Props) => (\n  <footer className=\"main-footer d-flex p-2 px-3\">\n    <Container fluid>\n      <Row>\n        <Nav>\n          {menuItems.map((item, idx) => (\n            <a key={idx} href={item.to} className=\"nav-link\">\n              {item.title}\n            </a>\n          ))}\n          {loggerEnabled ? (\n            <>\n              <span\n                className=\"nav-link text-warning cursor-pointer\"\n                onClick={disableLogger}\n              >\n                Exit Debug Mode\n              </span>\n              <span\n                className=\"nav-link text-warning cursor-pointer\"\n                onClick={exportLogs}\n              >\n                Export Debug Data\n              </span>\n            </>\n          ) : (\n            <span\n              className=\"nav-link text-warning cursor-pointer\"\n              onClick={enableLogger}\n            >\n              Debug Mode\n            </span>\n          )}\n        </Nav>\n        <span className=\"copyright ml-auto my-auto mr-2\">{copyright}</span>\n      </Row>\n    </Container>\n  </footer>\n);\n\nMainFooter.defaultProps = {\n  contained: false,\n  copyright: \"Copyright © Jina AI Limited\",\n  menuItems: [\n    {\n      title: \"Home\",\n      to: \"https://jina.ai\",\n    },\n    {\n      title: \"Open Source\",\n      to: \"https://opensource.jina.ai\",\n    },\n    {\n      title: \"Learn\",\n      to: \"https://docs.jina.ai\",\n    },\n    {\n      title: \"Community\",\n      to: \"https://twitter.com/JinaAI_\",\n    },\n    {\n      title: \"Jobs\",\n      to: \"https://www.linkedin.com/company/jinaai/jobs/\",\n    },\n    {\n      title: \"Privacy & Terms\",\n      to: \"https://github.com/jina-ai/legal\",\n    },\n  ],\n};\n\nexport default MainFooter;\n","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\n\ntype Props = {\n  acceptCookies: () => void;\n};\n\nfunction CookiesBanner({ acceptCookies }: Props) {\n  return (\n    <div className=\"cookies-banner\">\n      <p className=\"mb-2\">\n        We and third parties use cookies or similar technologies (\"Cookies\") as\n        described below to collect and process personal data, such as your IP\n        address or browser information. You can learn more about how this site\n        uses Cookies by reading our privacy policy linked below. By clicking \"I\n        consent to cookies\", you accept the placement and use of these Cookies\n        for these purposes. You can change your mind and revisit your\n        preferences at any time by accessing the “Cookie Preferences” link in\n        the footer of this site.\n      </p>\n      <Button className=\"ml-auto d-block\" onClick={acceptCookies}>\n        I consent to cookies\n      </Button>\n    </div>\n  );\n}\n\nexport { CookiesBanner };\n","import React from \"react\";\nimport { Toast } from \"react-bootstrap\";\n\ntype Props = {\n  data: {\n    theme: string;\n    message: string;\n  };\n};\n\nfunction getIcon(theme:string){\n  if(theme===\"success\")\n    return <i className=\"material-icons mr-1\">check_circle_outline</i>\n  else if(theme===\"error\")\n    return <i className=\"material-icons mr-1\">cerror_outline</i>\n  return <i className=\"material-icons mr-1\">warning</i>\n}\n\nfunction InfoToast({ data }: Props) {\n  if (!data) return null;\n  const icon = getIcon(data.theme);\n  return (\n    <div className=\"notifications-container\">\n      <Toast className={`toast-${data.theme} text-white`}>\n        <Toast.Header className=\"text-white\" closeButton={false}>\n          <strong className=\"mr-auto\">\n            {icon}<span className=\"text-uppercase\">{data.theme}</span>\n          </strong>\n        </Toast.Header>\n        <Toast.Body className=\"text-white\">{data.message}</Toast.Body>\n      </Toast>\n    </div>\n  );\n}\n\nexport { InfoToast };\n","import React from \"react\";\nimport { Toast, Button, Row, Col } from \"react-bootstrap\";\n\ntype Props = {\n  reconnect: () => void;\n};\n\nfunction ConnectionToast({ reconnect }: Props) {\n  return (\n    <div className=\"notifications-container\" >\n      <Toast className=\"bg-warning\">\n        <Toast.Header className=\"bg-warning text-white\" closeButton={false}>\n          <strong className=\"mr-auto\">\n          <i className=\"material-icons mr-1\">warning</i>Could not connect to Jina instance\n          </strong>\n        </Toast.Header>\n        <Toast.Body className=\"text-white\">\n          <Row>\n            <Col xs=\"6\" className=\"pr-2\">\n              <a\n                href=\"https://github.com/jina-ai/dashboard#getting-started\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"mr-2\"\n              >\n                <Button variant=\"light\" className=\"w-100\"><i className=\"material-icons mr-1\">text_snippet</i>View Docs</Button>\n              </a>\n            </Col>\n            <Col xs=\"6\" className=\"pl-2\">\n              <Button variant=\"primary\" className=\"w-100\" onClick={reconnect}>\n                <i className=\"material-icons mr-1\">refresh</i>Refresh\n              </Button>\n            </Col>\n          </Row>\n        </Toast.Body>\n      </Toast>\n    </div>\n  );\n}\n\nexport { ConnectionToast };\n","import React from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport ReactModal, { Styles } from \"react-modal\";\nconst style: Styles = {\n  overlay: {\n    backgroundColor: \"rgba(38, 50, 56, 0.5)\",\n  },\n  content: {\n    border: \"none\",\n    bottom: \"auto\",\n    maxHeight: \"80%\", // set height\n    left: \"50%\",\n    padding: \"2rem\",\n    position: \"fixed\",\n    right: \"auto\",\n    top: \"50%\", // start from center\n    transform: \"translate(-50%,-50%)\", // adjust top \"up\" based on height\n    width: \"90%\",\n    maxWidth: \"800px\",\n    overflow: \"hidden\",\n  },\n};\n\ntype Props = {\n  open: boolean;\n  closeModal: () => void;\n  importYAML: (yamlString: string) => void;\n};\n\nexport default ({ open, closeModal, importYAML }: Props) => {\n  let inputRef: any;\n  return (\n    <ReactModal\n      ariaHideApp={false}\n      isOpen={open}\n      contentLabel=\"Action Modal\"\n      className=\"modal-content tiny-modal px-4 pt-3 pb-4\"\n      shouldCloseOnOverlayClick={true}\n      style={style}\n      onRequestClose={closeModal}\n      closeTimeoutMS={100}\n    >\n      <div className=\"modal-header p-0\">\n        <h4>\n          <b>Import YAML</b>\n        </h4>\n        <h4>\n          <span className=\"float-right close-icon\">\n            <i className=\"material-icons\" onClick={closeModal}>\n              close\n            </i>\n          </span>\n        </h4>\n      </div>\n      <div className=\"modal-body px-0 pb-0\">\n        <Form.Group>\n          <Form.Label>Custom YAML:</Form.Label>\n          <Form.Control\n            placeholder=\"Paste Here\"\n            ref={(ref: any) => (inputRef = ref)}\n            as=\"textarea\"\n            rows={10}\n          />\n        </Form.Group>\n      </div>\n      <Button\n        className=\"btn-primary\"\n        onClick={() => importYAML(inputRef.value)}\n      >\n        Continue\n      </Button>\n    </ReactModal>\n  );\n};\n","import React from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport ReactModal, { Styles } from \"react-modal\";\n\nconst style: Styles = {\n  overlay: {\n    backgroundColor: \"rgba(38, 50, 56, 0.5)\",\n  },\n  content: {\n    border: \"none\",\n    bottom: \"auto\",\n    maxHeight: \"80%\", // set height\n    left: \"50%\",\n    padding: \"2rem\",\n    position: \"fixed\",\n    right: \"auto\",\n    top: \"50%\", // start from center\n    transform: \"translate(-50%,-50%)\", // adjust top \"up\" based on height\n    width: \"90%\",\n    maxWidth: \"800px\",\n    overflow: \"hidden\",\n  },\n};\n\ntype Props = {\n  open: boolean;\n  closeModal: () => void;\n  submitReview: (content: any) => void;\n};\n\nexport default ({ open, closeModal, submitReview }: Props) => {\n  let inputRef: any;\n  return (\n    <ReactModal\n      ariaHideApp={false}\n      isOpen={open}\n      contentLabel=\"Action Modal\"\n      className=\"modal-content tiny-modal px-4 pt-3 pb-4\"\n      shouldCloseOnOverlayClick={true}\n      style={style}\n      onRequestClose={closeModal}\n      closeTimeoutMS={100}\n    >\n      <div className=\"modal-header p-0\">\n        <h4>\n          <b>Write a Review</b>\n        </h4>\n        <h4>\n          <span className=\"float-right close-icon\">\n            <i className=\"material-icons\" onClick={closeModal}>\n              close\n            </i>\n          </span>\n        </h4>\n      </div>\n      <div className=\"modal-body px-0 pb-0\">\n        <Form.Group>\n          <Form.Control\n            placeholder=\"Tell the world about your experience\"\n            ref={(ref: any) => (inputRef = ref)}\n            as=\"textarea\"\n            rows={10}\n          />\n        </Form.Group>\n      </div>\n      <Button\n        className=\"btn-primary\"\n        onClick={() => submitReview(inputRef.value)}\n      >\n        Submit\n      </Button>\n    </ReactModal>\n  );\n};\n","import React from \"react\";\nimport ReactModal, { Styles } from \"react-modal\";\nimport { Row, Col } from \"react-bootstrap\";\n\nconst style: Styles = {\n  overlay: {\n    backgroundColor: \"rgba(38, 50, 56, 0.5)\",\n  },\n  content: {\n    border: \"none\",\n    bottom: \"auto\",\n    maxHeight: \"80%\", // set height\n    left: \"50%\",\n    padding: \"2rem\",\n    position: \"fixed\",\n    right: \"auto\",\n    top: \"50%\", // start from center\n    transform: \"translate(-50%,-50%)\", // adjust top \"up\" based on height\n    width: \"90%\",\n    maxWidth: \"800px\",\n    overflow: \"hidden\",\n  },\n};\n\nconst hiddenKeys = [\"msg\", \"unixTime\"];\n\ntype Props = {\n  open: boolean;\n  closeModal: () => void;\n  modalParams: any;\n};\n\nexport default ({ open, closeModal, modalParams }: Props) => {\n  const log = modalParams.log || {};\n  return (\n    <ReactModal\n      ariaHideApp={false}\n      isOpen={open}\n      contentLabel=\"Action Modal\"\n      className=\"modal-content tiny-modal px-4 pt-3 pb-4\"\n      shouldCloseOnOverlayClick={true}\n      style={style}\n      onRequestClose={closeModal}\n      closeTimeoutMS={100}\n    >\n      <div className=\"modal-header p-0\">\n        <h4>\n          <b>Log Details</b>\n        </h4>\n        <h4>\n          <span className=\"float-right close-icon\">\n            <i className=\"material-icons\" onClick={closeModal}>\n              close\n            </i>\n          </span>\n        </h4>\n      </div>\n      <div className=\"modal-body px-0 pb-0 pt-1\">\n        <Row className=\"px-3\">\n          <Col xs=\"3\" className=\"border-bottom pb-1 px-0\">\n            <span className=\"text-bold\">msg</span>\n          </Col>\n          <Col xs=\"9\" className=\"border-bottom pb-1 px-0\">\n            {log.msg}\n          </Col>\n        </Row>\n        {Object.entries(log)\n          .filter(([key, value]) => !hiddenKeys.includes(key))\n          .map(([key, value]) =>\n            key === \"msg\" ? (\n              \"\"\n            ) : (\n              <Row className=\"px-3\" key={key}>\n                <Col xs=\"3\" className=\"border-bottom pb-1 px-0\">\n                  <span className=\"text-bold\">{key}</span>\n                </Col>\n                <Col xs=\"9\" className=\"border-bottom pb-1 px-0\">\n                  {JSON.stringify(value)}\n                </Col>\n              </Row>\n            )\n          )}\n      </div>\n    </ReactModal>\n  );\n};\n","import React from \"react\";\nimport { Container, Row, Col } from \"shards-react\";\n\nimport { MainNavbar } from \"../components/Layout/MainNavbar/MainNavbar\";\nimport MainSidebar from \"../components/Layout/MainSidebar/MainSidebar\";\nimport MainFooter from \"../components/Layout/MainFooter\";\nimport { CookiesBanner } from \"../components/Common/CookiesBanner\";\nimport { InfoToast } from \"../components/Common/InfoToast\";\nimport { ConnectionToast } from \"../components/Common/ConnectionToast\";\n\nimport PasteYAML from \"../modals/PasteYAML\";\nimport WriteReview from \"../modals/WriteReview\";\nimport LogDetails from \"../modals/LogDetails\";\n\nimport logger from \"../logger\";\n\nimport { Store, Dispatcher, Constants } from \"../flux\";\n\nclass IconSidebarLayout extends React.Component<any, any> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      loggerEnabled: logger.isEnabled(),\n      modal: Store.getModal(),\n      modalParams: Store.getModalParams(),\n      loading: Store.isLoading(),\n      user: Store.getUser(),\n      banner: Store.getBanner(),\n      connected: Store.getConnectionStatus(),\n      menuVisible: Store.getMenuState(),\n      sidebarNavItems: Store.getSidebarItems(),\n      acceptedCookies: localStorage.getItem(\"accepted-cookies\"),\n    };\n    Store.on(\"update-ui\", this.getData);\n    Store.on(\"update-user\", this.getUser);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-ui\", this.getData);\n    Store.removeListener(\"update-user\", this.getUser);\n  };\n\n  getData = () => {\n    const modal = Store.getModal();\n    const modalParams = Store.getModalParams();\n    const loading = Store.isLoading();\n    const banner = Store.getBanner();\n    const connected = Store.getConnectionStatus();\n    const loggerEnabled = logger.isEnabled();\n    const menuVisible = Store.getMenuState();\n    const sidebarNavItems = Store.getSidebarItems();\n    this.setState({\n      modal,\n      loading,\n      banner,\n      connected,\n      modalParams,\n      loggerEnabled,\n      menuVisible,\n      sidebarNavItems,\n    });\n  };\n\n  getUser = () => {\n    const user = Store.getUser();\n    this.setState({ user });\n  };\n\n  acceptCookies = () => {\n    localStorage.setItem(\"accepted-cookies\", String(true));\n    this.setState({ acceptedCookies: true });\n  };\n\n  closeModal = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.CLOSE_MODAL,\n    });\n  };\n\n  importYAML = (yamlString: string) => {\n    Dispatcher.dispatch({\n      actionType: Constants.IMPORT_CUSTOM_YAML,\n      payload: yamlString,\n    });\n  };\n\n  submitReview = (content: any) => {\n    const { imageId } = this.state.modalParams;\n    Dispatcher.dispatch({\n      actionType: Constants.POST_REVIEW,\n      payload: { content, imageId },\n    });\n  };\n\n  reconnect = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.RECONNECT,\n    });\n  };\n\n  logOut = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.LOG_OUT,\n    });\n  };\n\n  toggleSidebar = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.TOGGLE_SIDEBAR,\n    });\n  };\n\n  enableLogger = () => {\n    logger.enable();\n    const storeCopy = Store.getStoreCopy();\n    logger.log(\"Store Snapshot\", storeCopy);\n    Dispatcher.dispatch({\n      actionType: Constants.SHOW_BANNER,\n      payload: [\n        'Debug Mode Enabled. Click \"Export Debug Data\" to download Debug JSON.',\n        \"warning\",\n      ],\n    });\n  };\n\n  disableLogger = () => {\n    logger.disable();\n    Dispatcher.dispatch({\n      actionType: Constants.SHOW_BANNER,\n      payload: [\"Debug Mode Disabled.\", \"warning\"],\n    });\n  };\n\n  exportLogs = () => {\n    const storeCopy = Store.getStoreCopy();\n    logger.log(\"Store Snapshot\", storeCopy);\n    logger.exportLogs();\n  };\n\n  render = () => {\n    const {\n      modal,\n      acceptedCookies,\n      banner,\n      connected,\n      user,\n      loading,\n      modalParams,\n      loggerEnabled,\n      menuVisible,\n      sidebarNavItems,\n    } = this.state;\n    const { children, usesAuth, usesConnection } = this.props;\n    return (\n      <Container fluid className=\"icon-sidebar-nav\">\n        <Row>\n          <MainSidebar\n            sidebarNavItems={sidebarNavItems}\n            menuVisible={menuVisible}\n            toggleSidebar={this.toggleSidebar}\n          />\n          <Col className=\"main-content col\" tag=\"main\">\n            <MainNavbar\n              usesAuth={usesAuth}\n              usesConnection={usesConnection}\n              logOut={this.logOut}\n              toggleSidebar={this.toggleSidebar}\n              reconnect={this.reconnect}\n              connected={connected}\n              user={user}\n            />\n            <InfoToast data={banner} />\n            {usesConnection && !loading && !connected && (\n              <ConnectionToast reconnect={this.reconnect}/>\n            )}\n            {children}\n            {!acceptedCookies && (\n              <CookiesBanner acceptCookies={this.acceptCookies} />\n            )}\n            <MainFooter\n              loggerEnabled={loggerEnabled}\n              enableLogger={this.enableLogger}\n              disableLogger={this.disableLogger}\n              exportLogs={this.exportLogs}\n            />\n          </Col>\n        </Row>\n        <LogDetails\n          open={modal === \"logDetails\"}\n          closeModal={this.closeModal}\n          modalParams={modalParams}\n        />\n        <PasteYAML\n          open={modal === \"import\"}\n          closeModal={this.closeModal}\n          importYAML={this.importYAML}\n        />\n        <WriteReview\n          open={modal === \"review\"}\n          closeModal={this.closeModal}\n          submitReview={this.submitReview}\n        />\n      </Container>\n    );\n  };\n}\n\nexport default IconSidebarLayout;\n","import React from \"react\";\nimport { Container, Row, Col } from \"shards-react\";\n\nimport { MainNavbar } from \"../components/Layout/MainNavbar/MainNavbar\";\nimport MainFooter from \"../components/Layout/MainFooter\";\nimport { CookiesBanner } from \"../components/Common/CookiesBanner\";\nimport { InfoToast } from \"../components/Common/InfoToast\";\n\nimport WriteReview from \"../modals/WriteReview\";\n\nimport logger from \"../logger\";\n\nimport { Store, Dispatcher, Constants } from \"../flux\";\n\nclass HubLayout extends React.Component<any, any> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      loggerEnabled: logger.isEnabled(),\n      modal: Store.getModal(),\n      modalParams: Store.getModalParams(),\n      loading: Store.isLoading(),\n      user: Store.getUser(),\n      banner: Store.getBanner(),\n      acceptedCookies: localStorage.getItem(\"accepted-cookies\"),\n    };\n    Store.on(\"update-ui\", this.getData);\n    Store.on(\"update-user\", this.getUser);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-ui\", this.getData);\n    Store.removeListener(\"update-user\", this.getUser);\n  };\n\n  getData = () => {\n    const modal = Store.getModal();\n    const modalParams = Store.getModalParams();\n    const loading = Store.isLoading();\n    const banner = Store.getBanner();\n    const loggerEnabled = logger.isEnabled();\n    this.setState({\n      modal,\n      loading,\n      banner,\n      modalParams,\n      loggerEnabled,\n    });\n  };\n\n  getUser = () => {\n    const user = Store.getUser();\n    this.setState({ user });\n  };\n\n  acceptCookies = () => {\n    localStorage.setItem(\"accepted-cookies\", String(true));\n    this.setState({ acceptedCookies: true });\n  };\n\n  closeModal = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.CLOSE_MODAL,\n    });\n  };\n\n  submitReview = (content: any) => {\n    const { imageId } = this.state.modalParams;\n    Dispatcher.dispatch({\n      actionType: Constants.POST_REVIEW,\n      payload: { content, imageId },\n    });\n\t};\n\t\n  logOut = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.LOG_OUT,\n    });\n  };\n\n  enableLogger = () => {\n    logger.enable();\n    const storeCopy = Store.getStoreCopy();\n    logger.log(\"Store Snapshot\", storeCopy);\n    Dispatcher.dispatch({\n      actionType: Constants.SHOW_BANNER,\n      payload: [\n        'Debug Mode Enabled. Click \"Export Debug Data\" to download Debug JSON.',\n        \"warning\",\n      ],\n    });\n  };\n\n  disableLogger = () => {\n    logger.disable();\n    Dispatcher.dispatch({\n      actionType: Constants.SHOW_BANNER,\n      payload: [\"Debug Mode Disabled.\", \"warning\"],\n    });\n  };\n\n  exportLogs = () => {\n    const storeCopy = Store.getStoreCopy();\n    logger.log(\"Store Snapshot\", storeCopy);\n    logger.exportLogs();\n  };\n\n  render = () => {\n    const {\n      modal,\n      acceptedCookies,\n      banner,\n      user,\n      loggerEnabled,\n    } = this.state;\n    const { children, usesAuth, usesConnection } = this.props;\n    return (\n      <Container>\n        <Row>\n          <Col className=\"main-content col\" tag=\"main\">\n            <MainNavbar\n              usesAuth={usesAuth}\n              usesConnection={usesConnection}\n\t\t\t\t\t\t\tlogOut={this.logOut}\n              hideSidebarToggle={true}\n              showLogo\n              user={user}\n            />\n            <InfoToast data={banner} />\n            {children}\n            {!acceptedCookies && (\n              <CookiesBanner acceptCookies={this.acceptCookies} />\n            )}\n            <MainFooter\n              loggerEnabled={loggerEnabled}\n              enableLogger={this.enableLogger}\n              disableLogger={this.disableLogger}\n              exportLogs={this.exportLogs}\n            />\n          </Col>\n        </Row>\n        <WriteReview\n          open={modal === \"review\"}\n          closeModal={this.closeModal}\n          submitReview={this.submitReview}\n        />\n      </Container>\n    );\n  };\n}\n\nexport default HubLayout;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { Col } from \"react-bootstrap\";\n\ntype Props = {\n  title: string;\n  subtitle?: string;\n  className: string;\n};\n\nfunction PageTitle({ title, subtitle, className }: Props) {\n  const classes = classNames(\n    className,\n    \"text-center\",\n    \"text-md-left\",\n    \"mb-sm-0\"\n  );\n\n  return (\n    <Col xs=\"12\" sm=\"3\" className={classes}>\n      <h3 className=\"page-title\">{title}</h3>\n      <p className=\"page-subtitle mt-2 mb-0\">{subtitle}</p>\n    </Col>\n  );\n}\n\nexport { PageTitle };\n","export const Constants = {\n  TOGGLE_SIDEBAR: \"TOGGLE_SIDEBAR\",\n  SET_CURRENT_TAB: \"SET_CURRENT_TAB\",\n  SELECT_NODE: \"SELECT_NODE\",\n  IMPORT_CUSTOM_YAML: \"IMPORT_CUSTOM_YAML\",\n  SHOW_MODAL: \"SHOW_MODAL\",\n  CLOSE_MODAL: \"CLOSE_MODAL\",\n  SHOW_LOG_AT_INDEX: \"SHOW_LOG_AT_INDEX\",\n  SAVE_SETTINGS: \"SAVE_SETTINGS\",\n  RECONNECT: \"RECONNECT\",\n  POST_REVIEW: \"POST_REVIEW\",\n  POST_RATING: \"POST_RATING\",\n  LOG_OUT: \"LOG_OUT\",\n  SEARCH_HUB: \"SEARCH_HUB\",\n  SHOW_BANNER: \"SHOW_BANNER\",\n  LOAD_FLOW: \"LOAD_FLOW\",\n  SHOW_POD_IN_FLOW: \"SHOW_POD_IN_FLOW\",\n  CREATE_NEW_FLOW: \"CREATE_NEW_FLOW\",\n  UPDATE_FLOW: \"UPDATE_FLOW\",\n  DUPLICATE_FLOW: \"DUPLICATE_FLOW\",\n  DELETE_FLOW: \"DELETE_FLOW\",\n};\n","import { fromUnixTime } from \"date-fns\";\nimport { nanoid } from \"nanoid\";\nconst levels = [\n  \"INFO\",\n  \"SUCCESS\",\n  \"WARNING\",\n  \"ERROR\",\n  \"CRITICAL\",\n  \"DEBUG\",\n] as const;\ntype Level = typeof levels[number];\n\nexport type RawLog = {\n  created: number;\n  filename: string;\n  funcName: string;\n  levelname: Level;\n  lineno: number;\n  module: string;\n  msg: string;\n  name: string;\n  pathname: string;\n  process: number;\n  processName: string;\n  thread: number;\n  threadName: string;\n};\n\nexport type ProcessedLog = RawLog & {\n  createdDate: Date;\n  id: string;\n  idx: number;\n  unixTime: number;\n  timestamp: Date;\n  formattedTimestamp: string;\n};\n\nfunction transformLog(log: RawLog, idx: number): ProcessedLog {\n  const { created } = log;\n  const createdDate = fromUnixTime(created);\n  const id = nanoid();\n  const unixTime = Math.floor(created);\n  const timestamp = new Date(unixTime * 1000);\n  const formattedTimestamp = timestamp.toLocaleString();\n  return {\n    ...log,\n    createdDate,\n    id,\n    idx,\n    unixTime,\n    timestamp,\n    formattedTimestamp,\n  };\n}\n\nexport { transformLog };\n","import React from \"react\";\nimport Select, { Props as SelectProps } from \"react-select\";\n\nconst CHART_LEVELS = [\n  \"INFO\",\n  \"SUCCESS\",\n  \"WARNING\",\n  \"ERROR\",\n  \"CRITICAL\",\n  \"DEBUG\",\n] as const;\n\ntype LevelType = typeof CHART_LEVELS[number];\ntype Option = { value: string; label: any };\n\nconst customStyles = {\n  dropdownIndicator: (styles: any) => ({\n    ...styles,\n    color: \"black\",\n  }),\n  indicatorSeparator: (styles: any) => ({\n    ...styles,\n    opacity: \"0\",\n  }),\n  container: (provided: any, { selectProps: { width } }: any) => ({\n    ...provided,\n    width: width,\n  }),\n  option: (styles: any) => ({\n    ...styles,\n    cursor: \"pointer\",\n  }),\n  control: (styles: any) => ({\n    ...styles,\n    cursor: \"pointer\",\n    border: \"none\",\n    background: \"#F6F8FA\",\n  }),\n};\n\nexport type Props = {\n  onFilterChange: (val: any[]) => void;\n  options: { value: string; label: string }[];\n  isMulti?: boolean;\n  isSearchable?: boolean;\n  clearAfter?: boolean;\n} & SelectProps;\n\nfunction MultiFilterSelect({\n  isMulti,\n  isSearchable,\n  clearAfter,\n  onFilterChange,\n  options,\n  ...rest\n}: Props) {\n  let value = clearAfter ? null : undefined;\n  return (\n    <Select\n      onChange={(val) => {\n        onFilterChange(Array.isArray(val) ? val : !val ? [] : [val]);\n      }}\n      value={value}\n      isMulti={isMulti}\n      options={options}\n      styles={customStyles}\n      readOnly={true}\n      isSearchable={isSearchable}\n      {...rest}\n    />\n  );\n}\n\nexport { MultiFilterSelect };\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\n// Layout Types\nimport { HubLayout } from \"../layouts\";\n\n// Route Views\nimport HubView from \"../views/HubView\";\nimport PackageView from \"../views/PackageView\";\nimport LogIn from \"../views/LogIn\";\nimport NotFound from \"../views/NotFound\";\n\nexport const hubRoutes = [\n  {\n    path: \"/\",\n    exact: true,\n    layout: HubLayout,\n    component: () => <Redirect to=\"/home\" />,\n  },\n  {\n    path: \"/help\",\n    layout: HubLayout,\n    component: NotFound,\n    props: {\n      usesConnection: false,\n      usesAuth: false,\n    },\n  },\n  {\n    path: \"/home\",\n    layout: HubLayout,\n    component: HubView,\n    props: {\n      usesConnection: false,\n      usesAuth: true,\n    },\n  },\n  {\n    path: \"/package\",\n    layout: HubLayout,\n    component: PackageView,\n    props: {\n      usesConnection: false,\n      usesAuth: true,\n    },\n  },\n  {\n    path: \"/login\",\n    layout: HubLayout,\n    component: LogIn,\n    props: {\n      usesConnection: false,\n      usesAuth: true,\n    },\n  },\n];\n","import React from \"react\";\nimport { ButtonGroup, Button } from \"react-bootstrap\";\n\ntype Props = {\n  importChart: () => void;\n  copyChart: () => void;\n  exportImage: (format: string) => void;\n};\n\nexport default function ChartNode({\n  importChart,\n  copyChart,\n  exportImage,\n}: Props) {\n  return (\n    <div className=\"command-bar-container\">\n      <div className=\"command-bar\">\n        <ButtonGroup>\n          <Button variant=\"secondary\" disabled>\n            <i className=\"material-icons\">play_arrow</i>\n          </Button>\n          <Button variant=\"secondary\" disabled>\n            <i className=\"material-icons\">stop</i>\n          </Button>\n          <Button variant=\"secondary\" disabled>\n            <i className=\"material-icons\">schedule</i>\n          </Button>\n          <Button variant=\"secondary\" onClick={importChart}>\n            <i className=\"material-icons\">save_alt</i>\n          </Button>\n          <Button variant=\"secondary\" onClick={copyChart}>\n            <i className=\"material-icons\">assignment</i>\n          </Button>\n          <Button variant=\"secondary\" onClick={() => exportImage(\"png\")}>\n            <i className=\"material-icons\">camera_alt</i>\n          </Button>\n        </ButtonGroup>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Badge } from \"react-bootstrap\";\n\ntype Props = {\n  node: {\n    properties: any;\n    label: string | undefined;\n  };\n};\n\nexport default function ChartNode({ node }: Props) {\n  const { properties, label } = node;\n  const list: any = [];\n  Object.keys(properties).forEach((prop, idx) => {\n    if (properties[prop] && prop !== \"name\")\n      list.push(\n        <div key={idx}>\n          <span className=\"text-bold mr-1\">{prop}:</span>\n          {properties[prop]}\n        </div>\n      );\n  });\n  const isSpecial = Object.keys(properties).length > 0;\n  const isGateway = label === \"gateway\";\n  let labelText = typeof label === \"undefined\" ? properties.name : label || \"\";\n  return (\n    <div\n      className={`chart-node ${isGateway ? \"gateway\" : \"\"}`}\n      id={`chart-node-${label}`}\n    >\n      <div className=\"node-header\">\n        <div className={`p-1 ${isSpecial ? \"special\" : \"\"}`}>\n          <p className=\"m-1\">\n            <span className=\"text-bold\">\n              {labelText || <span className=\"text-warning\">Empty Pod</span>}\n            </span>\n            <Badge variant=\"primary\" className=\"ml-2 mt-1 py-1 px-2\">\n              {properties.replicas}\n            </Badge>\n          </p>\n        </div>\n      </div>\n      {list.length > 0 && (\n        <div className=\"node-info border-top px-2\">{list}</div>\n      )}\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport { REACT_FLOW_CHART } from \"@bastinjafari/react-flow-chart-with-tooltips-and-multi-select\";\nimport ChartNode from \"./ChartNode\";\n\ntype Props = {\n  label?: string;\n  ports: {\n    [key: string]: any;\n  };\n  properties: {\n    [key: string]: any;\n  };\n};\n\nexport default function SidebarItem({ label, ports, properties }: Props) {\n  const ref: React.RefObject<HTMLInputElement> = React.createRef();\n  return (\n    <div\n      ref={ref}\n      className=\"mb-3 draggable-container\"\n      draggable={true}\n      onDragStart={(event) => {\n        event.dataTransfer.setData(\n          REACT_FLOW_CHART,\n          JSON.stringify({ label, ports, properties })\n        );\n      }}\n    >\n      <ChartNode node={{ properties, label }} />\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport SidebarItem from \"./SidebarItem\";\nimport defaultPods from \"../../data/defaultPods.json\";\nimport _ from \"lodash\";\nimport {\n  IChart,\n  ILink,\n  INode,\n} from \"@bastinjafari/react-flow-chart-with-tooltips-and-multi-select\";\nimport { Button, FormControl, Card } from \"react-bootstrap\";\n\ninterface Node extends INode {\n  label?: string;\n}\n\ntype ParsedNode = {\n  label: string;\n  id: string;\n  properties: { [key: string]: string | number };\n  newProperties: { [key: string]: string | number };\n};\n\ntype NodesObject = {\n  [key: string]: Node;\n};\n\nconst parseNode = (node: Node): ParsedNode => {\n  const properties = { ...node.properties };\n  const newProperties = {};\n  const label = node.label || \"\";\n\n  return { label, id: node.id, properties, newProperties };\n};\n\nfunction ReadOnly({ duplicateFlow }: { duplicateFlow: () => void }) {\n  return (\n    <div className=\"readonly-overlay py-4 px-4 text-center\">\n      <h4 className=\"my-4\">\n        <b>\n          This flow is <span className=\"text-muted\">readonly</span>\n        </b>\n      </h4>\n      <p className=\"my-4\">To edit this flow, please duplicate it.</p>\n      <Button onClick={duplicateFlow}>Duplicate Flow</Button>\n    </div>\n  );\n}\n\ntype EditLinkProps = {\n  link: ILink;\n  nodes: NodesObject;\n  updateLink: (\n    linkId: string,\n    nodeFrom: string,\n    nodeTo: string | undefined\n  ) => void;\n  deleteSelection: () => void;\n};\n\nfunction EditLink({ link, nodes, updateLink, deleteSelection }: EditLinkProps) {\n  let nodeFromId = link.from.nodeId;\n  let nodeToId = link.to.nodeId;\n\n  let choices = Object.keys(nodes).map((id) => {\n    return { label: nodes[id].label || nodes[id].properties.name, id };\n  });\n\n  return (\n    <div className=\"h-100 d-flex flex-column\">\n      <h5 className=\"px-3 py-2 mb-0 border-bottom\">\n        <b>Edit Connection</b>\n      </h5>\n      <div className=\"flex-fill px-2\">\n        <div className=\"p-2 mb-1\">\n          <p className=\"mb-1\">\n            <b>From</b>\n          </p>\n          <FormControl\n            className=\"mb-2\"\n            as=\"select\"\n            onChange={(e) => updateLink(link.id, e.target.value, nodeToId)}\n            value={nodeFromId}\n          >\n            {choices.map((choice) => (\n              <option key={choice.id} value={choice.id}>\n                {choice.label}\n              </option>\n            ))}\n          </FormControl>\n          <p className=\"mb-1\">\n            <b>To</b>\n          </p>\n          <FormControl\n            className=\"mb-2\"\n            as=\"select\"\n            onChange={(e) => updateLink(link.id, nodeFromId, e.target.value)}\n            value={nodeToId}\n          >\n            {choices.map((choice) => (\n              <option key={choice.id} value={choice.id}>\n                {choice.label}\n              </option>\n            ))}\n          </FormControl>\n        </div>\n      </div>\n      <div className=\"p-2\">\n        <Button variant=\"danger\" className=\"w-100\" onClick={deleteSelection}>\n          Delete Connection\n        </Button>\n      </div>\n    </div>\n  );\n}\n\ntype PropertyItem = {\n  name: string;\n  type: string;\n};\n\ntype EditNodeProps = {\n  node: ParsedNode;\n  availableProperties: PropertyItem[];\n  updateLabel: (label: string) => void;\n  updateNewValue: (key: string, value: string | number) => void;\n  updateExistingValue: (key: string, value: string | number) => void;\n  deleteSelection: () => void;\n};\n\nfunction EditNode({\n  node,\n  updateLabel,\n  updateNewValue,\n  updateExistingValue,\n  deleteSelection,\n  availableProperties,\n}: EditNodeProps) {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [filteredProperties, setFilteredProperties] = useState(\n    availableProperties\n  );\n\n  const updateSearchQuery = (searchString: string) => {\n    setSearchQuery(searchString);\n  };\n\n  useEffect(() => {\n    const results = availableProperties.filter((property: any) =>\n      property.name.toLowerCase().includes(searchQuery.toLowerCase())\n    );\n    setFilteredProperties(results);\n  }, [searchQuery, availableProperties]);\n\n  useEffect(() => {\n    setSearchQuery(\"\");\n    setFilteredProperties(availableProperties);\n  }, [node.id, availableProperties]);\n\n  let label = node.label || node.properties.name;\n\n  return (\n    <div className=\"h-100 d-flex flex-column\">\n      <div className=\"p-2 mb-1\">\n        <p className=\"mb-1\">\n          <b>Pod Name</b>\n        </p>\n        <FormControl\n          spellCheck={false}\n          value={label}\n          onChange={(e) => updateLabel(e.target.value)}\n          className=\"pod-name-input\"\n        />\n      </div>\n      <p className=\"mb-0 px-2\">\n        <b>Properties</b>\n      </p>\n      <div className=\"m-2\">\n        <FormControl\n          spellCheck={false}\n          placeholder=\"search properties...\"\n          value={searchQuery}\n          onChange={(e) => updateSearchQuery(e.target.value)}\n        />\n      </div>\n      <div className=\"property-table flex-fill mx-2\">\n        {filteredProperties.map((property) => {\n          const { name, type } = property;\n          const value = node.properties[name];\n\n          if (typeof value == \"undefined\")\n            return (\n              <div key={name} className=\"property-item mb-2\">\n                <p className=\"property-label mb-1\">{name}</p>\n                <FormControl\n                  spellCheck={false}\n                  placeholder={type}\n                  type={type === \"int\" ? \"number\" : \"text\"}\n                  value={node.newProperties[name] || \"\"}\n                  onChange={(e) => updateNewValue(name, e.target.value)}\n                  className=\"property-value-input\"\n                ></FormControl>\n              </div>\n            );\n          return (\n            <div key={name} className=\"property-item mb-2\">\n              <p className=\"property-label mb-1\">{name}</p>\n              <FormControl\n                spellCheck={false}\n                placeholder={type}\n                type={type === \"int\" ? \"number\" : \"text\"}\n                value={value || \"\"}\n                onChange={(e) => updateExistingValue(name, e.target.value)}\n                className=\"property-value-input\"\n              />\n            </div>\n          );\n        })}\n      </div>\n      <div className=\"p-2\">\n        <Button variant=\"danger\" className=\"w-100\" onClick={deleteSelection}>\n          Delete Pod\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nfunction PodMenu() {\n  return (\n    <div className=\"d-flex flex-column h-100\">\n      <h5 className=\"px-3 py-2 mb-0 border-bottom\">\n        <b>Add Pods</b>\n      </h5>\n      <div className=\"p-3 scrollable flex-fill\">\n        <SidebarItem\n          ports={{\n            inPort: {\n              id: \"inPort\",\n              type: \"input\",\n            },\n            outPort: {\n              id: \"outPort\",\n              type: \"output\",\n            },\n          }}\n          properties={{}}\n        />\n        {defaultPods.map((pod, idx) => (\n          <SidebarItem\n            key={idx}\n            ports={{\n              inPort: {\n                id: \"inPort\",\n                type: \"input\",\n              },\n              outPort: {\n                id: \"outPort\",\n                type: \"output\",\n              },\n            }}\n            properties={pod}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\ntype FlowChartSidebarProps = {\n  readonly: boolean;\n  chart: IChart;\n  duplicateFlow: () => void;\n  updateNode: (updates: any) => void;\n  deleteSelection: () => void;\n  updateLink: (\n    linkId: string,\n    nodeFromId: string,\n    nodeToId: string | undefined\n  ) => void;\n  availableProperties: PropertyItem[];\n};\n\nfunction FlowChartSidebar({\n  readonly,\n  chart,\n  duplicateFlow,\n  deleteSelection,\n  updateNode,\n  updateLink,\n  availableProperties,\n}: FlowChartSidebarProps) {\n  const {\n    selected: { id: selectedId, type: selectedType },\n    nodes,\n    links,\n  } = chart;\n\n  const [node, setNode] = useState<ParsedNode | undefined>();\n\n  useEffect(() => {\n    let node;\n    if (!selectedId) return;\n    const selectedNode = nodes[selectedId];\n    if (selectedNode) node = parseNode(selectedNode);\n    setNode(node);\n  }, [nodes, selectedId]);\n\n  function updateLabel(label: string) {\n    updateNode({\n      ...node,\n      label,\n    });\n  }\n\n  function updateNewValue(key: string, value: any) {\n    if (!node) return;\n    let newNode = _.cloneDeep(node);\n    newNode.newProperties[key] = value;\n    updateNode({\n      ...newNode,\n    });\n  }\n\n  function updateExistingValue(key: string, value: any) {\n    if (!node) return;\n    let newNode = _.cloneDeep(node);\n    newNode.properties[key] = value;\n    updateNode({\n      ...newNode,\n    });\n  }\n\n  return (\n    <Card className=\"flowchart-sidebar mb-4\">\n      {selectedId ? (\n        selectedType === \"link\" ? (\n          <EditLink\n            nodes={nodes}\n            link={links[selectedId]}\n            updateLink={updateLink}\n            deleteSelection={deleteSelection}\n          />\n        ) : (\n          node && (\n            <EditNode\n              availableProperties={availableProperties}\n              node={node}\n              updateLabel={updateLabel}\n              updateNewValue={updateNewValue}\n              updateExistingValue={updateExistingValue}\n              deleteSelection={deleteSelection}\n            />\n          )\n        )\n      ) : (\n        <PodMenu />\n      )}\n      {readonly && <ReadOnly duplicateFlow={duplicateFlow} />}\n    </Card>\n  );\n}\n\nexport default FlowChartSidebar;\n","import React from \"react\";\n\nexport default function NodePort() {\n  return (\n    <div className=\"node-port\">\n      <i className=\"fa fa-chevron-down\" data-html2canvas-ignore=\"true\"></i>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Dropdown } from \"react-bootstrap\";\n\ntype SelectionIndicatorProps = {\n  selected: boolean;\n};\n\nfunction SelectionIndicator({ selected }: SelectionIndicatorProps) {\n  return selected ? (\n    <i className=\"material-icons text-primary\">radio_button_checked</i>\n  ) : (\n    <i className=\"material-icons\">radio_button_unchecked</i>\n  );\n}\n\ntype ConnectionIndicatorProps = {\n  connected: boolean;\n  show: boolean;\n};\n\nfunction ConnectionIndicator({ connected, show }: ConnectionIndicatorProps) {\n  if (!show) return null;\n  return connected ? (\n    <i className=\"material-icons ml-2 text-success\">wifi</i>\n  ) : (\n    <i className=\"material-icons ml-2 text-warning\">wifi_off</i>\n  );\n}\n\nfunction TitleConnectionIndicator({\n  connected,\n  show,\n}: ConnectionIndicatorProps) {\n  if (!show) return null;\n  return connected ? (\n    <i className=\"material-icons text-white ml-1 mr-2\">wifi</i>\n  ) : (\n    <i className=\"material-icons text-warning ml-1 mr-2\">wifi_off</i>\n  );\n}\n\ntype DeleteFlowProps = {\n  deleteFlow: (e: any) => void;\n  show: boolean;\n};\n\nfunction DeleteFlowButton({ show, deleteFlow }: DeleteFlowProps) {\n  if (!show) return null;\n  return (\n    <i className=\"material-icons text-danger float-right\" onClick={deleteFlow}>\n      delete\n    </i>\n  );\n}\n\ntype EditFlowsProps = {\n  toggleEditing: () => void;\n  isEditing: boolean;\n};\n\nfunction EditFlowsButton({ isEditing, toggleEditing }: EditFlowsProps) {\n  return isEditing ? (\n    <i\n      onClick={toggleEditing}\n      className=\"material-icons float-right cursor-pointer text-success\"\n    >\n      done\n    </i>\n  ) : (\n    <i\n      onClick={toggleEditing}\n      className=\"material-icons float-right cursor-pointer\"\n    >\n      edit\n    </i>\n  );\n}\n\ntype FlowSelectionProps = {\n  flows: {\n    [key: string]: any;\n  };\n  loadFlow: (flowId: string) => void;\n  createNewFlow: (e: any) => void;\n  deleteFlow: (e: any, flowId: string) => void;\n  selectedFlowId: string;\n  connected: boolean;\n};\n\nexport default function FlowSelection({\n  flows,\n  loadFlow,\n  selectedFlowId,\n  createNewFlow,\n  deleteFlow,\n  connected,\n}: FlowSelectionProps) {\n  const [isEditing, setIsEditing] = useState(false);\n\n  const toggleEditing = () => {\n    setIsEditing((currentIsEditing) => !currentIsEditing);\n  };\n\n  const userFlows = Object.entries(flows).filter(\n    ([id, flow]) => flow.type !== \"example\"\n  );\n\n  const exampleFlows = Object.entries(flows).filter(\n    ([id, flow]) => flow.type === \"example\"\n  );\n\n  const currentFlow = flows[selectedFlowId];\n\n  return (\n    <Dropdown className=\"flow-selection\">\n      <Dropdown.Toggle>\n        {currentFlow.name}\n        <TitleConnectionIndicator\n          show={currentFlow.type === \"remote\"}\n          connected={connected}\n        />\n      </Dropdown.Toggle>\n      <Dropdown.Menu>\n        <Dropdown.Item onClick={createNewFlow}>\n          <i className=\"material-icons\">add</i>New Flow\n        </Dropdown.Item>\n        <Dropdown.Header className=\"text-uppercase\">\n          Your Flows{\" \"}\n          <EditFlowsButton\n            isEditing={isEditing}\n            toggleEditing={toggleEditing}\n          />\n        </Dropdown.Header>\n        {userFlows.map(([flowId, flow], idx) => (\n          <Dropdown.Item onClick={() => loadFlow(flowId)} key={idx}>\n            <SelectionIndicator selected={flowId === selectedFlowId} />\n            {flow.name}\n            <ConnectionIndicator\n              show={flow.type === \"remote\"}\n              connected={connected}\n            />\n            <DeleteFlowButton\n              show={flow.type === \"user-generated\" && isEditing}\n              deleteFlow={(e: any) => deleteFlow(e, flowId)}\n            />\n          </Dropdown.Item>\n        ))}\n        <Dropdown.Header className=\"text-uppercase\">Examples</Dropdown.Header>\n        {exampleFlows.map(([flowId, flow], idx) => (\n          <Dropdown.Item onClick={() => loadFlow(flowId)} key={idx}>\n            <SelectionIndicator selected={flowId === selectedFlowId} />\n            {flow.name}\n          </Dropdown.Item>\n        ))}\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n}\n","import React from \"react\";\nimport { ITooltipComponentDefaultProps } from \"@bastinjafari/react-flow-chart-with-tooltips-and-multi-select\";\n\nexport default function Tooltip(props: ITooltipComponentDefaultProps) {\n  return (\n    <div className=\"tooltip-container\">\n      <img className=\"tooltip-icon\" src=\"../../icon.png\" alt=\"Tooltip Icon\" />\n      <span className=\"tooltip-text\">{props.tooltip}</span>\n    </div>\n  );\n}\n","export const tooltipConfig = {\n  tooltipsGlobal: {\n    showTooltip: true,\n    toogleOffWhenClicked: \"global\",\n    text: \"Hold Shift and click to select multiple nodes\",\n  },\n};\n","import React from \"react\";\nimport { cloneDeep } from \"lodash\";\nimport { FlowChart } from \"@bastinjafari/react-flow-chart-with-tooltips-and-multi-select\";\nimport * as actions from \"@bastinjafari/react-flow-chart-with-tooltips-and-multi-select/src/container/actions\";\nimport { Container, Row, Card } from \"shards-react\";\nimport { Dispatcher, Constants, Store } from \"../flux\";\nimport { PageTitle } from \"../components/Common/PageTitle\";\nimport html2canvas from \"html2canvas\";\n\nimport CommandBar from \"../components/FlowChart/CommandBar\";\nimport Sidebar from \"../components/FlowChart/Sidebar\";\nimport CustomNode from \"../components/FlowChart/ChartNode\";\nimport CustomPort from \"../components/FlowChart/NodePort\";\nimport FlowSelection from \"../components/FlowChart/FlowSelection\";\nimport { formatAsYAML, copyToClipboard } from \"../helpers\";\n\nimport Tooltip from \"../components/FlowChart/Tooltip\";\nimport { tooltipConfig } from \"../data/tooltipConfig\";\n\nconst syncEvents = [\n  \"onDragNodeStop\",\n  \"onCanvasDrop\",\n  \"onCanvasClick\",\n  \"onNodeClick\",\n  \"onDragCanvasStop\",\n  \"updateNode\",\n  \"updateLink\",\n];\n\nclass FlowView extends React.Component<any, any> {\n  constructor(props: any) {\n    super(props);\n    const { flow: chart, type: flowType } = Store.getFlowchart();\n    const chartWithTooltips = {\n      ...chart,\n      ...tooltipConfig,\n    };\n    const selectedFlowId = Store.getSelectedFlowId();\n    const flows = Store.getFlows();\n    const connected = Store.getConnectionStatus();\n    const availableProperties = Store.getAvailableProperties();\n    this.state = {\n      availableProperties,\n      flowType,\n      connected,\n      chart: { ...chartWithTooltips },\n      selectedFlowId,\n      flows,\n      showOverlay: false,\n      actionCallbacks: Object.keys(actions).reduce(\n        (obj: any, key: any, idx: any) => {\n          obj[key] = (...args: any) => {\n            let { chart } = this.state;\n            let action = (actions as any)[key];\n            let newChartTransformer = action(...args);\n            let newChart = newChartTransformer(chart);\n            this.updateFlow({ ...chart, ...newChart }, key);\n            return newChart;\n          };\n          return obj;\n        },\n        {}\n      ),\n    };\n\n    Store.on(\"update-ui\", this.getConnectionStatus);\n    Store.on(\"update-flowchart\", this.getData);\n  }\n\n  componentDidMount = () => {\n    const chartContainer = document.querySelector(\".chart-container\");\n    if (chartContainer)\n      chartContainer.addEventListener(\"contextmenu\", (e) => e.preventDefault());\n  };\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-flowchart\", this.getData);\n    Store.removeListener(\"update-ui\", this.getConnectionStatus);\n  };\n\n  exportImage = (extension = \"png\") => {\n    const chartContainer = document.querySelector(\".chart-container\");\n    const captureOverlay = document.querySelector(\".capture-overlay\");\n    if (!chartContainer) return;\n    if (captureOverlay) captureOverlay.classList.add(\"fade-out\");\n\n    this.showCaptureOverlay();\n    setTimeout(() => this.showCaptureOverlay(false), 500);\n\n    let canvasParams = {\n      foreignObjectRendering: true,\n      logging: true,\n      x: 0,\n      y: 0,\n      scrollX: 0,\n      scrollY: 0,\n      scale: 5,\n    };\n\n    html2canvas(chartContainer as HTMLElement, canvasParams).then((canvas) => {\n      var image = canvas.toDataURL(`image/${extension}`);\n      var link = document.getElementById(\"download-link\");\n      if (!link) return;\n      link.setAttribute(\"download\", `jina-flow-visual.${extension}`);\n      link.setAttribute(\"href\", image);\n      link.click();\n    });\n  };\n\n  showCaptureOverlay = (showOverlay = true) => {\n    this.setState({ showOverlay });\n  };\n\n  getData = () => {\n    const { flow: chart, type: flowType } = Store.getFlowchart();\n    const selectedFlowId = Store.getSelectedFlowId();\n    const flows = Store.getFlows();\n    this.setState({ chart, flowType, selectedFlowId, flows });\n  };\n\n  getConnectionStatus = () => {\n    const connected = Store.getConnectionStatus();\n    this.setState({ connected });\n  };\n\n  updateNode = (node: any) => {\n    let { chart } = this.state;\n    let newChart = cloneDeep(chart);\n    newChart.nodes[node.id].label = node.label;\n\n    let props = {\n      ...node.properties,\n      ...node.newProperties,\n    };\n\n    Object.keys(props).forEach((id) => {\n      if (props[id] === \"\" || typeof props[id] === \"undefined\") {\n        delete props[id];\n      }\n    });\n\n    newChart.nodes[node.id].properties = props;\n\n    this.updateFlow({ ...chart, ...newChart }, \"updateNode\");\n    return newChart.nodes[node.id];\n  };\n\n  updateLink = (linkId: string, fromId: string, toId: string | undefined) => {\n    if (fromId === toId) return;\n    let { chart } = this.state;\n    let newChart = cloneDeep(chart);\n\n    newChart.links[linkId].from.nodeId = fromId;\n    newChart.links[linkId].to.nodeId = toId;\n\n    this.updateFlow({ ...chart, ...newChart }, \"updateLink\");\n  };\n\n  deleteSelection = () => {\n    this.state.actionCallbacks.onDeleteKey({});\n  };\n\n  updateFlow = (flow: any, event: any) => {\n    if (syncEvents.includes(event)) return this.syncFlow(flow);\n    this.setState({ chart: flow });\n  };\n\n  syncFlow = (flow: any) => {\n    Dispatcher.dispatch({\n      actionType: Constants.UPDATE_FLOW,\n      payload: flow,\n    });\n  };\n\n  selectNode = (data: any) => {\n    Dispatcher.dispatch({\n      actionType: Constants.SELECT_NODE,\n      payload: data.nodeId,\n    });\n  };\n\n  copyChartAsYAML = () => {\n    copyToClipboard(formatAsYAML(this.state.chart));\n    alert(\"Chart copied to clipboard as YAML\");\n  };\n\n  validateLink = ({ fromNodeId, toNodeId, fromPortId, toPortId }: any) => {\n    return !(fromNodeId === toNodeId || fromPortId === toPortId);\n  };\n\n  showImportModal = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.SHOW_MODAL,\n      payload: { modal: \"import\" },\n    });\n  };\n\n  loadFlow = (flow: any) => {\n    Dispatcher.dispatch({\n      actionType: Constants.LOAD_FLOW,\n      payload: flow,\n    });\n  };\n\n  createNewFlow = (e: any) => {\n    e.preventDefault();\n    e.stopPropagation();\n    Dispatcher.dispatch({\n      actionType: Constants.CREATE_NEW_FLOW,\n    });\n  };\n\n  deleteFlow = (e: any, flowId: any) => {\n    e.preventDefault();\n    e.stopPropagation();\n    Dispatcher.dispatch({\n      actionType: Constants.DELETE_FLOW,\n      payload: flowId,\n    });\n  };\n\n  duplicateFlow = () => {\n    const yaml = formatAsYAML(this.state.chart);\n    Dispatcher.dispatch({\n      actionType: Constants.DUPLICATE_FLOW,\n      payload: yaml,\n    });\n  };\n\n  render = () => {\n    const {\n      chart,\n      flows,\n      selectedFlowId,\n      showOverlay,\n      connected,\n      flowType,\n      availableProperties,\n      actionCallbacks,\n    } = this.state;\n    const readonly = flowType !== \"user-generated\";\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        <div className=\"px-4\">\n          <a href=\"/#\" id=\"download-link\" style={{ display: \"none\" }}>\n            download\n          </a>\n          <Row noGutters className=\"page-header mb-4\">\n            <PageTitle title=\"Flow Design\" className=\"text-sm-left mb-3\" />\n          </Row>\n          <div className=\"flow-container d-flex flex-column flex-md-row\">\n            <Card className=\"chart-section-container mr-md-4 mb-4\">\n              <FlowSelection\n                connected={connected}\n                flows={flows}\n                selectedFlowId={selectedFlowId}\n                createNewFlow={this.createNewFlow}\n                loadFlow={this.loadFlow}\n                deleteFlow={this.deleteFlow}\n              />\n              <CommandBar\n                copyChart={this.copyChartAsYAML}\n                importChart={this.showImportModal}\n                exportImage={this.exportImage}\n              />\n              <div className=\"chart-container\">\n                <div\n                  className=\"capture-overlay\"\n                  style={{ display: showOverlay ? \"\" : \"none\" }}\n                >\n                  <div className=\"capture-overlay-top\"></div>\n                  <div className=\"capture-overlay-bottom\"></div>\n                </div>\n                <FlowChart\n                  chart={chart}\n                  Components={{\n                    TooltipComponent: Tooltip,\n                    NodeInner: CustomNode as any,\n                    Port: CustomPort,\n                  }}\n                  callbacks={actionCallbacks}\n                  config={{\n                    readonly,\n                    validateLink: this.validateLink,\n                  }}\n                />\n              </div>\n            </Card>\n            <Sidebar\n              availableProperties={availableProperties}\n              duplicateFlow={this.duplicateFlow}\n              readonly={readonly}\n              chart={chart}\n              deleteSelection={this.deleteSelection}\n              updateNode={this.updateNode}\n              updateLink={this.updateLink}\n            />\n          </div>\n        </div>\n      </Container>\n    );\n  };\n}\nexport default FlowView;\n","import React, { useRef, useEffect, useState } from \"react\";\nimport ChartElement, {\n  ChartConfiguration,\n  ChartOptions,\n  ChartData,\n  ChartDataSets,\n} from \"chart.js\";\nimport { LogLevelSummaryChartData } from \"./types\";\n\nconst DEFAULT_HEIGHT = 10;\nconst DEFAULT_WIDTH = 100;\n\nconst _levels: { [key: string]: any } = {\n  INFO: {\n    borderColor: \"#009999\",\n    backgroundColor: \"rgba(0, 153, 153, 0.9)\",\n  },\n  SUCCESS: {\n    borderColor: \"#32c8cd\",\n    backgroundColor: \"rgba(50, 200, 205, 0.9)\",\n  },\n  WARNING: {\n    borderColor: \"#ffcc66\",\n    backgroundColor: \"rgba(255, 204, 102, 0.9)\",\n  },\n  ERROR: {\n    borderColor: \"#ff6666\",\n    backgroundColor: \"rgba(255, 102, 102, 0.9)\",\n  },\n  CRITICAL: {\n    borderColor: \"#ff4540\",\n    backgroundColor: \"rgba(255, 70, 64, 0.9)\",\n  },\n  DEBUG: {\n    borderColor: \"#6E7278\",\n    backgroundColor: \"rgba(110, 114, 120, 0.9)\",\n  },\n};\n\nfunction getParsedDatasets(data: LogLevelSummaryChartData) {\n  const datasets = Object.keys(_levels).map(\n    (level): ChartDataSets => {\n      const levelData = data.map((tick: any) => tick.levels[level]);\n      return {\n        barPercentage: 0.75,\n        categoryPercentage: 1,\n        label: level,\n        fill: \"start\",\n        backgroundColor: _levels[level].backgroundColor,\n        data: levelData,\n      };\n    }\n  );\n  return datasets;\n}\n\nfunction getLabels(amount?: number): number[] {\n  const labels = [];\n  for (let i = 0; i < (amount || 0); ++i) {\n    labels.push(i);\n  }\n  return labels;\n}\n\ntype Props = {\n  width?: number;\n  height?: number;\n  numSeconds?: number;\n  numTicks?: number;\n  data: LogLevelSummaryChartData;\n  onClick: (activePoints: any) => void;\n};\n\nfunction ChartBase({\n  width,\n  height,\n  numSeconds,\n  data,\n  numTicks,\n  onClick,\n}: Props) {\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n  const [chartInstance, setChartInstance] = useState<ChartElement | null>(null);\n\n  function onClickChart(e: any) {\n    if (!chartInstance) return;\n    const activePoints = chartInstance.getElementsAtEvent(e);\n    onClick(activePoints);\n  }\n\n  function getXAxisLabel(value: any, index: number, values: any) {\n    if (index === 0) return numSeconds + \"s ago\";\n    else if (index === Math.floor(values.length / 2))\n      return (numSeconds ? numSeconds / 2 : 0) + \"s ago\";\n    return;\n  }\n\n  function getYAxisLabel(value: any) {\n    if (Number.isInteger(value)) {\n      return value;\n    }\n  }\n\n  function ChartLegend() {\n    return (\n      <div className=\"chart-legend mt-1 mb-3\">\n        {Object.entries(_levels).map(([level, style]: [string, any]) => (\n          <div className=\"chart-legend-item\">\n            <div className={`chart-legend-indicator mr-1 ${level.toLowerCase()}`} style={{backgroundColor:style.borderColor}}/>\n            <span className=\"chart-legend-caption mr-2\">{level}</span>\n          </div>\n        ))}\n      </div>\n    );\n  }\n\n  useEffect(() => {\n    if (!canvasRef.current) return;\n    const chartOptions: ChartOptions = {\n      animation: { duration: 0 },\n      events: [\"click\"],\n      onClick: onClickChart,\n      maintainAspectRatio: true,\n      responsive: true,\n      legend: {\n        display: false,\n      },\n      tooltips: {\n        enabled: false,\n      },\n      elements: {\n        point: {\n          radius: 0,\n          hitRadius: 20,\n        },\n      },\n      scales: {\n        xAxes: [\n          {\n            stacked: true,\n            ticks: {\n              padding: 5,\n              maxRotation: 0,\n              callback: getXAxisLabel,\n            },\n            gridLines: {\n              zeroLineColor: \"#cfd8dc\",\n              color: \"#cfd8dc\",\n            },\n          },\n        ],\n        yAxes: [\n          {\n            stacked: true,\n            scaleLabel: {\n              display: false,\n            },\n            gridLines: {\n              borderDash: [5, 5],\n              zeroLineColor: \"#cfd8dc\",\n              drawBorder: false,\n              color: \"#cfd8dc\",\n            },\n            ticks: {\n              padding: 5,\n              suggestedMin: 0,\n              autoSkip: true,\n              maxTicksLimit: 4,\n              callback: getYAxisLabel,\n            },\n          },\n        ],\n      },\n    };\n\n    const chartConfig: ChartConfiguration = {\n      type: \"bar\",\n      data: {\n        datasets: getParsedDatasets(data),\n      },\n      options: chartOptions,\n    };\n\n    const newChartInstance = new ChartElement(canvasRef.current, chartConfig);\n    setChartInstance(newChartInstance);\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    if (!chartInstance) return;\n    const chartData: ChartData = {\n      labels: getLabels(numTicks),\n      datasets: getParsedDatasets(data),\n    };\n    chartInstance.data = chartData;\n    chartInstance.update();\n  }, [data, chartInstance, numTicks]);\n\n  return (\n    <>\n      <ChartLegend />\n      <canvas\n        height={height || DEFAULT_HEIGHT}\n        width={width || DEFAULT_WIDTH}\n        ref={canvasRef}\n      />\n    </>\n  );\n}\n\nexport default ChartBase;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport BarChart from \"./BarChartBase\";\nimport { LogLevelSummaryChartData } from \"./types\";\n\nconst DEFAULT_HEIGHT = 10;\nconst DEFAULT_WIDTH = 70;\n\nconst DEFAULT_HEIGHT_SMALL = 20;\nconst DEFAULT_WIDTH_SMALL = 50;\n\ntype Props = {\n  data: {\n    data: LogLevelSummaryChartData;\n    lastTimestamp: number;\n    numSeconds: number;\n    numTicks: number;\n  };\n  showLog: (activePoints: any) => void;\n};\n\nfunction areEqual(prevProps: Props, nextProps: Props) {\n  return prevProps.data.lastTimestamp === nextProps.data.lastTimestamp;\n}\n\nconst LogLevelSummaryChart = React.memo(function LogLevelSummaryChart({\n  data: { data, numSeconds, numTicks },\n  showLog,\n}: Props) {\n  return (\n    <Card className=\"h-100\">\n      <Card.Header className=\"p-2 px-3\">Log Occurences by Level</Card.Header>\n      <Card.Body className=\"d-none d-md-block p-0 pb-2 px-3\">\n        <BarChart\n          data={data}\n          numTicks={numTicks}\n          numSeconds={numSeconds}\n          height={DEFAULT_HEIGHT}\n          width={DEFAULT_WIDTH}\n          onClick={showLog}\n        />\n      </Card.Body>\n      <Card.Body className=\"d-md-none pb-2\">\n        <BarChart\n          data={data}\n          numTicks={numTicks}\n          numSeconds={numSeconds}\n          height={DEFAULT_HEIGHT_SMALL}\n          width={DEFAULT_WIDTH_SMALL}\n          onClick={showLog}\n        />\n      </Card.Body>\n    </Card>\n  );\n},\nareEqual);\n\nexport { LogLevelSummaryChart };\n","import React, { useRef, useEffect, useState } from \"react\";\nimport ChartElement, {\n  ChartConfiguration,\n  ChartOptions,\n  ChartData,\n} from \"chart.js\";\nimport { LogLevelPieChartData } from \"./types\";\n\nconst DEFAULT_HEIGHT = 50;\nconst DEFAULT_WIDTH = 50;\n\nconst _levels: { [key: string]: any } = {\n  INFO: {\n    borderColor: \"#009999\",\n    backgroundColor: \"rgba(0, 153, 153, 0.9)\",\n  },\n  SUCCESS: {\n    borderColor: \"#32c8cd\",\n    backgroundColor: \"rgba(50, 200, 205, 0.9)\",\n  },\n  WARNING: {\n    borderColor: \"#ffcc66\",\n    backgroundColor: \"rgba(255, 204, 102, 0.9)\",\n  },\n  ERROR: {\n    borderColor: \"#ff6666\",\n    backgroundColor: \"rgba(255, 102, 102, 0.9)\",\n  },\n  CRITICAL: {\n    borderColor: \"#ff4540\",\n    backgroundColor: \"rgba(255, 70, 64, 0.9)\",\n  },\n  DEBUG: {\n    borderColor: \"#6E7278\",\n    backgroundColor: \"rgba(110, 114, 120, 0.9)\",\n  },\n};\n\ntype Props = {\n  width?: number;\n  height?: number;\n  data: LogLevelPieChartData;\n};\n\nfunction PieChartBase({ width, height, data }: Props) {\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n  const [chartInstance, setChartInstance] = useState<ChartElement | null>(null);\n\n  function getColor(key:string) {\n    return _levels[key]\n  }\n\n  useEffect(() => {\n    if (!canvasRef.current) return;\n    const names = Object.keys(data);\n    const chartOptions: ChartOptions = {\n      animation: { duration: 0 },\n      legend: {\n        display: false,\n        position: \"bottom\",\n        labels: {\n          padding: 25,\n          boxWidth: 20,\n        },\n      },\n      tooltips: {\n        mode: \"index\",\n        position: \"nearest\",\n      },\n    };\n\n    const chartConfig: ChartConfiguration = {\n      type: \"pie\",\n      data: {\n        datasets: [\n          {\n            borderWidth: 1,\n            data: Object.values(data),\n            borderColor: names.map(name => getColor(name).borderColor),\n            backgroundColor: names.map(name => getColor(name).backgroundColor),\n          },\n        ],\n      },\n      options: chartOptions,\n    };\n\n    const newChartInstance = new ChartElement(canvasRef.current, chartConfig);\n    setChartInstance(newChartInstance);\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    if (!chartInstance) return;\n    const names = Object.keys(data);\n    const chartData: ChartData = {\n      labels: names,\n      datasets: [\n        {\n          borderWidth: 1,\n          data: Object.values(data),\n          borderColor: names.map(name => getColor(name).borderColor),\n          backgroundColor: names.map(name => getColor(name).backgroundColor),\n        },\n      ],\n    };\n    chartInstance.data = chartData;\n    chartInstance.update();\n  }, [data, chartInstance]);\n\n  return (\n    <canvas\n      height={height || DEFAULT_HEIGHT}\n      width={width || DEFAULT_WIDTH}\n      ref={canvasRef}\n    />\n  );\n}\n\nexport default PieChartBase;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport PieChart from \"./PieChartBase\";\nimport { LogLevelPieChartData } from \"./types\";\n\ntype Props = {\n  data: LogLevelPieChartData;\n};\n\nfunction LogLevelPieChart({ data }: Props) {\n  return (\n    <Card className=\"h-100\">\n      <Card.Header className=\"text-center p-2\">Log Levels</Card.Header>\n      <Card.Body className=\"px-3 pt-0 pb-3\">\n        <PieChart data={data} />\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport { LogLevelPieChart };\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { memo } from \"react\";\nimport { areEqual } from \"react-window\";\nimport { ProcessedLog } from \"../../flux/tranformLog\";\n\ntype Props = {\n  index: number;\n  style: any;\n  data: {\n    columns: { firstCol: number; secondCol: number; thirdCol: number };\n    items: ProcessedLog[];\n    showLogDetails: (log: any) => void;\n  };\n};\n\nconst LogItem = memo(\n  ({ index, style, data: { columns, items, showLogDetails } }: Props) => {\n    const logData = items[index];\n    const { name, msg, levelname, process, formattedTimestamp, idx } = logData;\n    let logName = String(name);\n    logName = logName.length > 20 ? logName.substring(0, 20) : logName;\n    let levelInitial = String(levelname)[0];\n    const { firstCol, secondCol, thirdCol } = columns;\n    return (\n      <div\n        className={`log log-${String(\n          levelname\n        ).toLowerCase()} px-4 border-bottom py-1`}\n        css={{ maxHeight: 84 }}\n        style={style}\n        onClick={() => showLogDetails(logData)}\n      >\n        <Row>\n          <Col\n            className=\"log-prefix text-muted px-0 d-flex flex-row\"\n            css={{ maxWidth: firstCol }}\n          >\n            <div className=\"text-bold mr-2\">{idx}</div>\n            <div className=\"ml-auto\">{formattedTimestamp}</div>\n          </Col>\n          <Col\n            className=\"log-prefix px-0 text-left text-md-right text-bold cursor-pointer\"\n            css={{ maxWidth: secondCol }}\n          >\n            {logName}@{process}[{levelInitial}]:\n          </Col>\n          <Col\n            className=\"px-0\"\n            css={{\n              maxHeight: 84,\n              display: \"block\",\n              overflow: \"hidden\",\n              textOverflow: \"ellipsis\",\n              width: thirdCol,\n              whiteSpace: \"nowrap\",\n              paddingRight: 0,\n              marginRight: 0,\n            }}\n          >\n            {msg}\n          </Col>\n        </Row>\n      </div>\n    );\n  },\n  areEqual\n);\n\nexport { LogItem };\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport { Row, Col } from \"react-bootstrap\";\n\ntype Props = {\n  columns: { firstCol: number; secondCol: number };\n  border?:boolean;\n};\n\nconst LogsTableHeader = ({ columns: { firstCol, secondCol },border}: Props) => {\n  return (\n    <div\n      className={`px-4 py-1 bg-light text-monospace ${border?'border-top':''}`}\n      css={{ maxHeight: 84 }}\n    >\n      <Row>\n        <Col\n          className=\"log-prefix text-muted px-0 d-flex flex-row\"\n          css={{ maxWidth: firstCol }}\n        >\n          <div className=\"text-bold mr-2\">#</div>\n          <div className=\"ml-auto\">timestamp</div>\n        </Col>\n        <Col\n          className=\"log-prefix px-0 text-left text-md-right text-bold\"\n          css={{ maxWidth: secondCol }}\n        >\n          source@process[level]:\n        </Col>\n        <Col\n          className=\"px-0\"\n          css={{\n            maxHeight: 84,\n            display: \"block\",\n            overflow: \"hidden\",\n            textOverflow: \"ellipsis\",\n            // width: \"1\",\n            whiteSpace: \"nowrap\",\n            paddingRight: 0,\n            marginRight: 0,\n          }}\n        >\n          message\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport { LogsTableHeader };\n","import React, { useState } from \"react\";\nimport { Collapse } from \"react-bootstrap\";\n\nconst _icons: { [key: string]: any } = {\n  success: {\n    name: \"check_circle\",\n    color: \"success\",\n  },\n  pending: {\n    name: \"pending\",\n    color: \"muted\",\n  },\n  warning: {\n    name: \"error\",\n    color: \"warning\",\n  },\n  failed: {\n    name: \"cancel\",\n    color: \"critical\",\n  },\n};\n\ntype StatusString = \"success\" | \"pending\" | \"warning\" | \"failed\";\n\ntype CountSummaryProps = {\n  levels?: any[];\n  numItems: number;\n  title: string;\n};\n\nfunction CountSummary({ levels, numItems }: CountSummaryProps) {\n  console.log(\"levels:\", levels);\n  return <span className=\"ml-2 text-muted\">({numItems})</span>;\n}\n\nfunction getStatusFromLevels(levels: any): StatusString {\n  const keys = Object.keys(levels);\n  if (\n    keys.find((k) => k.toLowerCase() === \"critical\") ||\n    keys.find((k) => k.toLowerCase() === \"error\")\n  )\n    return \"failed\";\n  if (keys.find((k) => k.toLowerCase() === \"warning\")) return \"warning\";\n  return \"success\";\n}\n\nfunction StatusIcon({ levels }: { levels: any }) {\n  const status = getStatusFromLevels(levels);\n  const icon = _icons[status];\n  return (\n    <i className={`no-select material-icons log-${icon.color} mr-2`}>\n      {icon.name}\n    </i>\n  );\n}\n\ntype ExpandIndicator = {\n  expanded: boolean;\n};\n\nfunction ExpandController({ expanded }: ExpandIndicator) {\n  return (\n    <i\n      className={`no-select material-icons text-muted cursor-pointer ${\n        expanded ? \"rotate-90\" : \"\"\n      } mr-2`}\n    >\n      arrow_forward_ios\n    </i>\n  );\n}\n\ntype Props = {\n  title: string;\n  body: any;\n  numItems: number;\n  group: string;\n  levels?: string[];\n};\n\nfunction LogGroup({ title, body, levels, numItems, group }: Props) {\n  const [expanded, setExpanded] = useState(false);\n  return (\n    <div className={`log-group-item m-2 ${expanded ? \"bg-light\" : \"\"}`}>\n      <div\n        className=\"log-group-header cursor-pointer p-2\"\n        onClick={() => setExpanded((prev) => !prev)}\n      >\n        <ExpandController expanded={expanded} />\n        {levels && <StatusIcon levels={levels} />}\n        <span\n          className={\n            group === \"group-level\" ? `log-${title.toLowerCase()}` : \"\"\n          }\n        >\n          {title}\n        </span>\n        {!levels && (\n          <CountSummary levels={levels} numItems={numItems} title={title} />\n        )}\n      </div>\n      <Collapse in={expanded} timeout={100}>\n        <div className=\"log-group-body p-3\">\n          <div className=\"bg-white border\">{body}</div>\n        </div>\n      </Collapse>\n    </div>\n  );\n}\n\nexport { LogGroup };\n","import React, { useState, useCallback, useEffect, useRef } from \"react\";\nimport _ from \"lodash\";\nimport { FixedSizeList as List } from \"react-window\";\nimport { Card, Row, Col } from \"react-bootstrap\";\nimport AutoSizer from \"react-virtualized-auto-sizer\";\nimport FlexSearch from \"flexsearch\";\nimport { saveAs } from \"file-saver\";\n\nimport { MultiFilterSelect } from \"../Common/MultiFilterSelect\";\nimport { LogItem } from \"./LogItem\";\nimport { LogsTableHeader } from \"./LogsTableHeader\";\nimport { ProcessedLog } from \"../../flux/tranformLog\";\nimport { ExpandingSearchbar } from \"../Common/ExpandingSearchbar\";\nimport { LogGroup } from \"./LogGroup\";\n\nimport {\n  serializeLogsToCSVBlob,\n  serializeLogsToJSONBlob,\n  serializeLogsToTextBlob,\n} from \"../../helpers\";\n\nconst ROW_SIZE = 30;\nconst DEFAULT_VIEW = \"table\";\nconst VIEW_PREFERENCE_NAME = \"logs-view-preference\";\nconst POD_NAME_SPLIT_CHAR = \"-\";\n\nconst SEARCH_FIELDS = [\"filename\",\"funcName\",\"module\",\"msg\",\"pathname\",\"name\"];\n\nconst levels = [\n  \"INFO\",\n  \"SUCCESS\",\n  \"WARNING\",\n  \"ERROR\",\n  \"CRITICAL\",\n  \"DEBUG\",\n] as const;\n\nconst saveOptions = [\n  { value: \"csv\", label: \"CSV\" },\n  { value: \"json\", label: \"JSON\" },\n  { value: \"txt\", label: \"TXT\" },\n];\n\nconst viewOptions: { [key: string]: { value: string; label: string } } = {\n  table: {\n    value: \"table\",\n    label: \"Table View\",\n  },\n  \"group-pod\": {\n    value: \"group-pod\",\n    label: \"Group by Pod\",\n  },\n  \"group-level\": {\n    value: \"group-level\",\n    label: \"Group by Level\",\n  },\n};\n\nfunction getUserViewPreference() {\n  const preference = localStorage.getItem(VIEW_PREFERENCE_NAME);\n  if (preference && viewOptions[preference]) return preference;\n  return false;\n}\n\nfunction setUserViewPreference(preference: string) {\n  localStorage.setItem(VIEW_PREFERENCE_NAME, preference);\n}\n\nfunction getInitialView() {\n  return getUserViewPreference() || DEFAULT_VIEW;\n}\n\nlet _lastNumLogs = 0;\nlet _searchIndex = FlexSearch.create({\n  doc: {\n    id: \"id\",\n    field: SEARCH_FIELDS\n  }\n});\n\nconst applyFilters = <T extends Record<string, any>, K>(\n  item: T,\n  filters: { [key in keyof T]: any }\n) =>\n  Object.entries(filters).reduce((acc, curr) => {\n    const [key, value] = curr;\n    return acc && Array.isArray(value)\n      ? value.length === 0\n        ? true\n        : value.includes(item[key] as any)\n      : value === item[key];\n  }, true as boolean);\n\ntype Format = \"json\" | \"csv\" | \"txt\";\n\ntype View = \"group-pod\" | \"group-level\" | \"table\";\n\nconst generateFileName = (format: Format) =>\n  `jina-logs-${new Date()}.${format}`;\n\nconst saveLogData = (data: any, format: Format) => {\n  const filename = generateFileName(format);\n  if (format === \"csv\") return saveAs(serializeLogsToCSVBlob(data), filename);\n  if (format === \"json\") return saveAs(serializeLogsToJSONBlob(data), filename);\n  if (format === \"txt\") return saveAs(serializeLogsToTextBlob(data), filename);\n};\n\ntype Props = {\n  data: ProcessedLog[];\n  showLogDetails: (log: ProcessedLog) => void;\n};\n\nconst itemKey = (index: number, data: { items: ProcessedLog[] }) =>\n  data.items[index].id;\n\nconst arrayLikeToArray = (arrayLike: Readonly<any[]> | Set<any>) =>\n  Array.isArray(arrayLike) ? arrayLike : Array.from(arrayLike);\n\nconst toOption = (list: Readonly<any[]> | Set<any>) =>\n  arrayLikeToArray(list).map((item) => ({ label: item, value: item }));\n\nfunction LogsList({ data, firstCol, secondCol, showLogDetails, small }: any) {\n  const listRef = useRef<any>();\n  const [scrolledToBottom, setScrolledToBottom] = useState(true);\n\n  useEffect(() => {\n    if (listRef.current && scrolledToBottom) {\n      listRef.current.scrollToItem(data.length);\n    }\n  }, [data.length, scrolledToBottom]);\n\n  return (\n    <div>\n      <LogsTableHeader columns={{ firstCol, secondCol }} border={!small} />\n      <div\n        className={`log-stream-container${\n          small ? \"-small\" : \"\"\n        } p-0 border-top`}\n      >\n        {!scrolledToBottom && (\n          <div\n            onClick={() => listRef.current.scrollToItem(data.length)}\n            className={`back-to-bottom active`}\n          >\n            <i className=\"material-icons\">arrow_downward</i> Back to Bottom\n          </div>\n        )}\n        <AutoSizer>\n          {({ height, width }) => {\n            const thirdCol = width - (firstCol + secondCol);\n            return (\n              <List\n                onScroll={({ scrollOffset }) => {\n                  setScrolledToBottom(\n                    (scrollOffset + height) / ROW_SIZE - data.length === 0\n                  );\n                }}\n                height={height}\n                width={width}\n                itemCount={data.length}\n                itemSize={ROW_SIZE}\n                itemKey={itemKey}\n                itemData={{\n                  items: data,\n                  columns: { firstCol, secondCol, thirdCol },\n                  showLogDetails,\n                }}\n                ref={listRef}\n              >\n                {LogItem}\n              </List>\n            );\n          }}\n        </AutoSizer>\n      </div>\n    </div>\n  );\n}\n\ntype GroupedLogProps = {\n  groupedData: any;\n  grouping: string;\n  firstCol: any;\n  secondCol: any;\n  showLogDetails: any;\n};\n\nfunction GroupedLogs({\n  groupedData,\n  grouping,\n  firstCol,\n  secondCol,\n  showLogDetails,\n}: GroupedLogProps) {\n  return (\n    <Card.Body className=\"log-stream-container p-0 border-top\">\n      {Object.keys(groupedData).length && (\n        <div className=\"log-group-container\">\n          {Object.entries(groupedData).map(([key, data]: any, idx: number) => (\n            <LogGroup\n              group={grouping}\n              key={idx}\n              title={key}\n              levels={data.levels}\n              numItems={data.data.length}\n              body={\n                <LogsList\n                  firstCol={firstCol}\n                  secondCol={secondCol}\n                  data={data.data}\n                  showLogDetails={showLogDetails}\n                  small\n                />\n              }\n            />\n          ))}\n        </div>\n      )}\n    </Card.Body>\n  );\n}\n\nfunction LogsTable({ data, showLogDetails }: Props) {\n  const [currentView, setCurrentView] = useState(() => getInitialView());\n\n  const [selectedSources, setSelectedSources] = useState<any[]>([]);\n  const [selectedLevels, setSelectedLevels] = useState<any[]>([]);\n\n  const [searchResults, setSearchResults] = useState<any[]>([]);\n  const [searchString, setSearchString] = useState(\"\");\n\n  const search = useCallback(async () => {\n    const newData = data.slice(_lastNumLogs,data.length)\n    _searchIndex.add(newData);\n    _lastNumLogs = data.length;\n    const searchResults = await _searchIndex.search(searchString);\n    setSearchResults(searchResults);\n    // @ts-ignore\n  }, [searchString, data.length]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    if (searchString && data.length) search();\n  }, [data.length, searchString, search]);\n\n  function setView(view: View) {\n    setCurrentView(view);\n    setUserViewPreference(view);\n  }\n\n  const unfiltered = searchString ? searchResults : data;\n  const sources = data.reduce((acc, curr) => acc.add(curr.name), new Set());\n\n  let groupedData: any;\n\n  let resultData = (unfiltered || []).filter((result) =>\n    applyFilters(result as any, {\n      levelname: selectedLevels.map(({ value }) => value),\n      name: selectedSources.map(({ value }) => value),\n    })\n  );\n\n  if (currentView === \"group-pod\") {\n    const podNames = arrayLikeToArray(sources).map(\n      (name: string) => name.toLowerCase().split(POD_NAME_SPLIT_CHAR)[0]\n    );\n    groupedData = {};\n    podNames.forEach((podName: string) => {\n      const pod: any = {};\n\n      pod.data = (resultData || []).filter(\n        (log: any) => log.name && log.name.toLowerCase().startsWith(podName)\n      );\n\n      if (!pod.data.length) return;\n      pod.levels = _.countBy(pod.data, \"levelname\");\n      groupedData[podName] = pod;\n    });\n  } else if (currentView === \"group-level\") {\n    groupedData = {};\n    levels.forEach((level: string) => {\n      const levelItem: any = {};\n\n      levelItem.data = (resultData || []).filter(\n        (log: any) => log.levelname === level\n      );\n\n      if (!levelItem.data.length) return;\n      groupedData[level] = levelItem;\n    });\n  }\n\n  const firstCol = 300;\n  const secondCol = 300;\n\n  return (\n    <Card className=\"mb-4\">\n      <Card.Header className=\"p-0\">\n        <Row className=\"p-3\">\n          <Col md=\"8\">\n            <MultiFilterSelect\n              clearAfter\n              options={Object.values(viewOptions)}\n              onFilterChange={(option: any[]) => setView(option[0].value)}\n              className=\"logstream-select mb-2 mr-0 mb-md-0 mr-md-2\"\n              placeholder={\n                currentView === \"table\" ? (\n                  <span>\n                    <i className=\"material-icons mr-2\">table_rows</i>Table View\n                  </span>\n                ) : (\n                  <span>\n                    <i className=\"material-icons mr-2\">view_list</i>\n                    {viewOptions[currentView].label}\n                  </span>\n                )\n              }\n              isSearchable={false}\n            />\n            {currentView === \"table\" && (\n              <MultiFilterSelect\n                isMulti\n                options={toOption(sources)}\n                onFilterChange={setSelectedSources}\n                className=\"logstream-select mb-2 mr-0 mb-md-0 mr-md-2\"\n                placeholder={\n                  <span>\n                    <i className=\"material-icons mr-2\">mediation</i>All Sources\n                  </span>\n                }\n              />\n            )}\n            <MultiFilterSelect\n              isMulti\n              options={toOption(levels as any) as any}\n              onFilterChange={setSelectedLevels}\n              className=\"logstream-select mb-2 mr-0 mb-md-0 mr-md-2\"\n              placeholder={\n                <span>\n                  <i className=\"material-icons mr-2\">bar_chart</i>All Levels\n                </span>\n              }\n            />\n            <MultiFilterSelect\n              clearAfter\n              options={saveOptions}\n              onFilterChange={(option: any[]) =>\n                saveLogData(data, option[0].value)\n              }\n              className=\"logstream-select mb-2 mr-0 mb-md-0 mr-md-2\"\n              placeholder={\n                <span>\n                  <i className=\"material-icons mr-2\">download</i>Download Logs\n                </span>\n              }\n              isSearchable={false}\n            />\n          </Col>\n          <Col md=\"4\">\n            <ExpandingSearchbar\n              placeholder=\"search logs...\"\n              value={searchString}\n              onChange={setSearchString}\n            />\n          </Col>\n        </Row>\n      </Card.Header>\n      {currentView === \"table\" ? (\n        <LogsList\n          firstCol={firstCol}\n          secondCol={secondCol}\n          data={resultData}\n          showLogDetails={showLogDetails}\n        />\n      ) : (\n        <GroupedLogs\n          firstCol={firstCol}\n          secondCol={secondCol}\n          grouping={currentView}\n          groupedData={groupedData}\n          showLogDetails={showLogDetails}\n        />\n      )}\n    </Card>\n  );\n}\n\nexport { LogsTable };\n","import React, { useEffect, useState } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { LogLevelSummaryChart } from \"../components/LogStream/LogLevelSummaryChart\";\nimport { LogLevelPieChart } from \"../components/LogStream/LogLevelPieChart\";\nimport { PageTitle } from \"../components/Common/PageTitle\";\nimport { LogsTable } from \"../components/LogStream/LogsTable\";\nimport { Store, Dispatcher, Constants } from \"../flux\";\n\nconst LOGS_UPDATE_INTERVAL = 20;\nconst CHART_UPDATE_INTERVAL = 1000;\n\nlet chartUpdateInterval: any;\nlet logsUpdateInterval: any;\n\nconst showLogDetails = (log: any) => {\n  Dispatcher.dispatch({\n    actionType: Constants.SHOW_MODAL,\n    payload: { modal: \"logDetails\", modalParams: { log } },\n  });\n};\n\nfunction showLogInTable(index: number) {\n  Dispatcher.dispatch({\n    actionType: Constants.SHOW_LOG_AT_INDEX,\n    payload: index,\n  });\n}\n\nfunction LogsView() {\n  const hasNewLogs = React.useRef(false);\n  const [logs, setLogs] = useState(() => Store.getLogs());\n  const [logLevelOccurrences, setLogLevelOccurrences] = useState(() =>\n    Store.getLogLevelOccurences()\n  );\n  const [logLevelCharts, setLogLevelCharts] = useState(() =>\n    Store.getLogLevelCharts()\n  );\n\n  function updateLogs() {\n    const newLogs = Store.getLogs();\n    const newOccurrences = Store.getLogLevelOccurences();\n    setLogs([...newLogs]);\n    setLogLevelOccurrences({ ...newOccurrences });\n  }\n\n  function updateChart() {\n    const newCharts = Store.getLogLevelCharts();\n    setLogLevelCharts({ ...newCharts });\n  }\n\n  function showLog(activePoints: any) {\n    const { data } = logLevelCharts;\n    let index = activePoints[0] && activePoints[0]._index;\n    if (index && typeof index !== \"undefined\") {\n      const { lastLog } = data[index];\n      showLogInTable(lastLog);\n    }\n  }\n\n  function checkForNewLogs() {\n    if (!hasNewLogs.current) return;\n    hasNewLogs.current = false;\n    updateLogs();\n  }\n\n  function onNewLogs() {\n    hasNewLogs.current = true;\n  }\n\n  useEffect(() => {\n    Store.on(\"update-logs\", onNewLogs);\n    logsUpdateInterval = setInterval(checkForNewLogs, LOGS_UPDATE_INTERVAL);\n    chartUpdateInterval = setInterval(updateChart, CHART_UPDATE_INTERVAL);\n    return () => {\n      Store.removeListener(\"update-logs\", onNewLogs);\n      clearInterval(logsUpdateInterval);\n      clearInterval(chartUpdateInterval);\n    };\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <Container fluid className=\"main-content-container px-0\">\n      <div className=\"px-4\">\n        <Row noGutters className=\"page-header mb-4\">\n          <PageTitle\n            title=\"Log Stream\"\n            className=\"text-sm-left mb-3\"\n          />\n        </Row>\n        <Row>\n          <Col md=\"10\" className=\"mb-4\">\n            <LogLevelSummaryChart data={logLevelCharts} showLog={showLog} />\n          </Col>\n          <Col md=\"2\" className=\"mb-4\">\n            <LogLevelPieChart data={logLevelOccurrences} />\n          </Col>\n        </Row>\n        <LogsTable data={logs} showLogDetails={showLogDetails} />\n      </div>\n    </Container>\n  );\n}\n\nexport { LogsView };\n","import React from \"react\";\nimport { Card } from \"shards-react\";\n\ntype Props = {\n  elapsed: {\n    task_name: string;\n    seconds: string | number;\n  };\n};\n\nexport default function ElapsedCard({ elapsed }: Props) {\n  return (\n    <Card className=\"p-3 h-100\">\n      <h6 className=\"stats-small__label text-uppercase text-center mb-0\">\n        <b>{elapsed.task_name}</b>\n      </h6>\n      <h2 className=\"my-3 mx-auto\">{elapsed.seconds}</h2>\n      <h6 className=\"stats-small__label text-uppercase text-center\">\n        Elapsed Time\n      </h6>\n    </Card>\n  );\n}\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { Card } from \"shards-react\";\n\nimport ChartElement from \"chart.js\";\n\ntype Props = {\n  progress: any;\n};\n\nfunction ProgressCard({ progress }: Props) {\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n  const [chartInstance, setChartInstance] = useState<ChartElement | null>(null);\n\n  useEffect(() => {\n    if (!canvasRef.current) return;\n    const newChartInstance = new ChartElement(canvasRef.current, {\n      type: \"doughnut\",\n      data: {\n        datasets: [\n          {\n            hoverBorderColor: \"#fff\",\n            data: [0, 100],\n            backgroundColor: [\"#32c8cd\", \"#E9ECEF\"],\n          },\n        ],\n        labels: [\"Label 1\", \"Label 2\"],\n      },\n      options: {\n        legend: { display: false },\n        responsive: false,\n        cutoutPercentage: 70,\n        animation: { duration: 0 },\n        tooltips: {\n          enabled: false,\n        },\n      },\n    });\n    setChartInstance(newChartInstance);\n  }, []);\n\n  useEffect(() => {\n    if (!chartInstance) return;\n    const percent = (progress.num_bars / progress.bar_len || 1) * 100;\n    let newData = {\n      datasets: [\n        {\n          hoverBorderColor: \"#fff\",\n          data: [percent, 100 - percent],\n          backgroundColor: [\"#32c8cd\", \"#E9ECEF\"],\n        },\n      ],\n      labels: [\"Label 1\", \"Label 2\"],\n    };\n    chartInstance.data = newData;\n    chartInstance.update();\n  }, [JSON.stringify(progress), chartInstance]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <Card className=\"p-3 h-100\">\n      <h6 className=\"stats-small__label text-uppercase text-center\">\n        <b>Progress</b>\n      </h6>\n      <div className=\"go-stats__chart mx-auto d-flex flex-row\">\n        <div className=\"mr-4 mt-3\">\n          <h6 className=\"stats-small__label text-uppercase text-center\">\n            Request\n          </h6>\n          <h4 className=\"mb-0\">{progress.currentRequest}</h4>\n        </div>\n\n        <canvas\n          ref={canvasRef}\n          style={{ width: \"100px\", height: \"100px\" }}\n          className=\"my-auto\"\n        />\n      </div>\n    </Card>\n  );\n}\n\nexport default ProgressCard;\n","import React, { useRef, useState, useCallback, useEffect } from \"react\";\nimport { Card } from \"shards-react\";\n\nimport ChartElement, { ChartOptions } from \"chart.js\";\n\ntype Props = {\n  speed: {\n    history: any;\n    current: any;\n    unit: any;\n  };\n};\n\nfunction SpeedCard({ speed }: Props) {\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n  const [chartInstance, setChartInstance] = useState<ChartElement | null>(null);\n  const { history } = speed;\n\n  let maxValue = Math.max(...history);\n  let minValue = Math.min(...history);\n\n  const getChartOptions = useCallback((): ChartOptions => {\n    const difference = maxValue - minValue;\n    return {\n      maintainAspectRatio: true,\n      responsive: true,\n      animation: { duration: 0 },\n      legend: {\n        display: false,\n      },\n      tooltips: {\n        enabled: false,\n      },\n      layout: {\n        padding: {\n          bottom: -10,\n          left: -10,\n        },\n      },\n      elements: {\n        point: {\n          radius: 0,\n        },\n        line: {\n          tension: 0.33,\n        },\n      },\n      scales: {\n        xAxes: [\n          {\n            gridLines: {\n              display: false,\n            },\n            ticks: {\n              display: false,\n            },\n          },\n        ],\n        yAxes: [\n          {\n            gridLines: {\n              display: false,\n            },\n            scaleLabel: {\n              padding: 0,\n              display: false,\n            },\n            ticks: {\n              display: false,\n              // Avoid getting the graph line cut of at the top of the canvas.\n              // Chart.js bug link: https://github.com/chartjs/Chart.js/issues/4790\n              suggestedMax: maxValue + difference * 0.1,\n              suggestedMin: minValue - difference * 0.1,\n            },\n          },\n        ],\n      },\n    };\n  }, [maxValue, minValue]);\n\n  const getChartConfig = useCallback(\n    (chartOptions) => {\n      return {\n        type: \"line\",\n        data: {\n          labels: new Array(history.length).fill(null),\n          datasets: [\n            {\n              label: \"Today\",\n              fill: \"start\",\n              borderWidth: 1.5,\n              backgroundColor: \"rgba(0, 153, 153, 0.25)\",\n              borderColor: \"#009999\",\n              data: history,\n            },\n          ],\n        },\n        options: chartOptions,\n      };\n    },\n    [history]\n  );\n\n  useEffect(() => {\n    if (!canvasRef.current) return;\n    const chartOptions = getChartOptions();\n    const chartConfig = getChartConfig(chartOptions);\n    const newChartInstance = new ChartElement(canvasRef.current, chartConfig);\n    setChartInstance(newChartInstance);\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    if (!chartInstance) return;\n    let newChartData = {\n      ...chartInstance.data,\n      ...{\n        datasets: [\n          {\n            label: \"Today\",\n            fill: \"start\",\n            borderWidth: 1.5,\n            backgroundColor: \"rgba(0, 153, 153, 0.25)\",\n            borderColor: \"#009999\",\n            data: history,\n          },\n        ],\n      },\n    };\n    chartInstance.options = getChartOptions();\n    chartInstance.data = newChartData;\n    chartInstance.update();\n  }, [history, chartInstance, getChartOptions, getChartConfig]);\n\n  return (\n    <Card className=\"pt-0 h-100 stats-small\">\n      <div className=\"stats-small__data mx-auto\">\n        <h6 className=\"stats-small__label text-uppercase text-center mb-0 pt-0 mt-0\">\n          <b>Speed</b>\n        </h6>\n        <h2 className=\"my-3 mx-auto\">{speed.current}</h2>\n        <h6 className=\"stats-small__label under text-uppercase text-center\">\n          {speed.unit}/Second\n        </h6>\n      </div>\n      <canvas height=\"100\" ref={canvasRef} className=\"stats-small-1\" />\n    </Card>\n  );\n}\n\nexport default SpeedCard;\n","import React, { useRef, useEffect, useState, useCallback } from \"react\";\nimport ChartElement, {\n  ChartConfiguration,\n  ChartOptions,\n  ChartData,\n} from \"chart.js\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Row,\n  Col,\n  ButtonGroup,\n  Button,\n} from \"shards-react\";\nimport { formatBytes } from \"../../helpers\";\n\nfunction BarChartCard(props: any) {\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n  const [chartInstance, setChartInstance] = useState<ChartElement | null>(null);\n  const [currentTab, setCurrentTab] = useState(\"messages\");\n\n  const chartData = props[currentTab];\n\n  const getChartOptions = useCallback((): ChartOptions => {\n    return {\n      animation: { duration: 0 },\n      tooltips: {\n        callbacks: {\n          title: function (tooltipItem: any) {\n            return `Pod: ${tooltipItem[0].xLabel}`;\n          },\n          label: (tooltipItem: any, data: any) => {\n            let label = `${data.datasets[tooltipItem.datasetIndex].label}: ${\n              currentTab === \"bytes\"\n                ? formatBytes(tooltipItem.value)\n                : tooltipItem.value\n            }`;\n            return label;\n          },\n          afterLabel: (tooltipItem: any) => {\n            let text = \"\\nProcess ID: \" + chartData[tooltipItem.index].process;\n            return text;\n          },\n        },\n      },\n      scales: {\n        xAxes: [\n          {\n            stacked: true,\n          },\n        ],\n        yAxes: [\n          {\n            stacked: true,\n            ticks: {\n              callback: (label: number) => {\n                if (currentTab === \"bytes\") return formatBytes(label);\n                return label > 999 ? `${(label / 1000).toFixed(0)}k` : label;\n              },\n            },\n          },\n        ],\n      },\n      maintainAspectRatio: false,\n    };\n  }, [chartData, currentTab]);\n\n  const getChartConfig = useCallback(\n    (chartOptions: ChartOptions): ChartConfiguration => {\n      return {\n        type: \"bar\",\n        options: chartOptions,\n        data: {\n          labels: chartData.map((d: any) => d.node),\n          datasets: [\n            {\n              label: \"msg sent\",\n              fill: \"start\",\n              data: chartData.map((d: any) => d.sent),\n              backgroundColor: \"#009999\",\n              borderColor: \"#009999\",\n              pointBackgroundColor: \"#FFFFFF\",\n              pointHoverBackgroundColor: \"#009999\",\n              borderWidth: 1.5,\n            },\n            {\n              label: \"msg received\",\n              fill: \"start\",\n              data: chartData.map((d: any) => d.received),\n              backgroundColor: \"#32C8CD\",\n              borderColor: \"#32C8CD\",\n              pointBackgroundColor: \"#FFFFFF\",\n              pointHoverBackgroundColor: \"#32C8CD\",\n              borderWidth: 1.5,\n            },\n          ],\n        },\n      };\n    },\n    [chartData]\n  );\n\n  const getChartData = useCallback(() => {\n    return {\n      labels: chartData.map((d: any) => d.node),\n      datasets: [\n        {\n          label: `${currentTab} sent`,\n          fill: \"start\",\n          data: chartData.map((d: any) => d.sent),\n          backgroundColor: \"#009999\",\n          borderColor: \"#009999\",\n          pointBackgroundColor: \"#FFFFFF\",\n          pointHoverBackgroundColor: \"#009999\",\n          borderWidth: 1.5,\n        },\n        {\n          label: `${currentTab} received`,\n          fill: \"start\",\n          data: chartData.map((d: any) => d.received),\n          backgroundColor: \"#32C8CD\",\n          borderColor: \"#32C8CD\",\n          pointBackgroundColor: \"#FFFFFF\",\n          pointHoverBackgroundColor: \"#32C8CD\",\n          borderWidth: 1.5,\n        },\n      ],\n    };\n  }, [chartData, currentTab]);\n\n  useEffect(() => {\n    if (!canvasRef.current) return;\n    const chartOptions: ChartOptions = getChartOptions();\n    const chartConfig: ChartConfiguration = getChartConfig(chartOptions);\n    const newChartInstance = new ChartElement(canvasRef.current, chartConfig);\n    setChartInstance(newChartInstance);\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    if (!chartInstance) return;\n    const newData: ChartData = getChartData();\n    const newOptions: ChartOptions = getChartOptions();\n    chartInstance.options = newOptions;\n    chartInstance.data = newData;\n    chartInstance.update();\n  }, [chartData, chartInstance, currentTab, getChartData, getChartOptions]);\n\n  return (\n    <Card small className=\"h-100 mb-4\">\n      <CardHeader className=\"border-bottom\">\n        <h6 className=\"m-0\">Network Load</h6>\n      </CardHeader>\n\n      <CardBody className=\"pt-0\">\n        <Row className=\"border-bottom py-2 bg-light\">\n          <Col sm=\"6\" className=\"col d-flex mb-2 mb-sm-0\">\n            <ButtonGroup>\n              <Button\n                theme=\"white\"\n                active={currentTab === \"messages\"}\n                onClick={() => setCurrentTab(\"messages\")}\n              >\n                Messages\n              </Button>\n              <Button\n                theme=\"white\"\n                active={currentTab === \"bytes\"}\n                onClick={() => setCurrentTab(\"bytes\")}\n              >\n                Bytes\n              </Button>\n            </ButtonGroup>\n          </Col>\n        </Row>\n        <div style={{ position: \"relative\", height: 300 }}>\n          <canvas ref={canvasRef} />\n        </div>\n      </CardBody>\n    </Card>\n  );\n}\n\nexport default BarChartCard;\n","import React, { useRef, useState, useCallback, useEffect } from \"react\";\nimport { Card } from \"shards-react\";\n\nimport ChartElement, { ChartOptions } from \"chart.js\";\n\ntype Props = {\n  qps: {\n    history: any;\n    current: any;\n  };\n};\n\nfunction QueriesPerSecondCard({ qps }: Props) {\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n  const [chartInstance, setChartInstance] = useState<ChartElement | null>(null);\n  const { history } = qps;\n\n  let maxValue = Math.max(...history);\n  let minValue = Math.min(...history);\n\n  const getChartOptions = useCallback((): ChartOptions => {\n    const difference = maxValue - minValue;\n    return {\n      maintainAspectRatio: true,\n      responsive: true,\n      animation: { duration: 0 },\n      legend: {\n        display: false,\n      },\n      tooltips: {\n        enabled: false,\n      },\n      elements: {\n        point: {\n          radius: 0,\n        },\n        line: {\n          tension: 0.33,\n        },\n      },\n      layout: {\n        padding: {\n          bottom: -10,\n          left: -10,\n        },\n      },\n      scales: {\n        xAxes: [\n          {\n            gridLines: {\n              display: false,\n            },\n            ticks: {\n              display: false,\n            },\n          },\n        ],\n        yAxes: [\n          {\n            gridLines: {\n              display: false,\n            },\n            scaleLabel: {\n              display: false,\n            },\n            ticks: {\n              display: false,\n              // Avoid getting the graph line cut of at the top of the canvas.\n              // Chart.js bug link: https://github.com/chartjs/Chart.js/issues/4790\n              suggestedMax: maxValue + difference * 0.1,\n              suggestedMin: minValue - difference * 0.1,\n            },\n          },\n        ],\n      },\n    };\n  }, [maxValue, minValue]);\n\n  const getChartConfig = useCallback(\n    (chartOptions) => {\n      return {\n        type: \"line\",\n        data: {\n          labels: new Array(history.length).fill(null),\n          datasets: [\n            {\n              label: \"Today\",\n              fill: \"start\",\n              borderWidth: 1.5,\n              backgroundColor: \"rgba(50, 200, 205, 0.25)\",\n              borderColor: \"#32c8cd\",\n              data: history,\n            },\n          ],\n        },\n        options: chartOptions,\n      };\n    },\n    [history]\n  );\n\n  useEffect(() => {\n    if (!canvasRef.current) return;\n    const chartOptions = getChartOptions();\n    const chartConfig = getChartConfig(chartOptions);\n    const newChartInstance = new ChartElement(canvasRef.current, chartConfig);\n    setChartInstance(newChartInstance);\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    if (!chartInstance) return;\n    let newChartData = {\n      ...chartInstance.data,\n      ...{\n        datasets: [\n          {\n            label: \"Today\",\n            fill: \"start\",\n            borderWidth: 1.5,\n            backgroundColor: \"rgba(50, 200, 205, 0.25)\",\n            borderColor: \"#32c8cd\",\n            data: history,\n          },\n        ],\n      },\n    };\n    chartInstance.options = getChartOptions();\n    chartInstance.data = newChartData;\n    chartInstance.update();\n  }, [history, chartInstance, getChartOptions, getChartConfig]);\n\n  return (\n    <Card className=\"pt-0 h-100 stats-small\">\n      <div className=\"stats-small__data mx-auto\">\n        <h6 className=\"stats-small__label text-uppercase text-center mb-0 pt-0 mt-0\">\n          <b>QPS</b>\n        </h6>\n        <h2 className=\"my-3 mx-auto\">{qps.current}</h2>\n        <h6 className=\"stats-small__label under text-uppercase text-center\">\n          Queries/Second\n        </h6>\n      </div>\n      <canvas height=\"100\" ref={canvasRef} className=\"stats-small-1\" />\n    </Card>\n  );\n}\n\nexport default QueriesPerSecondCard;\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { Store } from \"../flux\";\nimport { PageTitle } from \"../components/Common/PageTitle\";\nimport ElapsedCard from \"../components/Task/ElapsedCard\";\nimport ProgressCard from \"../components/Task/ProgressCard\";\nimport SpeedCard from \"../components/Task/SpeedCard\";\nimport BarChartCard from \"../components/Task/BarChartCard\";\nimport QueriesPerSecond from \"../components/Task/QueriesPerSecond\";\n\nclass TaskView extends React.Component<any, any> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      taskData: Store.getTaskData(),\n    };\n    Store.on(\"update-task\", this.getData);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-task\", this.getData);\n  };\n  getData = () => {\n    const taskData = Store.getTaskData();\n    this.setState({ taskData });\n  };\n  render = () => {\n    const { taskData } = this.state;\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        <div className=\"px-4\">\n          <Row noGutters className=\"page-header mb-4\">\n            <PageTitle title=\"Task\" className=\"text-sm-left mb-3\" />\n          </Row>\n          <Row>\n            <Col md=\"6\" lg=\"6\" xl=\"3\" className=\"mb-4\">\n              <ElapsedCard elapsed={taskData.elapsed} />\n            </Col>\n            <Col md=\"6\" lg=\"6\" xl=\"3\" className=\"mb-4\">\n              <ProgressCard progress={taskData.progress} />\n            </Col>\n            <Col md=\"6\" lg=\"6\" xl=\"3\" className=\"mb-4\">\n              <QueriesPerSecond qps={taskData.qps} />\n            </Col>\n            <Col md=\"6\" lg=\"6\" xl=\"3\" className=\"mb-4\">\n              <SpeedCard speed={taskData.speed} />\n            </Col>\n          </Row>\n          <BarChartCard\n            messages={taskData.messages}\n            bytes={taskData.bytes}\n            lastUpdate={taskData.lastUpdateChart}\n          />\n        </div>\n      </Container>\n    );\n  };\n}\n\nexport default TaskView;\n","export const baseOptions = [\n  {\n    label: \"Host\",\n    placeholder: \"0.0.0.0\",\n    value: \"host\",\n  },\n  {\n    label: \"Port\",\n    placeholder: \"5000\",\n    value: \"port\",\n  },\n];\n\nexport const advancedOptions = [\n  {\n    label: \"Log\",\n    placeholder: \"/stream/log\",\n    value: \"log\",\n  },\n  {\n    label: \"Profile\",\n    placeholder: \"/stream/profile\",\n    value: \"profile\",\n  },\n  {\n    label: \"YAML\",\n    placeholder: \"/data/yaml\",\n    value: \"yaml\",\n  },\n  {\n    label: \"Shutdown\",\n    placeholder: \"/action/shutdown\",\n    value: \"shutdown\",\n  },\n  {\n    label: \"Ready\",\n    placeholder: \"/status/isready\",\n    value: \"ready\",\n  },\n];\n","import React from \"react\";\nimport { Col, FormInput } from \"shards-react\";\n\ntype Props = {\n  colSpan?: number;\n  label: string;\n  value: string;\n  placeholder: string;\n  onChange: (e: any) => void;\n};\n\nexport default function FormItem({\n  colSpan = 6,\n  label,\n  value,\n  placeholder,\n  onChange,\n}: Props) {\n  return (\n    <Col md={colSpan} className=\"form-group\">\n      <label>{label}</label>\n      <FormInput placeholder={placeholder} value={value} onChange={onChange} />\n    </Col>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Row,\n  Col,\n  Button,\n  Form,\n} from \"shards-react\";\nimport { Collapse } from \"react-bootstrap\";\n\nimport { Store, Dispatcher, Constants } from \"../../flux\";\nimport { baseOptions, advancedOptions } from \"./options\";\nimport FormItem from \"./FormItem\";\n\ntype Settings = {\n  host: string;\n  port: string | number;\n  log: string;\n  profile: string;\n  yaml: string;\n  ready: string;\n  shutdown: string;\n};\n\ntype AnyObj = {\n  [key: string]: any;\n};\n\nfunction SettingsCard() {\n  const [original, setOriginal] = useState<AnyObj>(Store.getSettings());\n  const [updates, setUpdates] = useState<AnyObj>({});\n  const [expanded, setExpanded] = useState(false);\n\n  function getData() {\n    const original = Store.getSettings();\n    setOriginal(original);\n    setUpdates({});\n  }\n\n  useEffect(() => {\n    Store.on(\"update-settings\", getData);\n\n    return function cleanup() {\n      Store.removeListener(\"update-settings\", getData);\n    };\n  }, []);\n\n  function updateSetting(setting: string, value: string) {\n    const newUpdates: { [key: string]: string } = { ...updates };\n    newUpdates[setting] = value;\n    setUpdates(newUpdates);\n  }\n\n  function saveChanges() {\n    const settings = { ...original, ...updates };\n\n    Dispatcher.dispatch({\n      actionType: Constants.SAVE_SETTINGS,\n      payload: settings,\n    });\n  }\n\n  function toggleExpand() {\n    setExpanded(!expanded);\n  }\n\n  return (\n    <Card small className=\"mb-4\">\n      <CardHeader className=\"border-bottom\">\n        <h6 className=\"m-0\">Connection Preferences</h6>\n      </CardHeader>\n      <CardBody>\n        <Form>\n          <Row form>\n            {baseOptions.map(({ label, placeholder, value }) => (\n              <FormItem\n                key={value}\n                label={label}\n                placeholder={placeholder}\n                value={value in updates ? updates[value] : original[value]}\n                onChange={(e) => updateSetting(value, e.target.value)}\n              />\n            ))}\n          </Row>\n          <Row>\n            <Col xs=\"6\">\n              <strong\n                aria-controls=\"collapsed-form\"\n                aria-expanded={expanded}\n                onClick={toggleExpand}\n                className=\"text-primary d-inline-block mb-3 cursor-pointer\"\n              >\n                Advanced{\" \"}\n                <i className=\"material-icons\">\n                  {expanded ? \"arrow_drop_up\" : \"arrow_drop_down\"}\n                </i>\n              </strong>\n            </Col>\n            <Col xs=\"6\" className=\"text-right\">\n              <Button onClick={saveChanges}>Save Changes</Button>\n            </Col>\n          </Row>\n          <Collapse in={expanded}>\n            <div id=\"collapsed-form\">\n              <strong className=\"text-muted d-block mb-3\">Endpoints</strong>\n              <Row form>\n                {advancedOptions.map(({ label, placeholder, value }) => (\n                  <FormItem\n                    key={value}\n                    label={label}\n                    placeholder={placeholder}\n                    value={value in updates ? updates[value] : original[value]}\n                    onChange={(e) => updateSetting(value, e.target.value)}\n                  />\n                ))}\n              </Row>\n            </div>\n          </Collapse>\n        </Form>\n      </CardBody>\n    </Card>\n  );\n}\n\nexport default SettingsCard;\n","import React from \"react\";\nimport { Container, Row } from \"react-bootstrap\";\nimport { PageTitle } from \"../components/Common/PageTitle\";\nimport SettingsCard from \"../components/Settings/Settings\";\n\nclass SettingsView extends React.Component {\n  render = () => {\n    return (\n      <Container fluid className=\"main-content-container px-4\">\n        <Row noGutters className=\"page-header mb-4\">\n          <PageTitle\n            title=\"Settings\"\n            className=\"text-sm-left mb-3\"\n          />\n        </Row>\n        <SettingsCard />\n      </Container>\n    );\n  };\n}\n\nexport default SettingsView;\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\n// Layout Types\nimport { IconSidebar } from \"../layouts\";\n\n// Route Views\nimport FlowView from \"../views/FlowView\";\nimport { LogsView } from \"../views/LogsView\";\nimport TaskView from \"../views/TaskView\";\nimport Settings from \"../views/Settings\";\nimport HubView from \"../views/HubView\";\nimport PackageView from \"../views/PackageView\";\nimport LogIn from \"../views/LogIn\";\n\nimport NotFound from \"../views/NotFound\";\n\nexport const dashboardRoutes = [\n  {\n    path: \"/\",\n    exact: true,\n    layout: IconSidebar,\n    component: () => <Redirect to=\"/logs\" />,\n  },\n  {\n    path: \"/logs\",\n    layout: IconSidebar,\n    component: LogsView,\n    props: {\n      usesConnection: true,\n      usesAuth: false,\n    },\n  },\n  {\n    path: \"/flow\",\n    layout: IconSidebar,\n    component: FlowView,\n    props: {\n      usesConnection: true,\n      usesAuth: false,\n    },\n  },\n  {\n    path: \"/task\",\n    layout: IconSidebar,\n    component: TaskView,\n    props: {\n      usesConnection: true,\n      usesAuth: false,\n    },\n  },\n  {\n    path: \"/settings\",\n    layout: IconSidebar,\n    component: Settings,\n    props: {\n      usesConnection: true,\n      usesAuth: false,\n    },\n  },\n  {\n    path: \"/help\",\n    layout: IconSidebar,\n    component: NotFound,\n    props: {\n      usesConnection: false,\n      usesAuth: false,\n    },\n  },\n  {\n    path: \"/home\",\n    layout: IconSidebar,\n    component: NotFound,\n    props: {\n      usesConnection: false,\n      usesAuth: false,\n    },\n  },\n  {\n    path: \"/hub\",\n    layout: IconSidebar,\n    component: HubView,\n    props: {\n      usesConnection: false,\n      usesAuth: true,\n    },\n  },\n  {\n    path: \"/package\",\n    layout: IconSidebar,\n    component: PackageView,\n    props: {\n      usesConnection: false,\n      usesAuth: true,\n    },\n  },\n  {\n    path: \"/login\",\n    layout: IconSidebar,\n    component: LogIn,\n    props: {\n      usesConnection: false,\n      usesAuth: true,\n    },\n  },\n];\n","export const { dashboardRoutes } = require(\"./Dashboard\");\nexport const { hubRoutes } = require(\"./Hub\");\n","import React from \"react\";\nimport GoogleAnalytics from \"react-ga\";\n\nGoogleAnalytics.initialize(process.env.REACT_APP_GAID || \"UA-164627626-1\");\n\nconst withTracker = (WrappedComponent: any, options = {}) => {\n  const trackPage = (page: any) => {\n    if (process.env.NODE_ENV !== \"production\") {\n      return;\n    }\n\n    GoogleAnalytics.set({\n      page,\n      ...options,\n    });\n    GoogleAnalytics.pageview(page);\n  };\n\n  const BASENAME = process.env.REACT_APP_BASENAME || \"\";\n\n  // eslint-disable-next-line\n  const HOC = class extends React.Component<any, any> {\n    componentDidMount() {\n      // eslint-disable-next-line\n      const page = this.props.location.pathname + this.props.location.search;\n      trackPage(`${BASENAME}${page}`);\n    }\n\n    componentDidUpdate(prevProps: any) {\n      const currentPage =\n        prevProps.location.pathname + prevProps.location.search;\n      const nextPage =\n        this.props.location.pathname + this.props.location.search;\n\n      if (currentPage !== nextPage) {\n        trackPage(`${BASENAME}${nextPage}`);\n      }\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  };\n\n  return HOC;\n};\n\nexport default withTracker;\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { FallbackProps } from \"react-error-boundary\";\nimport { PageTitle } from \"../components/Common/PageTitle\";\nimport { Button } from \"shards-react\";\n\nfunction FallbackPage({ error, resetErrorBoundary }: FallbackProps) {\n  return (\n    <Container fluid className=\"main-content-container p-5\">\n      <Row noGutters className=\"page-header mb-4\">\n        <PageTitle\n          title=\"Error\"\n          subtitle=\"This should not have happened\"\n          className=\"text-sm-left my-3\"\n        />\n      </Row>\n      <Row noGutters className=\"page-header mb-4\">\n        <Col xs=\"12\" sm=\"3\">\n          <p>Something went wrong:</p>\n          <pre>\n            <code className=\"text-warning\">{error!.message}</code>\n          </pre>\n        </Col>\n      </Row>\n      <Row noGutters className=\"page-header\">\n        <Col>\n          <Button onClick={resetErrorBoundary}>Try again</Button>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport { FallbackPage };\n","import React from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\n\nimport { hubRoutes as routes } from \"../routes\";\nimport withTracker from \"../withTracker\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../assets/main.scss\";\nimport \"../App.css\";\nimport { ErrorBoundary } from \"react-error-boundary\";\nimport { FallbackPage } from \"../views/FallbackPage\";\nimport { Store } from \"../flux\";\n\nconst Hub = () => {\n  document.title = \"Jina Hub\";\n  return (\n    <Router basename={\"/\"}>\n      <div>\n        {routes.map((route: any, index: number) => {\n          return (\n            <Route\n              key={index}\n              path={route.path}\n              exact={route.exact}\n              component={withTracker((props: any) => {\n                return (\n                  <route.layout {...props} {...route.props}>\n                    <ErrorBoundary\n                      FallbackComponent={FallbackPage}\n                      onReset={() => Store.init()}\n                    >\n                      <route.component {...props} />\n                    </ErrorBoundary>\n                  </route.layout>\n                );\n              })}\n            />\n          );\n        })}\n      </div>\n    </Router>\n  );\n};\n\nexport { Hub };\n","import axios from \"axios\";\nimport logger from \"../logger\";\nimport { hubURL, timeout } from \"./config\";\nlet logStream: EventSource;\nlet taskStream: EventSource;\n\nconst hub = axios.create({\n  baseURL: hubURL,\n  withCredentials: true,\n  timeout, // 30 secs\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\",\n  },\n});\n\ntype Settings = {\n  host: string;\n  port: string | number;\n  log: string;\n  profile: string;\n  yaml: string;\n  ready: string;\n  shutdown: string;\n};\n\ntype ConnectionUpdate = (messageType: string, message: string) => void;\n\ntype UpdateHandler = (update: { type: string; data: string }) => void;\n\nexport default {\n  connect: (\n    settings: Settings,\n    connectionUpdate: ConnectionUpdate,\n    logUpdate: UpdateHandler,\n    taskUpdate: UpdateHandler\n  ) => {\n    logger.log(\"api - connect - settings\", settings);\n\n    const logString = `${settings.host}:${settings.port}${\n      settings.log.startsWith(\"/\") ? settings.log : \"/\" + settings.log\n    }`;\n    logger.log(\"api - connect - logString\", logString);\n\n    if (logStream) logStream.close();\n    logStream = new EventSource(logString);\n\n    logStream.onopen = () => {\n      logger.log(\"api - logStream.onopen called\");\n      connectionUpdate(\n        \"connected\",\n        `Logserver connection established at ${settings.host}:${settings.port}`\n      );\n    };\n\n    logStream.onmessage = (m) => {\n      logUpdate({ type: \"log\", data: JSON.parse(m.data) });\n    };\n\n    logStream.onerror = (data) => {\n      logger.log(\"api - logStream.onerror - ERROR\", data);\n      connectionUpdate(\n        \"failed\",\n        `Could not connect to logserver at ${settings.host}:${settings.port}`\n      );\n      logStream.close();\n    };\n\n    const taskString = `${settings.host}:${settings.port}${\n      settings.profile.startsWith(\"/\")\n        ? settings.profile\n        : \"/\" + settings.profile\n    }`;\n    logger.log(\"api - connect - taskString\", taskString);\n\n    if (taskStream) taskStream.close();\n    taskStream = new EventSource(taskString);\n\n    taskStream.onopen = () => {\n      logger.log(\"api - taskStream.onopen called\");\n      taskUpdate({\n        type: \"connect\",\n        data: `Task connection established at ${taskString}`,\n      });\n    };\n\n    taskStream.onmessage = (m) => {\n      taskUpdate({ type: \"event\", data: JSON.parse(m.data) });\n    };\n\n    taskStream.onerror = (data) => {\n      logger.log(\"api - taskStream.onerror - ERROR\", data);\n      taskUpdate({\n        type: \"error\",\n        data: `Could not get profile data from ${taskString}`,\n      });\n      taskStream.close();\n    };\n  },\n  getProfile: async () => {\n    const result = await hub.get(\"profile\");\n    return result.data;\n  },\n  getYAML: async (settings: Settings) => {\n    const connectionString = `${settings.host}:${settings.port}${\n      settings.yaml.startsWith(\"/\") ? settings.yaml : \"/\" + settings.yaml\n    }`;\n    logger.log(\"api - getYAML - connectionString\", connectionString);\n    const result = await axios.get(connectionString, { timeout });\n    return result.data;\n  },\n  getImages: async () => {\n    const result = await hub.get(\"list\");\n    return result.data;\n  },\n  getImage: async (id: string) => {\n    const result = await hub.get(`/images/${id}`);\n    return result.data;\n  },\n  postRating: async (imageId: string, stars: any) => {\n    const result = await hub.post(`/images/${imageId}/ratings`, { stars });\n    return result.data;\n  },\n  postReview: async (imageId: string, content: any) => {\n    const result = await hub.post(`/images/${imageId}/reviews`, { content });\n    return result.data;\n  },\n  searchHub: async (category: string, q: string, sort: string) => {\n    const result = await hub.get(\n      `/images?category=${category}&q=${q}&sort=${sort}`\n    );\n    return result.data;\n  },\n  logOut: async () => {\n    const result = await hub.post(\"/auth/logout\");\n    return result.data;\n  },\n};\n","export default {\n  pokedex: {\n    name: \"Pokedex Query\",\n    type: \"example\",\n    yaml: `!Flow\n    with:\n      read_only: true\n      rest_api: true\n      port_expose: $JINA_PORT\n      board:\n        canvas:\n          gateway:\n            x: 250\n            y: 150\n          chunk_seg:\n            x: 250\n            y: 268\n          tf_encode:\n            x: 250\n            y: 420\n          chunk_idx:\n            x: 250\n            y: 600\n          ranker:\n            x: 250\n            y: 836\n          doc_idx:\n            x: 249\n            y: 985\n    pods:\n      gateway: {}\n      chunk_seg:\n        uses: pods/craft.yml\n        parallel: $PARALLEL\n        needs: gateway\n      tf_encode:\n        uses: pods/encode.yml\n        parallel: $PARALLEL\n        timeout_ready: 600000\n        needs: chunk_seg\n      chunk_idx:\n        uses: pods/chunk.yml\n        shards: $SHARDS\n        separated_workspace: true\n        polling: all\n        uses_reducing: _merge_all\n        timeout_ready: 100000\n        needs: tf_encode\n      ranker:\n        uses: BiMatchRanker\n        needs: chunk_idx\n      doc_idx:\n        uses: pods/doc.yml\n        needs: ranker\n    \n    `,\n  },\n  flower: {\n    name: \"Flower Search Query\",\n    type: \"example\",\n    yaml: `!Flow\n    with:\n      read_only: true\n      port_expose: $JINA_PORT\n      board:\n        canvas:\n          gateway:\n            x: 250\n            y: 150\n          loader:\n            x: 250\n            y: 257\n          flipper:\n            x: 252\n            y: 407\n          normalizer:\n            x: 239\n            y: 563\n          encoder:\n            x: 252\n            y: 712\n          chunk_indexer:\n            x: 250\n            y: 872\n          ranker:\n            x: 252\n            y: 1066\n          doc_indexer:\n            x: 253\n            y: 1199\n    pods:\n      gateway: {}\n      loader:\n        uses: yaml/craft-load.yml\n        read_only: true\n        needs: gateway\n      flipper:\n        uses: yaml/craft-flip.yml\n        read_only: true\n        needs: loader\n      normalizer:\n        uses: yaml/craft-normalize.yml\n        read_only: true\n        needs: flipper\n      encoder:\n        uses: $ENCODER\n        timeout_ready: 600000\n        read_only: true\n        needs: normalizer\n      chunk_indexer:\n        uses: yaml/index-chunk.yml\n        separated_workspace: true\n        polling: all\n        uses_reducing: _merge_all\n        needs: encoder\n      ranker:\n        uses: MinRanker\n        needs: chunk_indexer\n      doc_indexer:\n        uses: yaml/index-doc.yml\n        needs: ranker  \n    `,\n  },\n  southpark: {\n    name: \"Southpark Query\",\n    type: \"example\",\n    yaml: `!Flow\n    with:\n      read_only: true\n      port_expose: $JINA_PORT\n      board:\n        canvas:\n          gateway:\n            x: 254\n            y: 147\n          splittor:\n            x: 254\n            y: 270\n          encoder:\n            x: 254\n            y: 448\n          chunk_indexer:\n            x: 251\n            y: 645\n          ranker:\n            x: 255\n            y: 862\n          doc_indexer:\n            x: 256\n            y: 1002\n    pods:\n      gateway: {}\n      splittor:\n        uses: pods/craft-split.yml\n        parallel: $PARALLEL\n        read_only: true\n        needs: gateway\n      encoder:\n        uses: pods/encode.yml\n        parallel: $PARALLEL\n        timeout_ready: 60000\n        read_only: true\n        needs: splittor\n      chunk_indexer:\n        uses: pods/index-chunk.yml\n        shards: $SHARDS\n        separated_workspace: true\n        polling: all\n        reducing_uses: _merge_all\n        needs: encoder\n      ranker:\n        uses: MinRanker\n        needs: chunk_indexer\n      doc_indexer:\n        uses: pods/index-doc.yml\n        needs: ranker\n    `,\n  },\n};\n","import { EventEmitter } from \"events\";\nimport _ from \"lodash\";\nimport { nanoid } from \"nanoid\";\nimport { Constants, Dispatcher, transformLog } from \"./\";\nimport { parseYAML, formatForFlowchart, formatSeconds } from \"../helpers\";\nimport api from \"./api\";\nimport logger from \"../logger\";\nimport propertyList from \"../data/podProperties.json\";\nimport getSidebarNavItems from \"../data/sidebar-nav-items\";\nimport exampleFlows from \"../data/exampleFlows\";\n\nconst MAX_CHART_TICKS = 60;\nconst HIDE_BANNER_TIMEOUT = 5000;\nconst TASK_UPDATE_INTERVAL = 500;\nconst CHART_LEVELS = [\n  \"INFO\",\n  \"SUCCESS\",\n  \"WARNING\",\n  \"ERROR\",\n  \"CRITICAL\",\n  \"DEBUG\",\n];\n\nfunction getExampleFlows() {\n  const flows: LooseObject = {};\n\n  Object.entries(exampleFlows).forEach(([id, flow]) => {\n    const parsed = parseYAML(flow.yaml);\n    let canvas;\n    try {\n      canvas = parsed.data.with.board.canvas;\n    } catch (e) {\n      canvas = {};\n    }\n    const formatted = formatForFlowchart(parsed.data.pods, canvas);\n    flows[id] = {\n      ...flow,\n      flow: formatted,\n    };\n  });\n\n  return flows;\n}\n\nfunction getUserFlows() {\n  const storedFlows = localStorage.getItem(\"userFlows\");\n  const userFlows = storedFlows ? JSON.parse(storedFlows) : null;\n  return _.isEmpty(userFlows)\n    ? {\n        _userFlow: {\n          name: \"Custom Flow 1\",\n          type: \"user-generated\",\n          flow: getInitialFlow(),\n        },\n      }\n    : userFlows;\n}\n\nfunction getInitialFlow() {\n  return {\n    selected: {},\n    hovered: {},\n    scale: 1,\n    nodes: {\n      gateway: {\n        id: \"gateway\",\n        label: \"gateway\",\n        ports: {\n          outPort: {\n            id: \"outPort\",\n            type: \"output\",\n          },\n        },\n        properties: {},\n        position: { x: 629, y: 72 },\n      },\n    },\n    links: {},\n    offset: { x: 0, y: 0 },\n  };\n}\n\nfunction getInitialLevelOccurences() {\n  let occurences: LooseObject = {\n    lastLog: 0,\n    levels: {},\n  };\n  CHART_LEVELS.forEach((level) => {\n    occurences.levels[level] = 0;\n  });\n  return occurences;\n}\n\nfunction getInitialStore(): LooseObject {\n  const initialStore: LooseObject = {\n    settings: {\n      host: localStorage.getItem(\"preferences-host\") || \"http://localhost\",\n      port: localStorage.getItem(\"preferences-port\") || 5000,\n      log: localStorage.getItem(\"preferences-log\") || \"/stream/log\",\n      profile: localStorage.getItem(\"preferences-profile\") || \"/stream/profile\",\n      yaml: localStorage.getItem(\"preferences-yaml\") || \"/data/yaml\",\n      shutdown:\n        localStorage.getItem(\"preferences-shutdown\") || \"/action/shutdown\",\n      ready: localStorage.getItem(\"preferences-ready\") || \"/status/ready\",\n    },\n    images: {},\n    hub: [],\n    banner: false,\n    connected: false,\n    loading: true,\n    modal: false,\n    menuVisible: false,\n    navItems: getSidebarNavItems(),\n    flows: {\n      ...getUserFlows(),\n      ...getExampleFlows(),\n    },\n    selectedFlow: \"_userFlow\",\n    logs: [],\n    logSources: {},\n    logLevels: {},\n    logLevelOccurences: {},\n    logIndex: false,\n    summaryCharts: {},\n    processes: {},\n    taskData: {\n      qps: {\n        current: 0,\n        history: new Array(30).fill(0),\n      },\n      elapsed: {\n        task_name: \"No Current Task\",\n        seconds: \"0s\",\n      },\n      progress: {\n        currentRequest: 0,\n        bar_len: 0,\n        num_bars: 0,\n      },\n      speed: {\n        current: 0,\n        unit: \"units\",\n        history: new Array(30).fill(0),\n      },\n      lastUpdateChart: new Date(),\n      messages: [],\n      bytes: [],\n    },\n    selectedNode: null,\n    modalParams: {},\n    currentTab: \"logStream\",\n  };\n  return initialStore;\n}\n\nlet _store: any = getInitialStore();\nlet _updateChartInterval: any;\nlet _updateTaskInterval: any;\nlet _bannerTimeout: any;\n\nif (window.location.hostname === \"localhost\") logger.enable();\n\ntype DispatchProps = {\n  actionType: string;\n  payload: any;\n};\n\ninterface LooseObject {\n  [key: string]: any;\n}\n\nclass StoreBase extends EventEmitter {\n  constructor() {\n    super();\n    Dispatcher.register(this.registerActions);\n    this.init();\n    (window as any).peakLogs = this.getLogs;\n    (window as any).peakStore = () => console.log(_store);\n  }\n  registerActions = ({ actionType, payload }: DispatchProps) => {\n    switch (actionType) {\n      case Constants.TOGGLE_SIDEBAR:\n        this.toggleSidebar();\n        break;\n      case Constants.SHOW_MODAL:\n        this.showModal(payload);\n        break;\n      case Constants.SHOW_BANNER:\n        this.showBanner(...(payload as [string, string]));\n        break;\n      case Constants.IMPORT_CUSTOM_YAML:\n        this.importCustomYAML(payload);\n        break;\n      case Constants.CLOSE_MODAL:\n        this.closeModal();\n        break;\n      case Constants.SHOW_LOG_AT_INDEX:\n        this.showLogAtIndex(payload);\n        break;\n      case Constants.SAVE_SETTINGS:\n        this.saveSettings(payload);\n        break;\n      case Constants.RECONNECT:\n        this.reconnect();\n        break;\n      case Constants.POST_RATING:\n        this.postRating(payload);\n        break;\n      case Constants.POST_REVIEW:\n        this.postReview(payload);\n        break;\n      case Constants.SEARCH_HUB:\n        this.searchHub(payload);\n        break;\n      case Constants.LOG_OUT:\n        this.logOut();\n        break;\n      case Constants.LOAD_FLOW:\n        this.loadFlow(payload);\n        break;\n      case Constants.SHOW_POD_IN_FLOW:\n        this.showPodByLabel(payload);\n        break;\n      case Constants.CREATE_NEW_FLOW:\n        this.createNewFlow();\n        break;\n      case Constants.DUPLICATE_FLOW:\n        this.createNewFlow(payload);\n        break;\n      case Constants.UPDATE_FLOW:\n        this.updateFlow(payload);\n        break;\n      case Constants.DELETE_FLOW:\n        this.deleteFlow(payload);\n        break;\n      default:\n    }\n  };\n\n  init = async () => {\n    this.clearIntervals();\n    _store = getInitialStore();\n\n    await this.initFlowChart();\n    this.initLogStream();\n    this.initHub();\n    this.initUser();\n\n    this.emit(\"update-ui\");\n    this.emit(\"update-settings\");\n  };\n\n  clearIntervals = () => {\n    if (_updateChartInterval) clearInterval(_updateChartInterval);\n    if (_updateTaskInterval) clearInterval(_updateTaskInterval);\n  };\n\n  initFlowChart = async () => {\n    let flow;\n\n    try {\n      let str = await api.getYAML(_store.settings);\n      flow = parseYAML(str);\n    } catch (e) {\n      logger.log(\"initFlowChart - parseYAML[API] ERROR\", e);\n      return;\n    }\n\n    let canvas;\n    try {\n      canvas = flow.data.with.board.canvas;\n    } catch (e) {\n      canvas = {};\n    }\n\n    logger.log(\"initFlowChart - flow\", flow);\n    logger.log(\"initFlowChart - canvas\", canvas);\n\n    const parsed = formatForFlowchart(flow.data.pods, canvas);\n    parsed.with = flow.data.with;\n\n    logger.log(\"initFlowChart - parsed\", parsed);\n\n    let flows: LooseObject = {};\n    flows.connectedFlow = {\n      flow: parsed,\n      name: \"Network Flow\",\n      type: \"remote\",\n    };\n    _store.flows = { ...flows, ..._store.flows };\n    _store.selectedFlow = \"connectedFlow\";\n\n    this.emit(\"update-ui\");\n    this.emit(\"update-flowchart\");\n  };\n\n  initLogStream = () => {\n    api.connect(\n      _store.settings,\n      this.handleLogConnectionStatus,\n      this.handleNewLog,\n      this.handleNewTaskEvent\n    );\n    _updateTaskInterval = setInterval(\n      () => this.emit(\"update-task\"),\n      TASK_UPDATE_INTERVAL\n    );\n  };\n\n  handleLogConnectionStatus = (status: string, message: string) => {\n    logger.log(\"handleLogConnectionStatus - status\", status);\n    logger.log(\"handleLogConnectionStatus - message\", message);\n    _store.loading = false;\n    if (status === \"connected\") {\n      _store.connected = true;\n      return this.showBanner(message, \"success\");\n    } else {\n      _store.connected = false;\n    }\n    this.emit(\"update-ui\");\n  };\n\n  handleNewLog = (message: { data: any }) => {\n    const { data } = message;\n    const log = transformLog(data, _store.logs.length);\n\n    const { process, name, levelname, unixTime } = log;\n\n    _store.logs.push(log);\n    _store.processes[process] = log.name;\n\n    if (_store.logSources[name]) _store.logSources[name]++;\n    else _store.logSources[name] = 1;\n\n    if (_store.logLevels[levelname]) _store.logLevels[levelname]++;\n    else _store.logLevels[levelname] = 1;\n\n    if (!_store.logLevelOccurences[unixTime])\n      _store.logLevelOccurences[unixTime] = getInitialLevelOccurences();\n\n    _store.logLevelOccurences[unixTime].levels[levelname]++;\n    _store.logLevelOccurences[unixTime].lastLog = log.idx;\n\n    this.emit(\"update-logs\");\n  };\n\n  handleNewTaskEvent = (message: { data: any }) => {\n    const { data } = message;\n\n    const event = data;\n\n    const {\n      task_name,\n      process,\n      bar_len,\n      num_bars,\n      elapsed,\n      speed,\n      speed_unit,\n      bytes_recv,\n      bytes_sent,\n      msg_recv,\n      msg_sent,\n      num_reqs,\n      qps,\n    } = event;\n\n    if (bar_len && num_bars) {\n      _store.taskData.progress.currentRequest = num_reqs;\n      _store.taskData.progress.bar_len = bar_len;\n      _store.taskData.progress.num_bars = num_bars;\n    }\n\n    if (msg_recv && msg_sent) {\n      let index = _store.taskData.messages\n        .map((obj: any) => obj.process)\n        .indexOf(process);\n      let msgData = {\n        process,\n        sent: msg_sent,\n        received: msg_recv,\n        node: _store.processes[process],\n      };\n      let bytesData = {\n        process,\n        sent: bytes_sent,\n        received: bytes_recv,\n        node: _store.processes[process],\n      };\n      if (index < 0) {\n        _store.taskData.messages.push(msgData);\n        _store.taskData.bytes.push(bytesData);\n      } else {\n        _store.taskData.messages[index] = msgData;\n        _store.taskData.bytes[index] = bytesData;\n      }\n      _store.taskData.messages = _store.taskData.messages\n        .sort((a: any, b: any) => b.sent + b.received - (a.sent + a.received))\n        .slice(0, 20);\n      _store.taskData.bytes = _store.taskData.bytes\n        .sort((a: any, b: any) => b.sent + b.received - (a.sent + a.received))\n        .slice(0, 20);\n      _store.taskData.lastUpdateChart = new Date();\n    }\n\n    if (qps) {\n      _store.taskData.qps.current = parseFloat(qps).toFixed(1);\n      _store.taskData.qps.history.push(parseFloat(qps).toFixed(3));\n      _store.taskData.qps.history.shift();\n    }\n\n    if (speed && speed_unit) {\n      _store.taskData.speed.unit = speed_unit;\n      _store.taskData.speed.current = parseFloat(speed).toFixed(1);\n      _store.taskData.speed.history.push(parseFloat(speed).toFixed(3));\n      _store.taskData.speed.history.shift();\n    }\n\n    if (elapsed) {\n      _store.taskData.elapsed.seconds = formatSeconds(parseInt(elapsed));\n      _store.taskData.elapsed.task_name = `Task: ${task_name}`;\n    }\n  };\n\n  initHub = async () => {\n    try {\n      const images = await api.getImages();\n      _store.hub = images;\n    } catch (e) {\n      _store.hub = false;\n    }\n    this.emit(\"update-hub\");\n  };\n\n  initUser = async () => {\n    const user = await api.getProfile();\n    _store.user = user;\n    this.emit(\"update-user\");\n  };\n\n  reconnect() {\n    this.init();\n  }\n\n  toggleSidebar() {\n    _store.menuVisible = !_store.menuVisible;\n    this.emit(\"update-ui\");\n  }\n\n  showLogAtIndex = (logIndex: number) => {\n    if (!logIndex || !_store.logs[logIndex]) return;\n    _store.logIndex = logIndex;\n    this.emit(\"show-log\");\n  };\n\n  showPodByLabel = (label: string) => {\n    let selected: LooseObject = {};\n    let x = 0;\n    let y = 0;\n    Object.entries(_store.flowchart.nodes).forEach(\n      ([key, value]: [string, any]) => {\n        if (value.label === label) {\n          selected.id = key;\n          selected.type = \"node\";\n          x = value.position.x * -1 + 40;\n          y = value.position.y * -1 + 100;\n        }\n      }\n    );\n    _store.flowchart.selected = selected;\n    _store.flowchart.offset = { x, y };\n    this.emit(\"update-flowchart\");\n    window.location.hash = \"#/flow\";\n  };\n\n  importCustomYAML = (customYAML?: string) => {\n    logger.log(\"importCustomYAML - customYAML\", customYAML);\n    this.createNewFlow(customYAML);\n    this.closeModal();\n    this.emit(\"update-flowchart\");\n  };\n\n  loadFlow = (flowId: string) => {\n    _store.selectedFlow = flowId;\n    this.emit(\"update-flowchart\");\n  };\n\n  updateFlow = (newFlow: any) => {\n    _store.flows[_store.selectedFlow].flow = newFlow;\n    this.saveFlowsToStorage();\n    this.emit(\"update-flowchart\");\n  };\n\n  createNewFlow = (customYAML?: string) => {\n    let prefixString = \"Custom Flow\";\n\n    let userFlows = Object.values(_store.flows).filter((flow: any) =>\n      flow.name.startsWith(prefixString)\n    );\n\n    const flowNumbers = userFlows\n      .map((f: any) => parseInt(f.name.substring(prefixString.length)) || 0)\n      .sort((a, b) => a - b);\n\n    const largestNumber = flowNumbers[flowNumbers.length - 1] || 0;\n\n    const id = nanoid();\n\n    let flow;\n\n    if (customYAML) {\n      const parsed = parseYAML(customYAML);\n      let canvas;\n      try {\n        canvas = parsed.data.with.board.canvas;\n      } catch (e) {\n        canvas = {};\n      }\n      flow = formatForFlowchart(parsed.data.pods, canvas);\n    } else flow = getInitialFlow();\n\n    _store.flows[id] = {\n      name: `${prefixString} ${largestNumber + 1}`,\n      type: \"user-generated\",\n      flow,\n    };\n\n    _store.selectedFlow = id;\n    this.saveFlowsToStorage();\n    this.emit(\"update-flowchart\");\n  };\n\n  deleteFlow = (flowId: string) => {\n    _store.flows = _.omit(_store.flows, flowId);\n\n    const nonExampleFlows = Object.entries(_store.flows).filter(\n      ([id, flow]: [string, any]) => flow.type !== \"example\"\n    );\n\n    if (_store.selectedFlow === flowId && nonExampleFlows.length) {\n      _store.selectedFlow = nonExampleFlows[0][0];\n    } else if (!nonExampleFlows.length) {\n      _store.flows = {\n        _userFlow: {\n          name: \"Custom Flow 1\",\n          type: \"user-generated\",\n          flow: getInitialFlow(),\n        },\n        ..._store.flows,\n      };\n      _store.selectedFlow = \"_userFlow\";\n    }\n\n    this.saveFlowsToStorage();\n    this.emit(\"update-flowchart\");\n  };\n\n  saveFlowsToStorage = () => {\n    let toSave: LooseObject = {};\n    const { flows } = _store;\n    Object.entries(flows).forEach(([id, flow]: [string, any]) => {\n      if (flow.type === \"user-generated\") toSave[id] = flow;\n    });\n    localStorage.setItem(\"userFlows\", JSON.stringify(toSave));\n  };\n\n  saveSettings = (settings: LooseObject) => {\n    logger.log(\"saveSettings - settings\", settings);\n    Object.keys(settings).forEach((key) => {\n      localStorage.setItem(`preferences-${key}`, settings[key]);\n    });\n    setTimeout(this.init, 100);\n  };\n\n  postRating = async ({ imageId, stars }: { imageId: string; stars: any }) => {\n    if (!_store.user) return (window.location.hash = \"#/login\");\n    let result;\n    try {\n      result = await api.postRating(imageId, stars);\n    } catch (e) {\n      let error = String(e).includes(\"409\") ? \"Already Rated\" : e;\n      return this.showError(error);\n    }\n    if (result.error) this.showError(result.error);\n    else if (result.data) {\n      const image = result.data;\n      _store.images[image.id] = image;\n      this.showBanner(\"Rating successfully posted\", \"success\");\n    }\n    this.emit(\"update-hub\");\n  };\n\n  postReview = async ({\n    imageId,\n    content,\n  }: {\n    imageId: string;\n    content: any;\n  }) => {\n    if (!_store.user) {\n      this.closeModal();\n      return (window.location.hash = \"#/login\");\n    }\n    this.closeModal();\n    let result;\n    try {\n      result = await api.postReview(imageId, content);\n    } catch (e) {\n      let error = String(e).includes(\"409\") ? \"Already Reviewed\" : e;\n      return this.showError(error);\n    }\n    if (result.error) this.showError(result.error);\n    else if (result.data) {\n      const image = result.data;\n      _store.images[image.id] = image;\n      this.showBanner(\"Review successfully posted\", \"success\");\n    }\n    this.emit(\"update-hub\");\n  };\n\n  logOut = async () => {\n    await api.logOut();\n    window.location.reload();\n  };\n\n  searchHub = async ({\n    category,\n    q,\n    sort,\n  }: {\n    category: string;\n    q: string;\n    sort: string;\n  }) => {\n    const images = await api.searchHub(category, q, sort);\n    _store.hub = images;\n    this.emit(\"update-hub\");\n  };\n\n  showBanner = (message: string, theme: string) => {\n    if (_bannerTimeout) clearTimeout(_bannerTimeout);\n    _store.banner = { message: String(message), theme };\n    _bannerTimeout = setTimeout(this.hideBanner, HIDE_BANNER_TIMEOUT);\n    this.emit(\"update-ui\");\n  };\n\n  hideBanner = () => {\n    _store.banner = false;\n    this.emit(\"update-ui\");\n  };\n\n  showError = (message: string) => {\n    this.showBanner(message, \"error\");\n  };\n\n  showModal = (data: { modal: string; modalParams: any }) => {\n    const { modal, modalParams } = data;\n    _store.modal = modal;\n    _store.modalParams = modalParams || {};\n    this.emit(\"update-ui\");\n  };\n\n  closeModal = () => {\n    _store.modal = false;\n    _store.modalParams = {};\n    this.emit(\"update-ui\");\n  };\n\n  getMenuState() {\n    return _store.menuVisible;\n  }\n\n  getSidebarItems() {\n    return _store.navItems;\n  }\n\n  getCurrentTab = () => {\n    return _store.currentTab;\n  };\n\n  getUser = () => {\n    return _store.user;\n  };\n\n  getHubImages = () => {\n    return _store.hub;\n  };\n\n  getHubImage = async (imageId: string) => {\n    if (!_store.images[imageId]) {\n      _store.images[imageId] = await api.getImage(imageId);\n    }\n    return _store.images[imageId];\n  };\n\n  getSettings = () => {\n    return _store.settings;\n  };\n\n  getBanner = () => {\n    return _store.banner;\n  };\n\n  getModal = () => {\n    return _store.modal;\n  };\n\n  getModalParams = () => {\n    return _store.modalParams;\n  };\n\n  getLogs = () => {\n    return _store.logs;\n  };\n\n  getLogSources = () => {\n    return _store.logSources;\n  };\n\n  getLogLevels = () => {\n    return _store.logLevels;\n  };\n\n  getSummaryCharts = () => {\n    return _store.summaryCharts;\n  };\n\n  getLogLevelCharts = (numSeconds: number = 60) => {\n    const emptyItem = getInitialLevelOccurences();\n    const step = numSeconds / MAX_CHART_TICKS;\n    const data = [];\n    const now = Math.floor(+new Date() / 1000);\n\n    for (let i = now - numSeconds; i < now; i += step) {\n      let item = _.cloneDeep(emptyItem);\n      for (let j = i; j < i + step; ++j) {\n        const occurence = _store.logLevelOccurences[j];\n        if (!occurence) continue;\n        item.lastLog = occurence.lastLog;\n        Object.entries(occurence.levels).forEach(([level, amount]) => {\n          item.levels[level] = item.levels[level] + amount;\n        });\n      }\n      data.push(item);\n    }\n\n    return { data, numSeconds, numTicks: MAX_CHART_TICKS, lastTimestamp: now };\n  };\n\n  getLogLevelOccurences = () => {\n    return _store.logLevels;\n  };\n\n  getTaskData = () => {\n    return _store.taskData;\n  };\n\n  getActivePanel = () => {\n    const path = window.location.hash.substring(2, window.location.hash.length);\n    if (path.startsWith(\"flow\")) return \"flow\";\n    if (path.startsWith(\"logs\")) return \"logs\";\n    if (path.startsWith(\"hub\") || path.startsWith(\"package\")) return \"hub\";\n    if (path.startsWith(\"task\")) return \"task\";\n    return \"neither\";\n  };\n\n  getConnectionStatus = () => {\n    return _store.connected;\n  };\n\n  isLoading = () => {\n    return _store.loading;\n  };\n\n  getFlowchart = () => {\n    return _store.flows[_store.selectedFlow];\n  };\n\n  getFlows = () => {\n    return _store.flows;\n  };\n\n  getSelectedFlowId = () => {\n    return _store.selectedFlow;\n  };\n\n  getAvailableProperties = () => {\n    return propertyList;\n  };\n\n  getIndexedLog = () => {\n    return _store.logIndex;\n  };\n\n  getStoreCopy = () => {\n    return _.cloneDeep(_store);\n  };\n}\n\nexport const Store = new StoreBase();\n","export default function () {\n  return [\n    {\n      items: [\n        {\n          title: \"Home\",\n          to: \"/home\",\n          htmlBefore: '<i class=\"material-icons\">home</i>',\n          htmlAfter: \"\",\n          matches: [\"home\"],\n        },\n        {\n          title: \"Log Stream\",\n          to: \"/logs\",\n          htmlBefore: '<i class=\"material-icons\">insert_comment</i>',\n          htmlAfter: \"\",\n          matches: [\"logs\"],\n        },\n        {\n          title: \"Task\",\n          to: \"/task\",\n          htmlBefore: '<i class=\"material-icons\">assessment</i>',\n          htmlAfter: \"\",\n          matches: [\"task\"],\n        },\n        {\n          title: \"Flow Design\",\n          to: \"/flow\",\n          htmlBefore: '<i class=\"material-icons\">device_hub</i>',\n          htmlAfter: \"\",\n          matches: [\"flow\"],\n        },\n        {\n          title: \"Hub\",\n          to: \"/hub\",\n          htmlBefore: '<i class=\"material-icons\">store</i>',\n          htmlAfter: \"\",\n          matches: [\"hub\", \"package\"],\n        },\n        {\n          title: \"Settings\",\n          to: \"/settings\",\n          htmlBefore: '<i class=\"material-icons\">settings</i>',\n          htmlAfter: \"\",\n          matches: [\"settings\"],\n        },\n        {\n          title: \"Help\",\n          to: \"/help\",\n          htmlBefore: '<i class=\"material-icons\">help</i>',\n          htmlAfter: \"\",\n          matches: [\"help\"],\n        },\n      ],\n    },\n  ];\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ThemeProvider } from \"emotion-theming\";\nimport { theme } from \"./theme\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./assets/main.scss\";\nimport \"./App.css\";\n\nlet App;\n\nif (process.env.REACT_APP_TARGET === \"dashboard\") {\n  const { Dashboard } = require(\"./apps/Dashboard\");\n  App = Dashboard;\n} else {\n  const { Hub } = require(\"./apps/Hub\");\n  App = Hub;\n}\n\nReactDOM.render(\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n","const PERSIAN_GREEN = \"#009999\";\nconst GOLDEN_TANOI = \"#FFCC66\";\nconst BITTER_SWEET = \"#ff6666\";\nconst SCOOTER_GREEN = \"#32C8CD\";\n\nconst theme = {\n  palette: {\n    background: { default: \"#FFFFFF\" },\n    primary: {\n      main: PERSIAN_GREEN,\n    },\n    secondary: { main: GOLDEN_TANOI },\n    warning: { main: GOLDEN_TANOI },\n    error: { main: BITTER_SWEET },\n    success: { main: PERSIAN_GREEN },\n    info: { main: SCOOTER_GREEN },\n  },\n};\n\nexport { theme };\n","export const timeout = 15000;\nexport const hubURL = \"https://hubapi.jina.ai\";\n// export const hubURL:'http://localhost:3040';\n","import React, { ReactNode } from \"react\";\nimport { Card, Row, Col } from \"react-bootstrap\";\n\ntype Props = {\n  title: ReactNode;\n  content: string;\n  icon: string;\n  theme: string;\n  link: string;\n};\n\nfunction HelpCard({ title, content, icon, theme, link }: Props) {\n  return (\n    <a\n      className=\"unstyled-link\"\n      href={link}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      <Card className=\"h-100\">\n        <Card.Body className=\"pt-3\">\n          <Row className=\"align-items-center\">\n            <Col xs=\"8\">\n              <h4>{title}</h4>\n            </Col>\n            <Col xs=\"4\">\n              <h1 className=\"float-right\">\n                <span className={`${icon} log-${theme}`} />\n              </h1>\n            </Col>\n          </Row>\n          <Row>\n            <Col>{content}</Col>\n          </Row>\n        </Card.Body>\n      </Card>\n    </a>\n  );\n}\n\nexport { HelpCard };\n","import React from \"react\";\nimport { Container, Row, Col } from \"shards-react\";\nimport { HelpCard } from \"../components/Common/HelpCard\";\nimport { PageTitle } from \"../components/Common/PageTitle\";\n\nconst NotFound = () => (\n  <Container fluid className=\"main-content-container px-4\">\n    <Row noGutters className=\"page-header mb-4\">\n      <PageTitle title=\"Resources\" className=\"text-sm-left mb-3\" />\n    </Row>\n    <Row>\n      <Col md=\"4\" lg=\"3\" className=\"mb-4\">\n        <HelpCard\n          title=\"Jina 101\"\n          content=\"Understanding all key concepts of Jina in 3 minutes!\"\n          link=\"https://101.jina.ai\"\n          icon=\"fas fa-egg\"\n          theme=\"warning\"\n        />\n      </Col>\n      <Col md=\"4\" lg=\"3\" className=\"mb-4\">\n        <HelpCard\n          title=\"Jina Docs\"\n          content=\"The best way to learn Jina in depth.\"\n          link=\"https://docs.jina.ai\"\n          icon=\"fas fa-book\"\n          theme=\"primary\"\n        />\n      </Col>\n      <Col md=\"4\" lg=\"3\" className=\"mb-4\">\n        <HelpCard\n          title='Jina \"Hello World\"'\n          content=\"A simple demo of image neural search for Fashion-MNIST.\"\n          link=\"https://github.com/jina-ai/jina#jina-hello-world-\"\n          icon=\"fas fa-globe-europe\"\n          theme=\"error\"\n        />\n      </Col>\n      <Col md=\"4\" lg=\"3\" className=\"mb-4\">\n        <HelpCard\n          title={\n            <span>\n              Visit us on <span className=\"text-nowrap\">Github!</span>\n            </span>\n          }\n          content=\"Explore more exciting open-source projects from us.\"\n          link=\"https://opensource.jina.ai\"\n          icon=\"fab fa-github\"\n          theme=\"info\"\n        />\n      </Col>\n      <Col md=\"4\" lg=\"3\" className=\"mb-4\">\n        <HelpCard\n          title=\"We are hiring!\"\n          content=\"Join us and build the next neural search eco system!\"\n          link=\"https://www.linkedin.com/company/jinaai/jobs/\"\n          icon=\"fab fa-linkedin\"\n          theme=\"linkedin\"\n        />\n      </Col>\n    </Row>\n  </Container>\n);\n\nexport default NotFound;\n"],"sourceRoot":""}